#line 2 "Scanner.cpp"

#line 4 "Scanner.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 4
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

    /* The c++ scanner is a mess. The FlexLexer.h header file relies on the
     * following macro. This is required in order to pass the c++-multiple-scanners
     * test in the regression suite. We get reports that it breaks inheritance.
     * We will address this in a future release of flex, or omit the C++ scanner
     * altogether.
     */
    #define yyFlexLexer yyFlexLexer

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#ifndef SIZE_MAX
#define SIZE_MAX               (~(size_t)0)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* begin standard C++ headers. */
#include <iostream>
#include <errno.h>
#include <cstdlib>
#include <cstdio>
#include <cstring>
/* end standard C++ headers. */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an
 *   integer in range [0..255] for use as an array index.
 */
#define YY_SC_TO_UI(c) ((YY_CHAR) (c))

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *
/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START
/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )
#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

extern int yyleng;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2
    
    /* Note: We specifically omit the test for yy_rule_can_match_eol because it requires
     *       access to the local variable yy_act. Since yyless() is a macro, it would break
     *       existing scanners that call yyless() from OUTSIDE yylex.
     *       One obvious solution it to make yy_act a global. I tried that, and saw
     *       a 5% performance hit in a non-yylineno scanner, because yy_act is
     *       normally declared as a register variable-- so it is not worth it.
     */
    #define  YY_LESS_LINENO(n) \
            do { \
                int yyl;\
                for ( yyl = n; yyl < yyleng; ++yyl )\
                    if ( yytext[yyl] == '\n' )\
                        --yylineno;\
            }while(0)
    #define YY_LINENO_REWIND_TO(dst) \
            do {\
                const char *p;\
                for ( p = yy_cp-1; p >= (dst); --p)\
                    if ( *p == '\n' )\
                        --yylineno;\
            }while(0)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )
#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{

	std::streambuf* yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)
/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

void *yyalloc ( yy_size_t  );
void *yyrealloc ( void *, yy_size_t  );
void yyfree ( void *  );

#define yy_new_buffer yy_create_buffer
#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}
#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}
#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */
#define YY_SKIP_YYWRAP
typedef flex_uint8_t YY_CHAR;

#define yytext_ptr yytext
#define YY_INTERACTIVE

#include <FlexLexer.h>

int yyFlexLexer::yywrap() { return 1; }

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
	(yy_c_buf_p) = yy_cp;
#define YY_NUM_RULES 106
#define YY_END_OF_BUFFER 107
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static const flex_int16_t yy_accept[1145] =
    {   0,
        0,    0,  107,  106,   99,  100,  106,   68,   74,   70,
       71,   68,   75,   95,  106,   76,   68,   68,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   72,
       73,   98,   99,    0,    0,    0,  100,    0,  101,    0,
        0,    0,   68,    0,    0,    0,    0,    0,   96,    0,
        0,    0,    0,    0,   98,   98,   98,   98,   51,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   12,
       98,   98,   98,   98,   98,   98,   98,   19,   98,   21,
       59,   98,   98,   98,   98,   98,   98,   98,   30,   61,

       98,   32,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   42,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,    0,    0,    0,    0,    1,    0,    0,
        0,    0,    0,    0,    0,    0,   69,   69,    0,    2,
       97,    0,   98,   98,   98,    4,   98,    5,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   11,   98,
       98,   15,   98,   98,   98,   98,   98,   16,   98,   98,
        0,    0,   98,   98,   98,   98,   98,   98,   98,   98,
       26,   27,   28,   98,   98,   62,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   93,   39,   98,   40,   98,

       98,   98,   98,   67,   98,   98,   98,   98,   47,   98,
       98,   98,   50,    0,    0,    0,    0,    0,   69,    0,
        0,    0,    0,    0,    0,    0,    0,   69,   98,   98,
       98,   98,   98,   98,   83,   98,    7,   86,   98,   98,
       98,   98,   98,   98,   14,   89,   98,   98,   91,   98,
        0,    0,   98,   18,    0,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   87,   98,   98,   98,   98,   38,   98,   98,   98,
       41,   98,   43,   44,   46,   45,   98,   49,   84,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,   69,   69,   98,   98,   98,   90,    6,   98,   98,
       52,    8,   98,   98,   98,   98,   98,   98,   98,    0,
        0,    0,    0,    0,    0,    0,   98,    0,    0,    0,
        0,    0,   98,   98,   98,   98,   82,   98,   98,   25,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   64,
       98,   98,   98,   98,   98,   98,   98,   98,   48,    0,
        0,    0,    0,    0,    0,    0,  102,    0,   69,   98,
       98,   98,   98,   98,   98,   98,   98,   13,   54,   98,
       98,   57,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   98,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,   98,
       98,   98,   23,   98,   98,   98,   98,   98,   29,   98,
       33,   98,   98,   98,   94,   98,   37,   98,   98,   98,
       92,   98,    0,    0,    0,    0,    0,   69,   98,   98,
       98,   88,   98,   98,   98,   98,   55,   98,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   98,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   98,   98,   98,   77,   98,   60,
       81,   98,   98,   98,   35,   98,   98,   98,   98,   98,
       98,    0,    0,   69,   98,   98,    3,   78,   98,   98,

       98,   98,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   17,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   98,   98,   98,   98,   85,   31,   98,   63,
       98,   98,   79,   80,   98,    0,    0,    0,    0,    0,
        0,   69,   98,   98,   98,   10,   98,   98,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   98,
       22,   98,   24,   34,   98,   98,   66,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   69,
       98,   98,    9,   98,   98,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   98,   98,   98,   98,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   69,   98,   98,   98,   98,    0,    0,    0,    0,
        0,    0,    0,    0,   98,   98,   36,   98,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   69,   98,
       98,   98,   56,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   98,   98,   98,
        0,    0,    0,    0,    0,   69,   98,   98,   53,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       98,   98,   98,    0,    0,    0,    0,    0,   69,   98,
       98,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,   20,   58,   65,    0,    0,    0,
        0,    0,   69,   98,   98,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   69,   98,   98,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   69,   98,   98,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   69,   98,   98,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   69,   98,   98,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  104,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   69,   98,   98,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  104,    0,  104,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   69,   98,   98,
        0,    0,    0,    0,  105,    0,    0,    0,    0,    0,
        0,    0,  104,  104,  104,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,   69,   98,   98,
        0,    0,    0,  105,    0,  105,    0,    0,    0,    0,
      104,  104,    0,    0,    0,    0,    0,    0,  103,    0,
        0,    0,    0,    0,   69,   98,   98,    0,  105,  105,
      105,    0,    0,    0,    0,  104,    0,    0,    0,    0,
        0,  103,    0,  103,    0,    0,    0,   69,   98,   98,
      105,  105,    0,    0,    0,    0,    0,    0,    0,  103,
      103,  103,    0,    0,    0,   69,   98,   98,  105,    0,
        0,    0,    0,    0,    0,  103,  103,    0,    0,    0,
       69,   98,   98,    0,    0,    0,    0,    0,    0,  103,

        0,    0,    0,   69,   98,   98,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   69,   98,   98,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   69,   98,   98,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   69,
       98,   98,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   69,   98,   98,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   69,   98,   98,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   69,   98,   98,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   69,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   69,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0
    } ;

static const YY_CHAR yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    4,    1,    5,    1,    1,    6,    1,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   16,   16,
       16,   17,   16,   18,   16,   16,   16,   19,   20,   21,
       22,   23,    1,    1,   24,   25,   26,   27,   28,   29,
       30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
       40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
       50,    1,   51,    1,   52,    1,   53,   54,   55,   56,

       57,   58,   59,   60,   61,   62,   63,   64,   65,   66,
       67,   68,   40,   69,   70,   71,   72,   73,   74,   75,
       76,   77,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static const YY_CHAR yy_meta[78] =
    {   0,
        1,    2,    3,    2,    4,    5,    4,    6,    7,    5,
        5,    1,    5,    8,    5,    2,    2,    2,    5,    9,
        5,    5,    5,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    1,
        1,   10,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2
    } ;

static const flex_int16_t yy_base[1562] =
    {   0,
        0,    0,  610,11055,   76,  593,  587,11055,  150,11055,
    11055,  567,11055,  201,  551,11055,   59,  521,  223,  292,
      345,   56,  394,   59,   62,   73,  443,  215,  202,  223,
      495,  284,  295,  540,  298,  348,  387,  417,  290,11055,
    11055,  172,  501,   45,   56,   55,  535,  516,  580,  500,
      616,  139,11055,  638,  667,  510,  689,  538,  710,  477,
      732,  740,  761,   91,  783,  834,  179,  139,  216,  797,
      333,  312,  346,  354,  357,  422,  162,  396,   54,  448,
       76,  502,  215,  515,  605,  613,  698,  426,  434,  790,
       97,  481,  645,  722,  300,  231,  771,  571,  105,  126,

      156,  246,  788,  630,  366,  455,  838,  830,  843,  524,
      826,  846,  275,  767,  850,  877,  841,  882,  880,  885,
      883,  887,  889,  331,  140,  116,  184,  491,  958,  962,
      473,  981,  989, 1008,  484,  440, 1025, 1047,  455,11055,
     1069,   75, 1091, 1105, 1142,  297,  728,  340,  785,  904,
     1093,  542, 1101,  903, 1092, 1099,  949, 1133,  359, 1136,
     1139,  415,  985, 1147,  503, 1148, 1154, 1143, 1153,  576,
     1220, 1242, 1087, 1160,  994, 1151, 1231, 1209, 1191,  671,
      596,  646,  679, 1234, 1213,  684,  996, 1245, 1232, 1149,
      723, 1230, 1249,  762, 1016,  796,  867, 1240,  894, 1251,

     1247, 1255, 1267,  910, 1282, 1029, 1281, 1290,  935, 1291,
     1299, 1300, 1056,  188,  448, 1068, 1358,  438, 1367,  430,
     1381, 1403, 1407,  686,  412, 1426, 1434, 1451, 1473, 1487,
     1524, 1147, 1306, 1412, 1155, 1300, 1276, 1282, 1443, 1363,
     1480, 1382, 1487, 1447, 1315, 1317, 1488, 1501, 1333, 1349,
     1587, 1609, 1469, 1358, 1556, 1522, 1543, 1586, 1598, 1606,
     1599, 1381, 1613, 1610, 1617, 1614, 1616, 1618, 1619, 1641,
     1651, 1468, 1650, 1519, 1665, 1652, 1489, 1659, 1532, 1662,
     1601, 1668, 1658, 1669, 1671, 1672, 1682, 1674, 1676, 1745,
     1684, 1564, 1767,  398, 1774, 1796, 1803,  396,  387, 1813,

      931,  810, 1830, 1852, 1866, 1903,  439,  543, 1701, 1676,
      620,  767,  937, 1744, 1820, 1856, 1751, 1839, 1858,  382,
      379,  604, 1974, 1927, 1996, 2018, 1871, 1949,  356,  327,
     2069, 2032, 1721, 1991, 1933, 2002,  945, 2021, 1840,  948,
     1391, 2023, 1897, 1901, 2025, 1864, 2000, 2057, 2058,  956,
     2050, 2059, 2061, 2067, 2077, 2080, 2096, 2090, 2112,  484,
     2143,  326, 1115,  317, 1497,  761,11055, 1822, 2167, 2189,
     2203, 2240, 2121, 1928, 2099, 1065, 1154, 1202, 1260, 2177,
     1850, 1394,  316, 2254,  303,  650, 2276, 2298, 2302, 1060,
      287, 2321, 2329, 2346, 2368, 2390, 2407, 1768,  299, 2421,

      293, 2435, 2398, 2458, 1830,  275, 2465, 2487, 2504, 2178,
     1688, 2080, 1766, 2094, 2174, 2195, 1807, 2289, 2005, 2214,
     2110, 2250, 2158, 2114, 2197, 2241, 2258, 2442, 2367, 2436,
     2270, 2328, 2526, 2548, 1232, 2562, 1959, 2579, 2601, 2615,
     2652, 1747, 2436, 2503, 2603, 1911, 1946, 2582, 2674, 2680,
      265, 2701, 2709, 2728,  274,  267, 2734, 1778, 2751, 2773,
     2795, 2327, 2817, 2821,  245, 2844, 2852, 2871,  257,  249,
     2877, 2170, 2894, 2916, 2547, 1993, 2728, 2139, 2496, 2260,
     2338, 2516, 2620, 2631, 2396, 2706, 2775, 2421, 2612, 2658,
     2783, 2938, 2270, 2947, 2969, 2983, 3020, 3071, 3122, 2839,

     2861, 2733, 3011,  226, 2228,  203, 2881,  693, 1843, 2531,
     3034, 3188, 2417, 3062,  192, 2584,  182, 2640,  706, 1879,
     2641, 3085, 2854, 2672, 2580, 3073, 2423, 2428, 3081, 2530,
     2965, 2894, 2626, 2674, 2909, 3145,  174,  159, 3239, 3162,
     2738, 3202, 3261, 3216, 3312, 2294, 2786, 3056, 1136, 2682,
     3056, 3277, 2789, 3286, 3380, 3108, 3328, 2963, 3337, 2789,
     2308, 3118, 2378, 2460, 3150, 2954, 2558,  140, 3394,  129,
     3408, 3361, 3431, 1942,  111, 3438, 3460, 3477, 2899, 3491,
     3513, 3527, 3564, 3615, 2910, 3111, 1340, 3008, 3541, 3667,
     3193, 2781, 3050, 3578, 3143, 3267, 3220, 3316, 3468, 3638,

      106, 3689, 3711, 3606,  120,  102, 3648, 3059, 3732, 3754,
     3101, 3768, 3790, 3804, 3841, 3371, 3895, 3302, 3818, 3917,
     2822, 2991, 3315, 3855, 3396, 3448, 3076, 3535, 3939,  101,
     3371,   95, 3437, 1343, 2102, 3516, 3869, 3114, 3957, 3979,
     3993, 4030, 3101, 1397, 2494, 3555,   70, 3610, 2516, 1512,
     3600, 4007, 4086, 3202, 3232, 3642, 4044, 3647, 3664, 3642,
     3487, 3933, 3721, 4058, 3283, 4100, 4137, 4114, 4188, 3645,
     3780, 3842, 1527, 3735, 4151, 4239, 3263, 2861, 3757, 4165,
     4290, 3305, 3539, 3616, 3323, 3784, 4202, 3347, 4216, 4355,
     4253, 3898, 3396, 3918, 3969, 1573, 3793, 4267, 4406, 2997,

     4281, 4295, 3885, 4315, 4457, 4508, 4559, 3575, 3646, 3956,
     4369, 3368, 4383, 4610, 4420, 3657, 3153, 1583, 3973, 4434,
     4661, 4329, 4448, 3669, 3879, 3689, 3982, 4482, 3793, 3849,
     4033, 4522, 3372, 4536, 4712, 4573, 3230, 4462, 4564, 1597,
     4074, 4624, 4763, 4597, 4291, 3867, 3980, 3999, 4044, 4082,
     4675, 4048, 4091, 4140, 4689, 3448, 4726, 4814, 4740, 4602,
     4754, 4089, 4444, 4106, 1653, 4191, 4788, 4865, 4615, 4126,
     4140, 4155, 4173, 4189, 4204, 4242, 4828, 4128, 4768, 4852,
     4306, 4879, 3814, 4901, 4923, 4937, 4928, 4653, 4286, 4288,
     4294, 4293, 2060, 4337, 4966, 4988, 4296, 4299, 4342, 4354,

     4366, 4422, 4423, 4346, 5002, 4993, 5024, 4434, 4750, 4449,
     4358, 5031, 3828, 5053, 5077, 5091, 4798, 4454, 4468, 4477,
     4524, 4532, 4532, 2229, 4409, 5105, 5128, 4577, 4577, 4581,
     4578,11055, 4604, 2232, 4511, 5142, 5133, 4924, 4630, 4630,
     4664, 4679, 4650, 5171, 4003, 5193, 5215, 5229, 4732, 4736,
     4738, 4751, 4751, 4781, 4782, 2338, 4664, 5243, 5266, 4799,
     4807, 4808,11055, 2384, 2394, 4715, 5280, 4989, 4825, 4834,
     4834, 4836, 4840, 4903, 4906, 5294, 4953, 5317, 5339, 5353,
     4910, 4919, 4922, 4934,11055, 4968, 2553, 2776, 5027, 5367,
     5390, 4979, 2848, 2942, 3072, 5056, 5404, 4991, 4992, 5002,

     5006, 5019, 5062, 5088, 5080, 5418, 5101, 5441, 5463, 5477,
     5099, 5096, 5103,11055, 3118, 3176, 3264, 5170, 5491, 5514,
     3385, 3467, 5174, 5528, 5126, 5127, 5135, 5134,11055, 5152,
     3503, 5218, 5542, 5203, 5565, 5587, 5601, 5195, 3537, 3551,
     3590, 3659, 5269, 5615, 5638, 3696, 5320, 5652, 5214, 5226,
     5246,11055, 3718, 3905, 5333, 5666, 5239, 5689, 5711, 5725,
     3960, 4017, 4068, 5342, 5739, 5762, 5393, 5776, 5260, 4124,
     4175, 4226, 5444, 5790, 5363, 5813, 5835, 5849, 4277, 4393,
     5457, 5863, 5886, 5466, 5900, 4546, 4550, 5517, 5914, 5414,
     5937, 5959, 5973, 4606, 5568, 5987, 6010, 5581, 6024, 4646,

     5590, 6038, 5487, 6061, 6083, 6097, 4699, 5641, 6111, 6134,
     5692, 6148, 5705, 6162, 5538, 6185, 6207, 6221, 4855, 5714,
     6235, 6258, 5765, 6272, 5816, 6286, 5611, 6309, 6331, 6345,
     4859, 5829, 6359, 6382, 5838, 6396, 5889, 6410, 5662, 6433,
     6455, 6469, 4917, 5940, 6483, 6506, 5953, 6520, 5962, 6534,
     5735, 6557, 6579, 6593, 4959, 6013, 6607, 6630, 6064, 6644,
     6077, 6658, 5786, 6681, 6703, 6717, 4963, 6086, 6731, 6754,
     6137, 6768, 6188, 6782, 5859, 6805, 6827, 6841, 4982, 6201,
     6855, 6877, 6210, 6891, 6261, 6905, 5910, 6928, 5067, 6312,
     6942, 6964, 6325, 6978, 6334, 6992, 5983, 7015, 5115, 6385,

     7029, 7051, 6436, 7065, 6449, 7079, 6034, 5164, 6458, 7102,
     7124, 6509, 7138, 6560, 7152, 6107, 5207, 6573, 7175, 7197,
     6582, 7211, 6633, 7225, 5253, 6684, 6697, 6706, 7239, 5304,
     6757, 6808, 6821, 7253, 5329, 6830, 7267, 5377, 6871, 5383,
     6880, 5428, 5434,11055, 7290, 7300, 7309, 7316, 7325, 7335,
     7344, 7353, 7362, 7372, 7382, 7391, 7400, 7409, 7418, 7427,
     7436, 7445, 7454, 7463, 7472, 7482, 7492, 7501, 7510, 7519,
     7528, 7538, 7548, 7557, 7566, 7573, 7583, 7593, 7602, 7611,
     7620, 7629, 7638, 7647, 7656, 7665, 7674, 7683, 7692, 7701,
     7710, 7719, 7729, 7739, 7748, 7757, 7766, 7776, 7786, 7795,

     7804, 7813, 7822, 7831, 7840, 7849, 7858, 7867, 7876, 7885,
     7894, 7904, 7914, 7923, 7932, 7941, 7950, 7959, 7968, 7977,
     7986, 7995, 8004, 8013, 8022, 8031, 8040, 8049, 8058, 8067,
     8076, 8085, 8094, 8103, 8113, 8123, 8132, 8141, 8150, 8159,
     8168, 8177, 8186, 8195, 8204, 8213, 8222, 8231, 8240, 8249,
     8258, 8267, 8276, 8285, 8294, 8303, 8312, 8321, 8330, 8339,
     8348, 8357, 8366, 8375, 8384, 8393, 8402, 8411, 8420, 8429,
     8438, 8447, 8456, 8465, 8474, 8483, 8492, 8501, 8510, 8519,
     8528, 8537, 8546, 8555, 8564, 8573, 8582, 8591, 8600, 8609,
     8618, 8627, 8636, 8645, 8654, 8663, 8672, 8681, 8690, 8699,

     8708, 8717, 8726, 8735, 8744, 8753, 8762, 8771, 8780, 8789,
     8798, 8807, 8816, 8825, 8834, 8843, 8852, 8861, 8870, 8879,
     8888, 8897, 8906, 8915, 8924, 8933, 8942, 8951, 8960, 8969,
     8978, 8987, 8996, 9005, 9014, 9023, 9032, 9041, 9050, 9059,
     9068, 9077, 9086, 9095, 9104, 9113, 9122, 9131, 9140, 9149,
     9158, 9167, 9176, 9185, 9194, 9203, 9212, 9221, 9230, 9239,
     9248, 9257, 9266, 9275, 9284, 9293, 9302, 9311, 9320, 9329,
     9338, 9347, 9356, 9365, 9374, 9383, 9392, 9401, 9410, 9419,
     9428, 9437, 9446, 9455, 9464, 9473, 9482, 9491, 9500, 9509,
     9518, 9527, 9536, 9545, 9554, 9563, 9572, 9581, 9590, 9599,

     9608, 9617, 9626, 9635, 9644, 9653, 9662, 9671, 9680, 9689,
     9698, 9707, 9716, 9725, 9734, 9743, 9752, 9761, 9770, 9779,
     9788, 9797, 9806, 9815, 9824, 9833, 9842, 9851, 9860, 9869,
     9878, 9887, 9896, 9905, 9914, 9923, 9932, 9941, 9950, 9959,
     9968, 9977, 9986, 9995,10004,10013,10022,10031,10040,10049,
    10058,10067,10076,10085,10094,10103,10112,10121,10130,10139,
    10148,10157,10166,10175,10184,10193,10202,10211,10220,10229,
    10238,10247,10256,10265,10274,10283,10292,10301,10310,10319,
    10328,10337,10346,10355,10364,10373,10382,10391,10400,10409,
    10418,10427,10436,10445,10454,10463,10472,10481,10490,10499,

    10508,10517,10526,10535,10544,10551,10560,10569,10578,10587,
    10596,10605,10614,10623,10632,10641,10650,10659,10668,10677,
    10686,10695,10704,10713,10722,10731,10740,10749,10758,10767,
    10776,10785,10794,10803,10812,10821,10830,10839,10848,10857,
    10866,10875,10884,10893,10900,10909,10918,10927,10936,10945,
    10954,10963,10972,10981,10990,10999,11008,11017,11026,11035,
    11044
    } ;

static const flex_int16_t yy_def[1562] =
    {   0,
     1144,    1, 1144, 1144, 1144, 1144, 1145, 1144, 1146, 1144,
     1144, 1144, 1144, 1147, 1144, 1144, 1144, 1144, 1148, 1148,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       27,   20,   20,   20,   20,   27,   20,   20,   20, 1144,
     1144, 1149, 1144, 1144, 1144, 1144, 1144, 1145, 1144, 1150,
     1146,   51, 1144, 1144, 1147, 1151, 1151, 1144, 1147, 1144,
     1151, 1151, 1147, 1144, 1152, 1152,   66,   66,   66, 1153,
       66,   66,   66,   66,   66,   66,   66,   66,   66,   66,
       66,   66,   66,   66,   66,   66,   66,   66,   66,   66,
       66,   66,   66,   66,   66,   66,   66,   66,   66,   66,

       66,   66,   66,   66,   66,   66,   66,   66,   66,   66,
       66,   66,   66,   66,   66,   66,   66,   66,   66,   66,
       66,   66,   66, 1144, 1144, 1144,   51, 1150, 1151, 1151,
     1144, 1151, 1151, 1151, 1154, 1155, 1144, 1156, 1144, 1144,
     1144,   63, 1157, 1158, 1157,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
     1144,   63,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,

      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145, 1144, 1144, 1144, 1151, 1154, 1144, 1155,
     1144, 1159, 1159, 1144, 1144, 1159, 1159, 1160, 1161, 1162,
     1161,  231,  231,  231,  231,  231,  231,  231,  231,  231,
      231,  231,  231,  231,  231,  231,  231,  231,  231,  231,
     1163, 1164,  231,  231, 1165,  231,  231,  231,  231,  231,
      231,  231,  231,  231,  231,  231,  231,  231,  231,  231,
      231,  231,  231,  231,  231,  231,  231,  231,  231,  231,
      231,  231,  231,  231,  231,  231,  231,  231,  231, 1163,
     1144, 1159, 1159, 1144, 1159, 1159, 1159, 1166, 1167, 1144,

     1168,  137, 1169, 1170, 1171, 1170,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306, 1172,
     1173,  290, 1144, 1174, 1175, 1176,  306, 1165, 1177, 1178,
     1144, 1179,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306, 1144,
     1159, 1166, 1144, 1167, 1144, 1144, 1144, 1180, 1181, 1182,
     1183, 1182,  372,  372,  372,  372,  372,  372,  372,  372,
      372,  372, 1172, 1144, 1173,  290, 1144, 1184, 1184, 1144,
     1144, 1184, 1184, 1185, 1175, 1144, 1186,  372, 1177, 1144,

     1178, 1144, 1187, 1187, 1144, 1144, 1187, 1187, 1188,  372,
      372,  372,  372,  372,  372,  372,  372,  372,  372,  372,
      372,  372,  372,  372,  372,  372,  372,  372,  372,  372,
      372,  372, 1144, 1175, 1144, 1144, 1189, 1190, 1191, 1192,
     1191,  441,  441,  441,  441,  441,  441,  441, 1184, 1184,
     1144, 1184, 1184, 1184, 1193, 1194, 1144, 1195, 1144, 1196,
     1197,  441, 1187, 1187, 1144, 1187, 1187, 1187, 1198, 1199,
     1144, 1200, 1144, 1201,  441,  441,  441,  441,  441,  441,
      441,  441,  441,  441,  441,  441,  441,  441,  441,  441,
      441, 1202, 1203, 1204, 1205, 1206, 1205, 1205, 1205,  499,

      499,  499, 1184, 1193, 1144, 1194, 1144, 1144, 1144, 1207,
     1208, 1209,  499, 1187, 1198, 1144, 1199, 1144, 1144, 1144,
     1210, 1211,  499,  499,  499,  499,  499,  499,  499,  499,
      499,  499,  499,  499,  499, 1202, 1212, 1213, 1144, 1214,
     1215, 1216, 1217, 1218, 1217,  545,  545,  545, 1144, 1144,
     1144, 1144, 1219, 1220, 1221, 1144, 1144, 1222, 1223,  545,
      545,  545,  545,  545,  545,  545,  545, 1212, 1144, 1213,
     1144, 1224, 1224, 1144, 1144, 1224, 1224, 1225, 1226, 1227,
     1228, 1229, 1228, 1228,  584, 1144, 1144, 1230, 1231, 1232,
     1144, 1144, 1233, 1234,  584,  584,  584,  584, 1224, 1224,

     1144, 1224, 1224, 1224, 1235, 1236, 1144, 1237, 1144, 1238,
     1239, 1240, 1241, 1242, 1241,  615, 1243, 1244, 1245, 1246,
     1144, 1144, 1247, 1248,  615,  615,  615,  615, 1224, 1235,
     1144, 1236, 1144, 1144, 1144, 1249, 1250, 1251, 1252, 1253,
     1254, 1253,  642, 1144, 1144, 1144, 1144, 1144, 1144, 1255,
     1256, 1257, 1258, 1144, 1144, 1259, 1260,  642,  642,  642,
     1144, 1144, 1261, 1262, 1263, 1264, 1265, 1266, 1265, 1144,
     1144, 1144, 1267, 1268, 1269, 1270, 1144, 1144, 1271, 1272,
     1265,  681,  681, 1144, 1144, 1273, 1274, 1275, 1276, 1277,
     1278, 1144, 1144, 1144, 1144, 1279, 1280, 1281, 1282, 1144,

     1144, 1144, 1283, 1284, 1277, 1277, 1277, 1144, 1144, 1285,
     1286, 1287, 1288, 1289, 1290, 1144, 1144, 1291, 1292, 1293,
     1294, 1144, 1144, 1144, 1144, 1144, 1295, 1296, 1144, 1144,
     1297, 1298, 1299, 1300, 1301, 1302, 1144, 1144, 1144, 1303,
     1304, 1305, 1306, 1144, 1144, 1144, 1144, 1144, 1144, 1307,
     1308, 1144, 1144, 1309, 1310, 1311, 1312, 1313, 1314, 1144,
     1144, 1144, 1144, 1144, 1315, 1316, 1317, 1318, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1319, 1320, 1144, 1144, 1144,
     1321, 1322, 1323, 1324, 1325, 1326, 1144, 1144, 1144, 1144,
     1144, 1144, 1327, 1328, 1329, 1330, 1144, 1144, 1144, 1144,

     1144, 1144, 1144, 1331, 1332, 1144, 1144, 1144, 1144, 1144,
     1333, 1334, 1335, 1336, 1337, 1338, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1339, 1340, 1341, 1342, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1343, 1344, 1144, 1144, 1144, 1144,
     1144, 1144, 1345, 1346, 1347, 1348, 1349, 1350, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1351, 1352, 1353, 1354, 1144,
     1144, 1144, 1144, 1144, 1144, 1355, 1356, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1357, 1358, 1359, 1360, 1361, 1362,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1363, 1364, 1365,
     1366, 1144, 1144, 1144, 1144, 1367, 1368, 1144, 1144, 1144,

     1144, 1144, 1144, 1144, 1369, 1370, 1371, 1372, 1373, 1374,
     1144, 1144, 1144, 1144, 1144, 1144, 1375, 1376, 1377, 1378,
     1144, 1144, 1379, 1380, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1381, 1382, 1383, 1384, 1385, 1386, 1144, 1144, 1144,
     1144, 1387, 1388, 1389, 1390, 1144, 1391, 1392, 1144, 1144,
     1144, 1144, 1144, 1144, 1393, 1394, 1395, 1396, 1397, 1398,
     1144, 1144, 1399, 1400, 1401, 1402, 1403, 1404, 1144, 1144,
     1144, 1144, 1405, 1406, 1407, 1408, 1409, 1410, 1144, 1411,
     1412, 1413, 1414, 1415, 1416, 1144, 1144, 1417, 1418, 1419,
     1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1144,

     1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
     1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
     1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
     1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
     1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
     1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
     1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
     1499, 1500, 1501, 1502, 1503, 1504, 1505, 1144, 1506, 1507,
     1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
     1518, 1519, 1520, 1521, 1522, 1523, 1524, 1144, 1525, 1526,

     1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
     1537, 1538, 1539, 1540, 1541, 1144, 1542, 1543, 1144, 1544,
     1545, 1144, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
     1144, 1144, 1554, 1555, 1556, 1557, 1144, 1558, 1559, 1560,
     1144, 1561, 1144,    0, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,

     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,

     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,

     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,

     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144
    } ;

static const flex_int16_t yy_nxt[11133] =
    {   0,
        4,    5,    6,    5,    7,    8,    9,   10,   11,    8,
       12,   13,    8,    4,    8,   14,   14,   14,   15,   16,
       17,    8,   18,   19,   20,   21,   22,   23,   24,   25,
       26,   27,   26,   26,   28,   29,   30,   31,   32,   26,
       33,   34,   35,   36,   37,   38,   39,   26,   26,   40,
       41,   42,   19,   20,   21,   22,   23,   24,   25,   26,
       27,   26,   26,   28,   29,   30,   31,   32,   33,   34,
       35,   36,   37,   38,   39,   26,   26,   43, 1144,   43,
       53,   53,  124,   78,  125,  126,   65,   79, 1144,   65,
       84,  644,  139,   80,  139,  158,   85,  140,  159,   87,

       65,  631,   86,   65,   44,  631,   65,   45,  631,   65,
       65,  124,   78,  125,  126,   65,   79,  161,   65,   84,
       65,   46,   80,  158,  631,   85,  159,  599,   87,   65,
       86,   65,  572,   44,   65,  569,   45,   65,  143,   65,
       50,  215,  127,  215,  569,  161,  143,  216,   65,   46,
       50,   51,  128,   51,   50,   50,   49,   50,   50,   50,
       50,   50,   50,   50,   50,  569,  143,  143,   50,   50,
       50,   50,   50,   54,  143,   54,  216,   56,  569,  147,
      143,   56,   57,  185,   56,   50,   56,   50,  516,  290,
       60,  290,   61,   56,   62,  143,  516,  143,  156,   50,

       50,   50,   54,  143,   55,  146,   56,  147,  143,  505,
       56,   57,  185,   56,   58,   56,   59,   59,   59,   60,
      143,   61,   56,   62,   54,  143,   55,  156,   56,   65,
      505,  143,   56,   57,  146,   56,   64,   56,   92,   95,
      164,   60,   65,   61,   56,   62,   93,   66,  143,   65,
       65,  148,   94,  165,   96,  516,  143,  143,   65,   67,
       97,  516,   65,   68,   69,  182,  463,   92,   95,  164,
       65,   65,  143,  505,   70,   93,   66,   65,  505,   65,
      148,   94,  165,   96,  143,  143,  449,  143,   67,   97,
       65,   68,   69,   54,  182,   55,  403,   56,   65,  400,

      143,   56,   57,  400,   56,   64,   56,  104,  388,  384,
       60,   65,   61,   56,   62,  143,  143,   65,  106,   71,
      384,   65,  107,  363,  105,   65,  181,  123,  112,   72,
      363,   65,   65,  400,  229,  113,  104,   65,  114,   73,
       65,  143,   65,   70,  143,  115,   65,  106,   71,  150,
       65,  107,  105,  143,   65,  181,  123,  112,   72,   65,
      400,   65,  149,  229,  113,   65,  114,   73,   74,  143,
       65,  214,   65,  115,  143,   75,   65,  229,  150,   76,
      154,  143,   77,   65,  116,  384,  384,  143,  151,  117,
      118,  149,   65,  363,  152,  153,  229,   74,  143,  214,

      363,   65,  143,  188,   75,   65,  229,  143,   76,  154,
      119,   77,   65,  116,   65,  143,  151,  117,  118,  292,
       65,   65,  152,  153,   65,  229,  143,  171,   81,  172,
       82,   65,  188,  222,   65,  143,  219,  143,  157,  119,
       83,   65,  219,   65,   65,  155,  219,  120,  121,  215,
       65,  215,  229,   65,  122,  255,  139,   81,  139,   82,
       65,  140,   65,  143,   65,  143,  157,  143,   83,   65,
       65,   88,  173,   65,  155,  143,  120,  121,   89,   90,
       65,  229,  370,  122,   91,  435,  189,  435,  219,  143,
       65,  143,   65,  160,  129,  143,  143,   49,   56,   65,

       88,  173,   43,  143,   43,  178,   49,   89,   90,   65,
      370,  134,   91,  134,  135,  189,  136,  143,   65,   98,
       49,  160,  143,   99,  143,  137,  137,  137,  162,   44,
       65,  100,   45,  101,  178,  102,   65,   47,  103,  139,
      248,  139,   53,  143,  140,  163,   46,  200,   98,  166,
      143,  167,   99,  141,  141,  141,  143,  162,   44,   65,
      100,   45,  101,  102,   65,  143,  103,  108,  236,  248,
      109,  143,   53,  163,   46,  110,  200,   65,  166,  229,
      167,   54,  111,   54,  143,   56,  370,   65,   53,   56,
       57,   49,   56,  143,   56,   47,  108,  236,   60,  109,

       61,   56,   62,  184,  110,  386,   65,  386,  229, 1144,
      111, 1144,  143,  254,  370,   65,   50,   51, 1144,   51,
       50,   50,   49,   50,   50,   50,   50,   50,   50,   50,
       50, 1144,  184,  229,   50,   50,   50,   50,   50,   54,
      143,   54,  254,  129, 1144,  168,  143,  129,  130,  169,
      129,  386,  129,  386,  143,  187,  131, 1144,  132,  129,
      133, 1144,  229,  370, 1144,   50,   50,   50,   54,  179,
       54,  143,  129,  168,  143, 1144,  129,  130,  169,  129,
     1144,  129,  143,  229,  187,  131,  143,  132,  129,  133,
      134,  370,  134,  135,  551,  136,  551, 1144,  179,  143,

      264,  302,  302,  302,  137,  137,  137,  556,  229,  556,
       56,   54,  229,   55,  143,   56,  229, 1144, 1144,   56,
       57,  229,   56,   58,   56,   59,   59,   59,   60,  264,
       61,   56,   62,  134, 1144,  134,  135,  229,  136,  143,
      170,  134, 1144,  134,  135,  229,  136,  137,  137,  137,
      229,  232, 1144,   56,   56,  137,  137,  137,  180, 1144,
      273,   56, 1144,  143,  142,  229, 1144,  143,  170, 1144,
     1144, 1144, 1144, 1144,   64, 1144,  436,  436,  436, 1144,
      232, 1144, 1144, 1144,   54, 1144,   55,  180,   56,  273,
     1144,  143,   56,   57,  229,   56,   64,   56,   54,  276,

       54,   60,   56,   61,   56,   62,   56,   57,  143,   56,
      370,   56,  143,  183,  204,   60,  233,   61,   56,   62,
      174,  175,  229, 1144,  176,  302,  302,  302,  276,  143,
      186,  143,  177,  229,  144,   54,  143,   55,  370,   56,
      143,  183,  204,   56,   57,  233,   56,   64,   56,  174,
      175,  229,   60,  176,   61,   56,   62,  143,  186,  143,
      177,  190,  229,  191,  195, 1144,  201,  143,  207,  192,
     1144,  143,  196,  202, 1144,  145,  193,  197, 1144,  194,
      198, 1144,  143,  199,  143,  144,  203,  143,  205, 1144,
      190,  143,  191,  195,  201,  143, 1144,  207,  192,  143,

      196, 1144,  202,  145,  229,  193,  197,  194,  206,  198,
      143,  199,  143,  208,  203,  143,  210,  205,  143,  143,
      209,  143, 1144,  143,  143,  211,  143,  212,  143,  213,
      143,  229,  365,  229,  365, 1144, 1144,  206,  234, 1144,
      229,  229,  208,  238, 1144,  210,  143,  229,  209,  143,
      367,  143,  143,  211,  143,  212,  143,  213,  143,  217,
      229,  217,  135,  217,  136,  217,  135,  234,  136,  229,
      229,  238,  229,  137,  137,  137,  229,  137,  137,  137,
      375, 1144,  217,  129,  217,  135,  229,  136,  370,  242,
      217,  370,  217,  135, 1144,  136,  137,  137,  137,  370,

     1144,  229,  129,  129,  137,  137,  137, 1144,  375,  134,
      129,  134,  135, 1144,  136,  229,  370,  242, 1144,  370,
      246, 1144,  229,  137,  137,  137,  221,  370,  221,  267,
      222,  229, 1144,  229,  222,  223,  258,  222,  224,  222,
      137,  137,  137,  225,  277,  226,  222,  227,  221,  246,
      221,  229,  222,  229, 1144, 1144,  222,  223,  267,  222,
      229,  222,  229, 1144,  258,  225,  229,  226,  222,  227,
       54,  284,   54,  277,   56,  459,  459,  459,   56,   57,
     1144,   56,  229,   56,  141,  141,  141,   60, 1144,   61,
       56,   62,   54,  229,   55,  229,   56, 1144, 1144,  284,

       56,   57,  291,   56,   64,   56,   54,  445,   54,   60,
       56,   61,   56,   62,   56,   57,  365,   56,  365,   56,
      235,  256,  229,   60,  229,   61,   56,   62,  237,  229,
      229,  291, 1144,  239,  367,  445,  229,  586,  229,  586,
      240,  241,  230,   54,  251,   55,  252,   56, 1144,  235,
      256,   56,   57,  229,   56,   64,   56,  237,  229,  229,
       60,  239,   61,   56,   62,  229,  245,  229,  240,  241,
      229,  243,  244,  229,  247,  249,  229,  250,  253,  231,
      229,  304,  259,  272,  229,  229,  229,  257,  229,  304,
      229,  229, 1144,  230,  307,  245,  446,  229, 1144,  229,

      243,  244,  229,  247,  249,  229,  250,  253,  231,  229,
      304,  259,  272,  229,  229,  229,  257,  229,  304,  229,
      229,  171,  307,  171,  446,  129,  229,  255,  229,  129,
      130,  263,  129,  435,  129,  435,  262, 1144,  131,  492,
      132,  129,  133,  171,  439,  171,  229,  129,  260,  255,
      229,  129,  130,  266,  129, 1144,  129,  229,  261,  263,
      131,  265,  132,  129,  133,  262,  274,  229,  229,  229,
      268,  229,  439,  271,  269,  229,  275,  229,  280,  229,
      278,  266,  229,  270,  229,  279,  229,  261,  229, 1144,
      265,  281,  229, 1144,  282,  274,  229,  229,  229,  268,

      229,  271,  439,  269,  229,  275,  229,  280,  278,  283,
      304,  229,  270,  229,  279,  229,  304,  229,  229,  229,
      281,  229,  285,  282,  286,  287,  289,  229,  229,  288,
      439,  310, 1144,  229,  304, 1144,  229,  229,  283,  304,
      304,  617,  308,  617,  661,  304,  661,  229,  229,  304,
      285,  304, 1144,  286,  287,  289,  229,  229,  288,  217,
      310,  217,  135,  304,  136,  229,  229,  304,  221,  304,
      221,  308,  222,  137,  137,  137,  222,  223,  304,  222,
      304,  222,  221,  319,  221,  225,  292,  226,  222,  227,
      292,  293,  304,  292, 1144,  292,  304,  304,  670,  294,

      670,  295,  292,  296,  297,  312,  297,  298,  297,  299,
      297,  298,  319,  299, 1144,  340,  304, 1144,  300,  300,
      300,  304,  300,  300,  300,  314,  304,  297,  222,  297,
      298,  416,  299,  312,  370,  297,  439,  297,  298,  309,
      299,  300,  300,  300,  340,  304,  304,  222,  222,  300,
      300,  300,  221,  314,  221,  222,  222, 1144, 1144,  416,
      222,  223,  370,  222,  439,  222, 1144, 1144,  309,  225,
     1144,  226,  222,  227,   54,  304,   55,  304,   56, 1144,
     1144,  304,   56,   57,  311,   56,   64,   56,   54,  316,
       54,   60,   56,   61,   56,   62,   56,   57,  365,   56,

      365,   56,  304,  304, 1144,   60,  304,   61,   56,   62,
      304,  327,  311,  672,  304,  672,  367,  316,  315, 1144,
      313,  304,  304,  304,  305,   54,  317,   55,  672,   56,
      672,  304,  304,   56,   57,  304,   56,   64,   56,  327,
     1144,  318,   60,  304,   61,   56,   62,  315,  313,  333,
      304,  304,  304,  304, 1144,  317,  304,  328,  306,  328,
      329,  352,  330, 1144,  304,  361,  356,  361,  298,  318,
      299,  331,  331,  331,  672,  305,  672,  304,  333,  300,
      300,  300,  304,  334,  672,  304,  672,  306,  251,  352,
      251,  320,  129,  321,  322,  356,  129,  130,  672,  129,

      672,  129,  323,  323,  323,  131,  304,  132,  129,  133,
      251,  334,  251,  320,  129,  321,  322,  335,  129,  130,
      304,  129,  337,  129,  325,  325,  325,  131,  338,  132,
      129,  133,  304,  304,  336,  304,  341,  345, 1144,  339,
      304,  342,  344,  346,  304,  347,  335,  304,  304,  304,
      304,  304,  304,  304,  672,  343,  672,  338, 1144,  348,
      324,  304,  304,  336,  304,  341,  345,  339,  349,  304,
      342,  344,  346,  304,  347,  304,  304,  304,  350,  304,
      304,  304,  304,  343,  304,  304,  304,  348,  353, 1144,
      351,  358,  304,  304, 1144,  354,  304,  349,  357,  304,

     1144,  355,  304,  304,  304,  304,  304,  350,  304,  359,
      304,  360,  374,  304,  304,  304,  304,  353,  351,  370,
      358,  304,  304,  354,  373,  304, 1144,  357,  304,  355,
      476,  304,  304, 1144,  304,  304, 1144,  304,  359,  304,
      360,  374, 1144, 1144,  370,  304,  290,  370,  290,  320,
     1144,  321,  322,  373, 1144, 1144,  410, 1144,  476, 1144,
      323,  323,  323, 1144,  370, 1144, 1144, 1144,  361,  376,
      361,  298,  370,  299,  495,  361, 1144,  361,  298,  507,
      299,  507,  300,  300,  300,  410,  508,  370,  292,  300,
      300,  300,  370,  379,  370,  292,  292,  361,  376,  361,

      298, 1144,  299,  495,  297,  462,  297,  298,  439,  299,
      439,  300,  300,  300,  365,  370,  365,  292,  300,  300,
      300,  379,  370,  365, 1144,  365,  366, 1144,  300,  300,
      300,  221,  367,  221,  462,  222,  439, 1144,  439,  222,
      223,  367,  222, 1144,  222,  473,  473,  473,  225,  481,
      226,  222,  227,   54, 1144,   55,  377,   56,  552,  552,
      552,   56,   57,  370,   56,   64,   56,   54,  415,   54,
       60,   56,   61,   56,   62,   56,   57,  481,   56, 1144,
       56,  380,  370,  370,   60,  377,   61,   56,   62,  381,
      421,  370,  439,  378,  557,  557,  557,  415,  448,  370,

     1144,  370,  398,  371,   54,  382,   55,  370,   56,  380,
      370,  370,   56,   57,  370,   56,   64,   56,  381,  421,
      439,   60,  378,   61,   56,   62,  448,  370,  387,  370,
      387,  398,  388,  382,  418,  370,  388,  389,  501,  388,
      370,  388,  370,  419,  370,  391,  372,  392,  388,  393,
      328,  443,  328,  329,  371,  330,  412,  609,  609,  609,
      365, 1144,  365,  418,  331,  331,  331,  501,  370, 1144,
      439,  419,  370,  495,  372,  387,  370,  387,  367,  388,
      443, 1144, 1144,  388,  389,  412,  388,  390,  388,  323,
      323,  323,  391, 1144,  392,  388,  393,  387,  439,  395,

     1144,  388,  495, 1144,  370,  388,  389, 1144,  388,  396,
      388,  325,  325,  325,  391, 1144,  392,  388,  393,  387,
      524,  395,  411,  388, 1144, 1144,  422,  388,  389,  413,
      388,   64,  388,  402,  370,  402,  391,  403,  392,  388,
      393,  403,  404,  370,  403,  370,  403,  439,  414,  524,
      406,  411,  407,  403,  408,  422, 1144, 1144,  413,  417,
     1144,  672,  370,  672,  370, 1144,  370,  420,  370,  394,
      402,  370,  402,  370,  403,  439,  425,  414,  403,  404,
      423,  403,  405,  403,  331,  331,  331,  406,  417,  407,
      403,  408,  370,  370,  370,  420,  370, 1144,  424,  426,

      370,  370,  370,  427,  370,  425, 1144,  428,  429,  423,
      370,  430, 1144,  433,  477,  434,  432,  662,  662,  662,
      370,  370,  439,  370,  444,  431,  424,  426,  370,  370,
      370,  427,  370,  370,  478,  428,  439,  429,  370,  370,
      430,  439, 1144,  477,  361,  432,  361,  298,  370,  299,
      439,  370,  439,  444,  431,  370,  486,  442,  300,  300,
      300,  370,  478,  439,  439, 1144,  495,  370,  221,  439,
      221,  518,  222,  518, 1144, 1144,  222,  223,  519,  222,
      439,  222, 1144,  370,  486,  225,  442,  226,  222,  227,
       54,  439,   55,  485,   56,  495, 1144,  479,   56,   57,

      439,   56,   64,   56,   54,  475,   54,   60,   56,   61,
       56,   62,   56,   57, 1144,   56,  439,   56,  447,  439,
      439,   60,  485,   61,   56,   62,  479, 1144,  439,  507,
      672,  507,  672,  865,  475,  865,  508,  439, 1144,  439,
      440,   54,  480,   55,  439,   56,  447,  439,  439,   56,
       57,  483,   56,   64,   56,  387,  439,  387,   60,  388,
       61,   56,   62,  388,  389,  439,  388,  439,  388, 1144,
      480,  365,  391,  365,  392,  388,  393,  387,  487,  387,
      483,  449,  441,  439,  439,  449,  450,  495,  449,  367,
      449,  440,  439,  484,  451, 1144,  452,  449,  453,  454,

      439,  454,  455,  454,  456,  454,  455,  487,  456, 1144,
      441,  439,  439,  457,  457,  457,  495,  457,  457,  457,
      439,  484,  454,  388,  454,  455, 1144,  456,  439,  482,
      454,  439,  454,  455,  581,  456,  457,  457,  457,  672,
      439,  672,  388,  388,  457,  457,  457,  387,  581,  387,
      388,  388, 1144, 1144,  495,  388,  389,  482,  388,  439,
      388, 1144,  581,  513,  391,  495,  392,  388,  393,  387,
      439,  387,  491,  449, 1144, 1144,  581,  449,  450, 1144,
      449, 1144,  449,  495, 1144,  895,  451,  895,  452,  449,
      453,  139,  513,  139,  495,  865,  140,  865,  439,  468,

      491,  468,  469,  489,  470,  459,  459,  459,  387,  439,
      395, 1144,  388,  471,  471,  471,  388,  389,  581,  388,
       64,  388,  402,  495,  402,  391,  403,  392,  388,  393,
      403,  404,  489,  403, 1144,  403,  402,  439,  402,  406,
      463,  407,  403,  408,  463,  464,  581,  463,  532,  463,
     1144, 1144,  495,  465,  543,  466,  463,  467,  460,  468,
      543,  468,  469,  495,  470,  543,  468,  488,  468,  469,
      498,  470,  490,  471,  471,  471, 1144,  532,  439,  403,
      471,  471,  471,  543,  439, 1144,  403,  403,  468,  543,
      468,  469,  495,  470,  543,  670,  488,  670, 1144,  498,

      581,  490,  471,  471,  471,  402,  439,  402,  403,  403,
     1144, 1144,  439,  403,  404,  644,  403,  670,  403,  670,
     1144,  526,  406,  495,  407,  403,  408,  433,  581,  433,
      495,  129,  507,  492,  507,  129,  130,  644,  129,  508,
      129, 1144,  527,  495,  131,  499,  132,  129,  133,  433,
      526,  433,  495,  129,  916,  492,  916,  129,  130,  495,
      129, 1144,  129,  365, 1144,  365,  131,  543,  132,  129,
      133,  527,  495,  499,  495, 1144, 1144,  436,  436,  436,
      221,  367,  221,  523,  222,  518, 1144,  518,  222,  223,
     1144,  222,  519,  222, 1144, 1144,  543,  225,  581,  226,

      222,  227,   54,  495,   55,  502,   56, 1144, 1144,  495,
       56,   57,  523,   56,   64,   56,   54,  543,   54,   60,
       56,   61,   56,   62,   56,   57,  581,   56,  562,   56,
      495, 1144, 1144,   60,  502,   61,   56,   62,  495,  495,
      500,  518,  518,  518,  518, 1144,  543,  495,  519,  519,
     1144, 1144,  496,   54,  533,   55,  562,   56,  495,  495,
      528,   56,   57,  543,   56,   64,   56, 1144,  495,  500,
       60,  529,   61,   56,   62,  503,  495,  503,  455,  497,
      456,  503,  533,  503,  455,  495,  456,  495,  528,  457,
      457,  457,  543, 1144, 1144,  457,  457,  457,  561,  529,

      534,  449,  503,  496,  503,  455, 1144,  456,  497,  543,
      503,  543,  503,  455,  495,  456,  457,  457,  457,  587,
     1144, 1144,  449,  449,  457,  457,  457,  561,  534,  454,
      449,  454,  455,  495,  456,  507, 1144,  507,  543,  365,
      543,  365,  508,  457,  457,  457, 1144,  509,  587,  457,
      457,  457,  387,  530,  387,  495,  388,  367, 1144,  525,
      388,  389,  495,  388, 1144,  388,  459,  459,  459,  391,
      543,  392,  388,  393,  387,  548,  387,  672,  388,  672,
     1144,  530,  388,  389,  495,  388, 1144,  388,  525, 1144,
      507,  391,  507,  392,  388,  393,  387,  508,  395,  543,

      388,  531,  495,  548,  388,  389,  535,  388,   64,  388,
      495,  622,  595,  391,  584,  392,  388,  393,  514, 1144,
      514,  469,  514,  470,  514,  469,  581,  470, 1144,  581,
      531,  495,  471,  471,  471,  535,  471,  471,  471,  495,
      622,  595,  463,  584, 1144,  514,  511,  514,  469,  865,
      470,  865,  654,  514,  581,  514,  469,  581,  470,  471,
      471,  471,  701,  702,  701,  463,  463,  471,  471,  471,
     1144, 1144,  468,  463,  468,  469,  543,  470,  518,  546,
      518,  654,  507, 1144,  507,  519,  471,  471,  471,  549,
      520,  543,  471,  471,  471,  402,  560,  402,  543,  403,

      365,  547,  365,  403,  404,  543,  403,  546,  403,  473,
      473,  473,  406, 1144,  407,  403,  408,  402,  367,  402,
      543,  403, 1144,  550,  560,  403,  404,  543,  403,  547,
      403,  543, 1144,  613,  406,  566,  407,  403,  408,  536,
     1144,  536,  537,  922,  538,  922,  543,  616,  221,  567,
      221,  550,  222,  539,  539,  539,  222,  223, 1144,  222,
      543,  222,  613,  566,  518,  225,  518,  226,  222,  227,
       54,  519,   55, 1144,   56,  543,  616,  567,   56,   57,
     1144,   56,   64,   56,   54, 1144,   54,   60,   56,   61,
       56,   62,   56,   57,  581,   56,  598,   56,  722,  702,

      722,   60,  543,   61,   56,   62, 1144, 1144,  565,  507,
     1144,  507,  503, 1144,  503,  455,  508,  456,  655, 1144,
      544,   54,  581,   55,  598,   56,  457,  457,  457,   56,
       57,  543,   56,   64,   56,  387,  565,  387,   60,  388,
       61,   56,   62,  388,  389, 1144,  388,  655,  388, 1144,
     1144,  518,  391,  518,  392,  388,  393,  551,  519,  551,
      633, 1144,  633,  514, 1144,  514,  469,  634,  470, 1144,
     1144,  544,   54,  895,   55,  895,   56,  471,  471,  471,
       56,   57, 1144,   56,   64,   56,  402,  585,  402,   60,
      403,   61,   56,   62,  403,  404,  581,  403,  550,  403,

      563,  640,  365,  406,  365,  407,  403,  408,  564,  591,
      543,  591,  586, 1144,  586,  365,  585,  365,  543,  941,
      367,  941,  544,   54,  581,   55,  550,   56,  667,  563,
      640,   56,   57,  367,   56,   64,   56,  564, 1144,  543,
       60,  596,   61,   56,   62, 1144,  536,  543,  536,  537,
      592,  538, 1144,  550,  738,  739,  738,  667,  581,  545,
      539,  539,  539,  571, 1144,  571,  613,  572, 1144, 1144,
      596,  572,  573,  544,  572,  597,  572,  916,  592,  916,
      575,  550,  576,  572,  577,  625,  581, 1144,  545,  387,
      581,  395, 1144,  388,  591,  613,  591,  388,  389, 1144,

      388,   64,  388,  221,  597,  221,  391,  222,  392,  388,
      393,  222,  223,  625,  222, 1144,  222,   54,  581,   54,
      225,   56,  226,  222,  227,   56,   57, 1144,   56,  677,
       56,  760,  739,  760,   60,  621,   61,   56,   62,  554,
      571, 1144,  571,  613,  572, 1144, 1144,  627,  572,  573,
     1144,  572,  574,  572,  539,  539,  539,  575,  677,  576,
      572,  577,   54,  621,   55,  672,   56,  672,  678, 1144,
       56,   57,  613,   56,   64,   56,  627, 1144,  507,   60,
      507,   61,   56,   62,  365,  508,  365,  387, 1144,  387,
      613,  388,  552,  552,  552,  388,  389,  678,  388,  700,

      388, 1144,  367,  507,  391,  507,  392,  388,  393,  626,
      508, 1144,  582,   54, 1144,   55,  518,   56,  518,  613,
     1144,   56,   57,  519,   56,   64,   56, 1144,  700,  518,
       60,  518,   61,   56,   62, 1144,  519,  626,  402,  613,
      402,  706,  403,  557,  557,  557,  403,  404,  365,  403,
      365,  403,  583,  709, 1144,  406,  628,  407,  403,  408,
     1144, 1144,  604,  582,  604,  605,  367,  606,  613,  365,
      706,  365,  633,  365,  633,  365,  607,  607,  607,  634,
      583,  387,  709,  395,  628,  388,  946,  367,  946,  388,
      389,  367,  388,   64,  388,  571,  640,  571,  391,  572,

      392,  388,  393,  572,  573, 1144,  572,  643,  572,  571,
     1144,  571,  575,  599,  576,  572,  577,  599,  600, 1144,
      599,  640,  599, 1144, 1144,  640,  601,  658,  602,  599,
      603,  589,  604,  717,  604,  605,  643,  606,  633,  604,
      633,  604,  605, 1144,  606,  634,  607,  607,  607,  365,
      640,  365,  572,  607,  607,  607,  658, 1144, 1144,  572,
      572,  604,  717,  604,  605, 1144,  606,  367,  922,  629,
      922,  629,  605,  640,  606,  607,  607,  607,  571,  659,
      571,  572,  572,  607,  607,  607,  572,  573,  684,  572,
      684,  572,  221, 1144,  221,  575,  222,  576,  572,  577,

      222,  223,  640,  222,  954,  222,  954, 1144,  659,  225,
     1144,  226,  222,  227,   54, 1144,   55,  633,   56,  633,
     1144, 1144,   56,   57,  634,   56,   64,   56,   54,  685,
       54,   60,   56,   61,   56,   62,   56,   57,  916,   56,
      916,   56,  387, 1144,  387,   60,  388,   61,   56,   62,
      388,  389,  962,  388,  962,  388,  671,  685,  671,  391,
      640,  392,  388,  393,  614,   54,  660,   55,  707,   56,
      646,  646,  646,   56,   57,  690,   56,   64,   56,  402,
     1144,  402,   60,  403,   61,   56,   62,  403,  404,  640,
      403,  941,  403,  941, 1144,  660,  406,  707,  407,  403,

      408,  507, 1144,  507,  690,  729, 1144,  604,  508,  604,
      605,  670,  606,  670, 1144,  614,   54,  684,   55,  684,
       56,  607,  607,  607,   56,   57, 1144,   56,   64,   56,
     1144,  644,  644,   60,  729,   61,   56,   62,  615,  629,
     1144,  629,  605,  518,  606,  518,  692, 1144,  692,  633,
      519,  633, 1144,  607,  607,  607,  634, 1144,  708,  599,
      672,  635,  672,  607,  607,  607,  614,  615,  387,  667,
      395,  693,  388,  730,  667, 1144,  388,  389,  683,  388,
       64,  388, 1144, 1144,  681,  391,  708,  392,  388,  393,
      629,  667,  629,  605,  737,  606,  747,  946,  667,  946,

      693,  682,  730,  667,  607,  607,  607,  683, 1144, 1144,
      599,  599,  629,  681,  629,  605,  749,  606,  619,  972,
      667,  972,  633,  737,  633,  747,  607,  607,  607,  634,
      682, 1144,  599,  571, 1144,  571,  507,  572,  507, 1144,
     1144,  572,  573,  508,  572,  749,  572,  609,  609,  609,
      575, 1144,  576,  572,  577,  571, 1144,  571,  518,  572,
      518, 1144, 1144,  572,  573,  519,  572, 1144,  572,  221,
     1144,  221,  575,  222,  576,  572,  577,  222,  223, 1144,
      222,  694,  222,  694, 1144,  633,  225,  633,  226,  222,
      227,   54,  634,   55,  507,   56,  507, 1144, 1144,   56,

       57,  508,   56,   64,   56,   54,  693,   54,   60,   56,
       61,   56,   62,   56,   57,  365,   56,  365,   56,  387,
      752,  387,   60,  388,   61,   56,   62,  388,  389,  365,
      388,  365,  388,  367, 1144,  693,  391, 1144,  392,  388,
      393,  641,   54,  695,   55,  695,   56,  367, 1144,  752,
       56,   57, 1144,   56,   64,   56,  402, 1144,  402,   60,
      403,   61,   56,   62,  403,  404,  642,  403,  693,  403,
      571, 1144,  571,  406,  572,  407,  403,  408,  572,  573,
      725,  572,  725,  572, 1144,  753,  518,  575,  518,  576,
      572,  577,  641,  519,  772,  642,  617,  693,  617,  692,

      644,  692, 1144,  748,  644,  645,  954,  644,  954,  644,
      646,  646,  646,  647,  753,  648,  644,  649,  387,  694,
      395,  694,  388,  772,  716, 1144,  388,  389, 1144,  388,
       64,  388,  748, 1144,  633,  391,  633,  392,  388,  393,
      629,  634,  629,  605,  716,  606, 1144, 1144,  662,  662,
      662, 1144, 1144,  716,  607,  607,  607,  633,  221,  633,
      221,  979,  222,  979,  634, 1144,  222,  223,  652,  222,
      695,  222,  695,  716,  507,  225,  507,  226,  222,  227,
       54,  508,   55,  518,   56,  518, 1144, 1144,   56,   57,
      519,   56,   64,   56,   54,  716,   54,   60,   56,   61,

       56,   62,   56,   57,  365,   56,  365,   56,  387,  773,
      387,   60,  388,   61,   56,   62,  388,  389,  962,  388,
      962,  388,  367, 1144,  716,  391,  774,  392,  388,  393,
      668,   54, 1144,   55,  633,   56,  633, 1144,  773,   56,
       57,  634,   56,   64,   56,  402, 1144,  402,   60,  403,
       61,   56,   62,  403,  404,  774,  403,  669,  403,  571,
     1144,  571,  406,  572,  407,  403,  408,  572,  573,  672,
      572,  672,  572,  775, 1144,  507,  575,  507,  576,  572,
      577,  668,  508,  518,  778,  518,  669,  387, 1144,  395,
      519,  388,  779,  780,  779,  388,  389, 1144,  388,   64,

      388,  221,  775,  221,  391,  222,  392,  388,  393,  222,
      223, 1144,  222,  778,  222,   54,  790,   54,  225,   56,
      226,  222,  227,   56,   57,  954,   56,  954,   56,  806,
      780,  806,   60,  792,   61,   56,   62,  675,   54, 1144,
       55,  633,   56,  633, 1144,  790,   56,   57,  634,   56,
       64,   56,  387,  798,  387,   60,  388,   61,   56,   62,
      388,  389,  792,  388, 1144,  388,  402,  799,  402,  391,
      403,  392,  388,  393,  403,  404,  987,  403,  987,  403,
     1144, 1144,  798,  406,  800,  407,  403,  408,  691,   54,
     1144,   55,  507,   56,  507, 1144,  799,   56,   57,  508,

       56,   64,   56,  571,  801,  571,   60,  572,   61,   56,
       62,  572,  573,  800,  572, 1144,  572,  221,  802,  221,
      575,  222,  576,  572,  577,  222,  223,  972,  222,  972,
      222, 1144, 1144,  801,  225,  803,  226,  222,  227,  691,
      387, 1144,  395,  518,  388,  518, 1144,  802,  388,  389,
      519,  388,   64,  388,   54, 1144,   54,  391,   56,  392,
      388,  393,   56,   57,  803,   56, 1144,   56,  387, 1144,
      387,   60,  388,   61,   56,   62,  388,  389,  979,  388,
      979,  388,  701,  723,  701,  391, 1144,  392,  388,  393,
      698,   54,  745,   55,  745,   56,  725,  702,  725,   56,

       57, 1144,   56,   64,   56,  724, 1144,  633,   60,  633,
       61,   56,   62,  820,  634,  771,  402,  821,  402,  726,
      403,  822,  823,  828,  403,  404,  705,  403,  829,  403,
      722,  744,  722,  406,  724,  407,  403,  408,  507, 1144,
      507,  691,  820, 1144,  771,  508,  821,  518,  726,  518,
      822,  823,  828,  724,  519,  705,   54,  829,   55,  633,
       56,  633, 1144, 1144,   56,   57,  634,   56,   64,   56,
      571,  830,  571,   60,  572,   61,   56,   62,  572,  573,
     1144,  572,  724,  572,  221,  831,  221,  575,  222,  576,
      572,  577,  222,  223,  672,  222,  672,  222, 1144, 1144,

      830,  225,  832,  226,  222,  227,  715,  387, 1144,  395,
      507,  388,  507, 1144,  831,  388,  389,  508,  388,   64,
      388,   54, 1144,   54,  391,   56,  392,  388,  393,   56,
       57,  832,   56, 1144,   56,  387, 1144,  387,   60,  388,
       61,   56,   62,  388,  389,  763,  388,  763,  388,  745,
      723,  745,  391,  833,  392,  388,  393,  720,   54,  834,
       55,  840,   56,  738,  761,  738,   56,   57,  791,   56,
       64,   56,  746, 1144, 1144,   60,  842,   61,   56,   62,
     1144,  850,  833,  402, 1144,  402,  762,  403,  834, 1144,
      840,  403,  404, 1144,  403,  851,  403,  791, 1144, 1144,

      406,  746,  407,  403,  408,  842,  852, 1144,  715,   54,
      850,   55,  518,   56,  518,  762, 1144,   56,   57,  519,
       56,   64,   56,  571,  851,  571,   60,  572,   61,   56,
       62,  572,  573, 1144,  572,  852,  572,  221, 1144,  221,
      575,  222,  576,  572,  577,  222,  223, 1000,  222, 1000,
      222,  987, 1144,  987,  225,  853,  226,  222,  227,  715,
       54,  854,   55,  855,   56,  763,  739,  763,   56,   57,
     1144,   56,   64,   56,   54, 1144,   54,   60,   56,   61,
       56,   62,   56,   57,  853,   56, 1144,   56,  764, 1144,
      854,   60,  855,   61,   56,   62, 1144, 1144,  769,  744,

      769, 1144, 1144,  760,  787,  760,  860,  672,  861,  672,
      715,   54,  862,   55,  863,   56,  769,  764,  769,   56,
       57,  770,   56,   64,   56,  387,  762,  387,   60,  388,
       61,   56,   62,  388,  389,  860,  388,  861,  388,  797,
      864,  862,  391,  863,  392,  388,  393, 1000, 1144, 1000,
      770,  633, 1144,  633,  788,  762,  788,  871,  634,  872,
     1144,  736,  387, 1144,  395,  507,  388,  507,  797,  864,
      388,  389,  508,  388,   64,  388,  402,  819,  402,  391,
      403,  392,  388,  393,  403,  404,  871,  403,  872,  403,
      571,  873,  571,  406,  572,  407,  403,  408,  572,  573,

      672,  572,  672,  572, 1144, 1144,  819,  575,  874,  576,
      572,  577,  742,   54, 1144,   55,  518,   56,  518, 1144,
      873,   56,   57,  519,   56,   64,   56,  221, 1144,  221,
       60,  222,   61,   56,   62,  222,  223,  874,  222, 1144,
      222,   54, 1144,   54,  225,   56,  226,  222,  227,   56,
       57,  809,   56,  809,   56,  788,  761,  788,   60,  881,
       61,   56,   62,  759,  387,  882,  395,  883,  388,  779,
      807,  779,  388,  389,  841,  388,   64,  388,  789, 1144,
     1144,  391,  884,  392,  388,  393, 1144,  885,  881,  387,
     1144,  387,  808,  388,  882, 1144,  883,  388,  389,  817,

      388,  817,  388,  841, 1144, 1144,  391,  789,  392,  388,
      393,  884,  886, 1144,  767,   54,  885,   55,  887,   56,
     1144,  808,  849,   56,   57, 1144,   56,   64,   56,  402,
      892,  402,   60,  403,   61,   56,   62,  403,  404, 1144,
      403,  886,  403,  893,  894, 1144,  406,  887,  407,  403,
      408,  849,  899,  809,  780,  809,  672, 1144,  672,  892,
      672,  900,  672,  901, 1144,  786,  387,  902,  395,  903,
      388, 1144,  893,  894,  388,  389,  810,  388,   64,  388,
      571,  899,  571,  391,  572,  392,  388,  393,  572,  573,
      900,  572,  901,  572, 1144, 1144,  902,  575,  903,  576,

      572,  577,  221, 1144,  221,  810,  222,  633, 1144,  633,
      222,  223, 1144,  222,  634,  222,  795, 1144,  672,  225,
      672,  226,  222,  227,   54,  838,   55,  838,   56,  817,
      787,  817,   56,   57,  904,   56,   64,   56,   54,  911,
       54,   60,   56,   61,   56,   62,   56,   57,  870,   56,
      912,   56,  818,  913,  365,   60,  365,   61,   56,   62,
      672, 1144,  672,  904,  672, 1144,  672,  387,  911,  387,
      914,  388,  367, 1144,  816,  388,  389,  870,  388,  912,
      388,  818,  913,  672,  391,  672,  392,  388,  393,  387,
      868,  395,  868,  388,  806,  837,  806,  388,  389,  914,

      388,   64,  388,  402,  915,  402,  391,  403,  392,  388,
      393,  403,  404,  898,  403,  921,  403,  808,  925, 1144,
      406,  926,  407,  403,  408,  838,  807,  838,  507, 1144,
      507,  927,  571,  915,  571,  508,  572,  928, 1144,  826,
      572,  573,  898,  572,  921,  572,  808,  925,  839,  575,
      926,  576,  572,  577,  221,  929,  221,  518,  222,  518,
      927, 1144,  222,  223,  519,  222,  928,  222,  672, 1144,
      672,  225, 1144,  226,  222,  227, 1144,  839,   54, 1144,
       55,  633,   56,  633,  929, 1144,   56,   57,  634,   56,
       64,   56,   54,  930,   54,   60,   56,   61,   56,   62,

       56,   57,  365,   56,  365,   56,  387, 1144,  387,   60,
      388,   61,   56,   62,  388,  389,  672,  388,  672,  388,
      367, 1144,  930,  391,  931,  392,  388,  393,  848,  387,
      938,  395,  939,  388,  868,  837,  868,  388,  389,  940,
      388,   64,  388,  402, 1144,  402,  391,  403,  392,  388,
      393,  403,  404,  931,  403,  949,  403,  869,  950,  938,
      406,  939,  407,  403,  408,  672,  951,  672,  940, 1144,
      952,  507,  571,  507,  571,  518,  572,  518,  508,  858,
      572,  573,  519,  572,  949,  572,  869,  950,  953,  575,
     1144,  576,  572,  577,  221,  951,  221, 1144,  222,  952,

     1144, 1144,  222,  223,  365,  222,  365,  222,  672, 1144,
      672,  225, 1144,  226,  222,  227,   54,  953,   55,  633,
       56,  633,  367, 1144,   56,   57,  634,   56,   64,   56,
       54,  961,   54,   60,   56,   61,   56,   62,   56,   57,
      365,   56,  365,   56,  387,  969,  387,   60,  388,   61,
       56,   62,  388,  389,  672,  388,  672,  388,  367, 1144,
      961,  391,  970,  392,  388,  393,  880,  387, 1144,  395,
      507,  388,  507, 1144,  969,  388,  389,  508,  388,   64,
      388,  402,  971,  402,  391,  403,  392,  388,  393,  403,
      404,  970,  403, 1144,  403,  571,  986,  571,  406,  572,

      407,  403,  408,  572,  573,  672,  572,  672,  572, 1144,
     1144,  971,  575, 1144,  576,  572,  577,  890,  221, 1144,
      221,  518,  222,  518, 1144,  986,  222,  223,  519,  222,
      672,  222,  672, 1144,  633,  225,  633,  226,  222,  227,
       54,  634,   55,  507,   56,  507, 1144, 1144,   56,   57,
      508,   56,   64,   56,   54, 1144,   54,   60,   56,   61,
       56,   62,   56,   57,  365,   56,  365,   56,  387, 1144,
      387,   60,  388,   61,   56,   62,  388,  389,  672,  388,
      672,  388,  367, 1144,  672,  391,  672,  392,  388,  393,
      910,  387, 1144,  395,  518,  388,  518, 1144, 1144,  388,

      389,  519,  388,   64,  388,  402, 1144,  402,  391,  403,
      392,  388,  393,  403,  404,  365,  403,  365,  403,  571,
     1144,  571,  406,  572,  407,  403,  408,  572,  573,  672,
      572,  672,  572,  367, 1144,  672,  575,  672,  576,  572,
      577,  919,  221, 1144,  221,  633,  222,  633, 1144, 1144,
      222,  223,  634,  222, 1144,  222, 1144, 1144,  507,  225,
      507,  226,  222,  227,   54,  508,   55,  518,   56,  518,
     1144, 1144,   56,   57,  519,   56,   64,   56,   54, 1144,
       54,   60,   56,   61,   56,   62,   56,   57,  365,   56,
      365,   56,  387, 1144,  387,   60,  388,   61,   56,   62,

      388,  389, 1144,  388, 1144,  388,  367, 1144, 1144,  391,
     1144,  392,  388,  393,  937,  387, 1144,  395,  633,  388,
      633, 1144, 1144,  388,  389,  634,  388,   64,  388,  402,
     1144,  402,  391,  403,  392,  388,  393,  403,  404,  365,
      403,  365,  403,  571, 1144,  571,  406,  572,  407,  403,
      408,  572,  573, 1144,  572, 1144,  572,  367, 1144, 1144,
      575, 1144,  576,  572,  577,  944,  221, 1144,  221,  507,
      222,  507, 1144, 1144,  222,  223,  508,  222, 1144,  222,
     1144, 1144,  518,  225,  518,  226,  222,  227,   54,  519,
       55,  633,   56,  633, 1144, 1144,   56,   57,  634,   56,

       64,   56,   54, 1144,   54,   60,   56,   61,   56,   62,
       56,   57,  365,   56,  365,   56,  387, 1144,  387,   60,
      388,   61,   56,   62,  388,  389, 1144,  388, 1144,  388,
      367, 1144, 1144,  391, 1144,  392,  388,  393,  960,  387,
     1144,  395,  507,  388,  507, 1144, 1144,  388,  389,  508,
      388,   64,  388,  402, 1144,  402,  391,  403,  392,  388,
      393,  403,  404,  365,  403,  365,  403,  571, 1144,  571,
      406,  572,  407,  403,  408,  572,  573, 1144,  572, 1144,
      572,  367, 1144, 1144,  575, 1144,  576,  572,  577,  965,
      221, 1144,  221,  518,  222,  518, 1144, 1144,  222,  223,

      519,  222, 1144,  222, 1144, 1144,  633,  225,  633,  226,
      222,  227,   54,  634,   55,  507,   56,  507, 1144, 1144,
       56,   57,  508,   56,   64,   56,   54, 1144,   54,   60,
       56,   61,   56,   62,   56,   57,  365,   56,  365,   56,
      387, 1144,  387,   60,  388,   61,   56,   62,  388,  389,
     1144,  388, 1144,  388,  367, 1144, 1144,  391, 1144,  392,
      388,  393,  978,  387, 1144,  395,  518,  388,  518, 1144,
     1144,  388,  389,  519,  388,   64,  388,  402, 1144,  402,
      391,  403,  392,  388,  393,  403,  404,  365,  403,  365,
      403,  571, 1144,  571,  406,  572,  407,  403,  408,  572,

      573, 1144,  572, 1144,  572,  367, 1144, 1144,  575, 1144,
      576,  572,  577,  982,  221, 1144,  221,  633,  222,  633,
     1144, 1144,  222,  223,  634,  222, 1144,  222, 1144, 1144,
      507,  225,  507,  226,  222,  227,   54,  508,   55,  518,
       56,  518, 1144, 1144,   56,   57,  519,   56,   64,   56,
       54, 1144,   54,   60,   56,   61,   56,   62,   56,   57,
      365,   56,  365,   56,  387, 1144,  387,   60,  388,   61,
       56,   62,  388,  389, 1144,  388, 1144,  388,  367, 1144,
     1144,  391, 1144,  392,  388,  393,  993,  387, 1144,  395,
      633,  388,  633, 1144, 1144,  388,  389,  634,  388,   64,

      388,  402, 1144,  402,  391,  403,  392,  388,  393,  403,
      404,  365,  403,  365,  403,  571, 1144,  571,  406,  572,
      407,  403,  408,  572,  573, 1144,  572, 1144,  572,  367,
     1144, 1144,  575, 1144,  576,  572,  577,  996,  221, 1144,
      221,  507,  222,  507, 1144, 1144,  222,  223,  508,  222,
     1144,  222, 1144, 1144,  518,  225,  518,  226,  222,  227,
       54,  519,   55,  633,   56,  633, 1144, 1144,   56,   57,
      634,   56,   64,   56,   54, 1144,   54,   60,   56,   61,
       56,   62,   56,   57,  365,   56,  365,   56,  387, 1144,
      387,   60,  388,   61,   56,   62,  388,  389, 1144,  388,

     1144,  388,  367, 1144, 1144,  391, 1144,  392,  388,  393,
     1006,  387, 1144,  395,  507,  388,  507, 1144, 1144,  388,
      389,  508,  388,   64,  388,  402, 1144,  402,  391,  403,
      392,  388,  393,  403,  404,  365,  403,  365,  403,  571,
     1144,  571,  406,  572,  407,  403,  408,  572,  573, 1144,
      572, 1144,  572,  367, 1144, 1144,  575, 1144,  576,  572,
      577, 1009,  221, 1144,  221,  518,  222,  518, 1144, 1144,
      222,  223,  519,  222, 1144,  222, 1144, 1144,  633,  225,
      633,  226,  222,  227,   54,  634,   55,  507,   56,  507,
     1144, 1144,   56,   57,  508,   56,   64,   56,   54, 1144,

       54,   60,   56,   61,   56,   62,   56,   57,  365,   56,
      365,   56,  387, 1144,  387,   60,  388,   61,   56,   62,
      388,  389, 1144,  388, 1144,  388,  367, 1144, 1144,  391,
     1144,  392,  388,  393, 1018,  387, 1144,  395,  518,  388,
      518, 1144, 1144,  388,  389,  519,  388,   64,  388,  402,
     1144,  402,  391,  403,  392,  388,  393,  403,  404, 1144,
      403, 1144,  403,  571, 1144,  571,  406,  572,  407,  403,
      408,  572,  573, 1144,  572, 1144,  572, 1144, 1144, 1144,
      575, 1144,  576,  572,  577, 1021,  221, 1144,  221,  633,
      222,  633, 1144, 1144,  222,  223,  634,  222, 1144,  222,

     1144, 1144,  507,  225,  507,  226,  222,  227,   54,  508,
       55,  518,   56,  518, 1144, 1144,   56,   57,  519,   56,
       64,   56,   54, 1144,   54,   60,   56,   61,   56,   62,
       56,   57, 1144,   56, 1144,   56,  387, 1144,  387,   60,
      388,   61,   56,   62,  388,  389, 1144,  388, 1144,  388,
     1144, 1144, 1144,  391, 1144,  392,  388,  393, 1030,  387,
     1144,  395,  633,  388,  633, 1144, 1144,  388,  389,  634,
      388,   64,  388,  402, 1144,  402,  391,  403,  392,  388,
      393,  403,  404, 1144,  403, 1144,  403,  571, 1144,  571,
      406,  572,  407,  403,  408,  572,  573, 1144,  572, 1144,

      572, 1144, 1144, 1144,  575, 1144,  576,  572,  577, 1033,
      221, 1144,  221,  507,  222,  507, 1144, 1144,  222,  223,
      508,  222, 1144,  222, 1144, 1144,  518,  225,  518,  226,
      222,  227,   54,  519,   55,  633,   56,  633, 1144, 1144,
       56,   57,  634,   56,   64,   56,   54, 1144,   54,   60,
       56,   61,   56,   62,   56,   57, 1144,   56, 1144,   56,
      387, 1144,  387,   60,  388,   61,   56,   62,  388,  389,
     1144,  388, 1144,  388, 1144, 1144, 1144,  391, 1144,  392,
      388,  393, 1042,  387, 1144,  395,  507,  388,  507, 1144,
     1144,  388,  389,  508,  388,   64,  388,  402, 1144,  402,

      391,  403,  392,  388,  393,  403,  404, 1144,  403, 1144,
      403,  571, 1144,  571,  406,  572,  407,  403,  408,  572,
      573, 1144,  572, 1144,  572, 1144, 1144, 1144,  575, 1144,
      576,  572,  577, 1045,  221, 1144,  221,  518,  222,  518,
     1144, 1144,  222,  223,  519,  222, 1144,  222, 1144, 1144,
      633,  225,  633,  226,  222,  227,   54,  634,   55,  507,
       56,  507, 1144, 1144,   56,   57,  508,   56,   64,   56,
       54, 1144,   54,   60,   56,   61,   56,   62,   56,   57,
     1144,   56, 1144,   56,  387, 1144,  387,   60,  388,   61,
       56,   62,  388,  389, 1144,  388, 1144,  388, 1144, 1144,

     1144,  391, 1144,  392,  388,  393, 1054,  387, 1144,  395,
      518,  388,  518, 1144, 1144,  388,  389,  519,  388,   64,
      388,  402, 1144,  402,  391,  403,  392,  388,  393,  403,
      404, 1144,  403, 1144,  403,  571, 1144,  571,  406,  572,
      407,  403,  408,  572,  573, 1144,  572, 1144,  572, 1144,
     1144, 1144,  575, 1144,  576,  572,  577, 1057,  221, 1144,
      221,  633,  222,  633, 1144, 1144,  222,  223,  634,  222,
     1144,  222, 1144, 1144,  507,  225,  507,  226,  222,  227,
       54,  508,   55,  518,   56,  518, 1144, 1144,   56,   57,
      519,   56,   64,   56,   54, 1144,   54,   60,   56,   61,

       56,   62,   56,   57, 1144,   56, 1144,   56,  387, 1144,
      387,   60,  388,   61,   56,   62,  388,  389, 1144,  388,
     1144,  388, 1144, 1144, 1144,  391, 1144,  392,  388,  393,
     1066,  387, 1144,  395,  633,  388,  633, 1144, 1144,  388,
      389,  634,  388,   64,  388,  402, 1144,  402,  391,  403,
      392,  388,  393,  403,  404, 1144,  403, 1144,  403,  571,
     1144,  571,  406,  572,  407,  403,  408,  572,  573, 1144,
      572, 1144,  572, 1144, 1144, 1144,  575, 1144,  576,  572,
      577, 1069,  221, 1144,  221,  507,  222,  507, 1144, 1144,
      222,  223,  508,  222, 1144,  222, 1144, 1144,  518,  225,

      518,  226,  222,  227,   54,  519,   55,  633,   56,  633,
     1144, 1144,   56,   57,  634,   56,   64,   56,   54, 1144,
       54,   60,   56,   61,   56,   62,   56,   57, 1144,   56,
     1144,   56,  387, 1144,  387,   60,  388,   61,   56,   62,
      388,  389, 1144,  388, 1144,  388, 1144, 1144, 1144,  391,
     1144,  392,  388,  393, 1078,  387, 1144,  395,  507,  388,
      507, 1144, 1144,  388,  389,  508,  388,   64,  388,  402,
     1144,  402,  391,  403,  392,  388,  393,  403,  404, 1144,
      403, 1144,  403,  571, 1144,  571,  406,  572,  407,  403,
      408,  572,  573, 1144,  572, 1144,  572, 1144, 1144, 1144,

      575, 1144,  576,  572,  577, 1081,  221, 1144,  221,  518,
      222,  518, 1144, 1144,  222,  223,  519,  222, 1144,  222,
     1144, 1144,  633,  225,  633,  226,  222,  227,   54,  634,
       55,  633,   56,  633, 1144, 1144,   56,   57,  634,   56,
       64,   56,   54, 1144,   54,   60,   56,   61,   56,   62,
       56,   57, 1144,   56, 1144,   56,  387, 1144,  387,   60,
      388,   61,   56,   62,  388,  389, 1144,  388, 1144,  388,
     1144, 1144,  633,  391,  633,  392,  388,  393,  387,  634,
      395,  633,  388,  633, 1144, 1144,  388,  389,  634,  388,
       64,  388,  402, 1144,  402,  391,  403,  392,  388,  393,

      403,  404, 1144,  403, 1144,  403,  571, 1144,  571,  406,
      572,  407,  403,  408,  572,  573, 1144,  572, 1144,  572,
     1144, 1144, 1144,  575, 1144,  576,  572,  577, 1091,  221,
     1144,  221, 1144,  222, 1144, 1144, 1144,  222,  223, 1144,
      222, 1144,  222,  387, 1144,  387,  225,  388,  226,  222,
      227,  388,  389, 1144,  388, 1144,  388, 1144, 1144, 1144,
      391, 1144,  392,  388,  393,  387, 1144,  395, 1144,  388,
     1144, 1144, 1144,  388,  389, 1144,  388,   64,  388,  402,
     1144,  402,  391,  403,  392,  388,  393,  403,  404, 1144,
      403, 1144,  403,  571, 1144,  571,  406,  572,  407,  403,

      408,  572,  573, 1144,  572, 1144,  572, 1144, 1144, 1144,
      575, 1144,  576,  572,  577, 1101,  221, 1144,  221, 1144,
      222, 1144, 1144, 1144,  222,  223, 1144,  222, 1144,  222,
      387, 1144,  387,  225,  388,  226,  222,  227,  388,  389,
     1144,  388, 1144,  388, 1144, 1144, 1144,  391, 1144,  392,
      388,  393,  387, 1144,  395, 1144,  388, 1144, 1144, 1144,
      388,  389, 1144,  388,   64,  388,  402, 1144,  402,  391,
      403,  392,  388,  393,  403,  404, 1144,  403, 1144,  403,
      571, 1144,  571,  406,  572,  407,  403,  408,  572,  573,
     1144,  572, 1144,  572, 1144, 1144, 1144,  575, 1144,  576,

      572,  577, 1110,  387, 1144,  387, 1144,  388, 1144, 1144,
     1144,  388,  389, 1144,  388, 1144,  388, 1144, 1144, 1144,
      391, 1144,  392,  388,  393,  387, 1144,  395, 1144,  388,
     1144, 1144, 1144,  388,  389, 1144,  388,   64,  388,  402,
     1144,  402,  391,  403,  392,  388,  393,  403,  404, 1144,
      403, 1144,  403,  571, 1144,  571,  406,  572,  407,  403,
      408,  572,  573, 1144,  572, 1144,  572, 1144, 1144, 1144,
      575, 1144,  576,  572,  577, 1119,  387, 1144,  387, 1144,
      388, 1144, 1144, 1144,  388,  389, 1144,  388, 1144,  388,
     1144, 1144, 1144,  391, 1144,  392,  388,  393,  387, 1144,

      395, 1144,  388, 1144, 1144, 1144,  388,  389, 1144,  388,
       64,  388,  402, 1144,  402,  391,  403,  392,  388,  393,
      403,  404, 1144,  403, 1144,  403,  571, 1144,  571,  406,
      572,  407,  403,  408,  572,  573, 1144,  572, 1144,  572,
      571, 1144,  571,  575,  572,  576,  572,  577,  572,  573,
     1144,  572, 1144,  572,  571, 1144,  571,  575,  572,  576,
      572,  577,  572,  573, 1144,  572, 1144,  572,  571, 1144,
      571,  575,  572,  576,  572,  577,  572,  573, 1144,  572,
     1144,  572, 1144, 1144, 1144,  575, 1144,  576,  572,  577,
       48,   48, 1144,   48,   48,   48,   48,   48,   48,   48,

       52,   52, 1144,   52,   52,   52,   52,   52,   52,   52,
       63, 1144, 1144,   63, 1144, 1144,   63,   65, 1144, 1144,
       65, 1144, 1144,   65, 1144,   65,   70, 1144, 1144,   70,
     1144, 1144, 1144, 1144,   70,   50,   50, 1144,   50,   50,
       50,   50,   50,   50,   50,  138, 1144,  138, 1144, 1144,
     1144, 1144, 1144,  138,  143, 1144, 1144,  143, 1144, 1144,
      143, 1144,  143,  144, 1144, 1144,  144, 1144, 1144, 1144,
     1144,  144,  218,  218, 1144,  218,  218,  218,  218,  218,
      218,  218,  220,  220, 1144,  220,  220,  220,  220,  220,
      220,  220,  228, 1144, 1144,  228, 1144, 1144, 1144, 1144,

      228,  229, 1144, 1144,  229, 1144, 1144,  229, 1144,  229,
      230, 1144, 1144,  230, 1144, 1144, 1144, 1144,  230,  301,
     1144,  301, 1144, 1144, 1144, 1144, 1144,  301,  303, 1144,
     1144,  303, 1144, 1144, 1144, 1144,  303,  304, 1144, 1144,
      304, 1144, 1144,  304, 1144,  304,  305, 1144, 1144,  305,
     1144, 1144, 1144, 1144,  305,  324, 1144,  324,  324,  324,
     1144, 1144, 1144,  324,  326, 1144,  326,  326,  326, 1144,
     1144, 1144,  326,  332, 1144,  332, 1144, 1144, 1144, 1144,
     1144,  332,  362,  362, 1144,  362,  362,  362,  362,  362,
      362,  362,  364,  364, 1144,  364,  364,  364,  364,  364,

      364,  364,  368, 1144, 1144, 1144, 1144, 1144, 1144,  368,
      368,  369, 1144, 1144,  369, 1144, 1144, 1144, 1144,  369,
      370, 1144, 1144,  370, 1144, 1144,  370, 1144,  370,  371,
     1144, 1144,  371, 1144, 1144, 1144, 1144,  371,  383,  383,
     1144,  383,  383,  383,  383,  383,  383,  383,  385,  385,
     1144,  385,  385,  385,  385,  385,  385,  385,  394, 1144,
     1144,  394, 1144, 1144, 1144, 1144,  394,   63, 1144, 1144,
       63, 1144, 1144,   63,  397, 1144, 1144,  397, 1144, 1144,
      397, 1144,  397,  399,  399, 1144,  399,  399,  399,  399,
      399,  399,  399,  401,  401, 1144,  401,  401,  401,  401,

      401,  401,  401,  409, 1144, 1144,  409, 1144, 1144, 1144,
     1144,  409,  437, 1144, 1144, 1144, 1144, 1144, 1144,  437,
      437,  438, 1144, 1144,  438, 1144, 1144, 1144, 1144,  438,
      439, 1144, 1144,  439, 1144, 1144,  439, 1144,  439,  440,
     1144, 1144,  440, 1144, 1144, 1144, 1144,  440,  458, 1144,
      458, 1144, 1144, 1144, 1144, 1144,  458,  460, 1144, 1144,
      460, 1144, 1144, 1144, 1144,  460,  461, 1144, 1144,  461,
     1144, 1144,  461, 1144,  461,  472, 1144,  472, 1144, 1144,
     1144, 1144, 1144,  472,  474, 1144, 1144,  474, 1144, 1144,
     1144, 1144,  474,  493, 1144, 1144, 1144, 1144, 1144, 1144,

      493,  493,  494, 1144, 1144,  494, 1144, 1144, 1144, 1144,
      494,  495, 1144, 1144,  495, 1144, 1144,  495, 1144,  495,
      496, 1144, 1144,  496, 1144, 1144, 1144, 1144,  496,  504,
      504, 1144,  504,  504,  504,  504,  504,  504,  504,  506,
      506, 1144,  506,  506,  506,  506,  506,  506,  506,  510,
     1144, 1144, 1144, 1144,  510, 1144, 1144,  510,  511, 1144,
     1144,  511, 1144, 1144, 1144, 1144,  511,  512, 1144, 1144,
      512, 1144, 1144,  512, 1144,  512,  515,  515, 1144,  515,
      515,  515,  515,  515,  515,  515,  517,  517, 1144,  517,
      517,  517,  517,  517,  517,  517,  521, 1144, 1144, 1144,

     1144,  521, 1144, 1144,  521,  522, 1144, 1144,  522, 1144,
     1144, 1144, 1144,  522,  540, 1144,  540, 1144, 1144, 1144,
     1144, 1144,  540,  541, 1144, 1144, 1144, 1144, 1144, 1144,
      541,  541,  542, 1144, 1144,  542, 1144, 1144, 1144, 1144,
      542,  543, 1144, 1144,  543, 1144, 1144,  543, 1144,  543,
      544, 1144, 1144,  544, 1144, 1144, 1144, 1144,  544,  553,
     1144, 1144, 1144, 1144,  553, 1144, 1144,  553,  554, 1144,
     1144,  554, 1144, 1144, 1144, 1144,  554,  555, 1144, 1144,
      555, 1144, 1144,  555, 1144,  555,  558, 1144, 1144, 1144,
     1144,  558, 1144, 1144,  558,  559, 1144, 1144,  559, 1144,

     1144, 1144, 1144,  559,  568,  568, 1144,  568,  568,  568,
      568,  568,  568,  568,  570,  570, 1144,  570,  570,  570,
      570,  570,  570,  570,  578, 1144, 1144,  578, 1144, 1144,
     1144, 1144,  578,  579, 1144, 1144, 1144, 1144, 1144, 1144,
      579,  579,  580, 1144, 1144,  580, 1144, 1144, 1144, 1144,
      580,  581, 1144, 1144,  581, 1144, 1144,  581, 1144,  581,
      582, 1144, 1144,  582, 1144, 1144, 1144, 1144,  582,  588,
     1144, 1144, 1144, 1144,  588, 1144, 1144,  588,  589, 1144,
     1144,  589, 1144, 1144, 1144, 1144,  589,  590, 1144, 1144,
      590, 1144, 1144,  590, 1144,  590,  593, 1144, 1144, 1144,

     1144,  593, 1144, 1144,  593,  594, 1144, 1144,  594, 1144,
     1144, 1144, 1144,  594,  608, 1144,  608, 1144, 1144, 1144,
     1144, 1144,  608,  610, 1144, 1144,  610, 1144, 1144, 1144,
     1144,  610,  611, 1144, 1144, 1144, 1144, 1144, 1144,  611,
      611,  612, 1144, 1144,  612, 1144, 1144, 1144, 1144,  612,
      613, 1144, 1144,  613, 1144, 1144,  613, 1144,  613,  614,
     1144, 1144,  614, 1144, 1144, 1144, 1144,  614,  618, 1144,
     1144, 1144, 1144,  618, 1144, 1144,  618,  619, 1144, 1144,
      619, 1144, 1144, 1144, 1144,  619,  620, 1144, 1144,  620,
     1144, 1144,  620, 1144,  620,  623, 1144, 1144, 1144, 1144,

      623, 1144, 1144,  623,  624, 1144, 1144,  624, 1144, 1144,
     1144, 1144,  624,  630,  630, 1144,  630,  630,  630,  630,
      630,  630,  630,  632,  632, 1144,  632,  632,  632,  632,
      632,  632,  632,  636, 1144, 1144, 1144, 1144,  636, 1144,
     1144,  636,  637, 1144, 1144,  637, 1144, 1144, 1144, 1144,
      637,  638, 1144, 1144, 1144, 1144, 1144, 1144,  638,  638,
      639, 1144, 1144,  639, 1144, 1144, 1144, 1144,  639,  640,
     1144, 1144,  640, 1144, 1144,  640, 1144,  640,  641, 1144,
     1144,  641, 1144, 1144, 1144, 1144,  641,  650, 1144, 1144,
      650, 1144, 1144, 1144, 1144,  650,  651, 1144, 1144, 1144,

     1144,  651, 1144, 1144,  651,  652, 1144, 1144,  652, 1144,
     1144, 1144, 1144,  652,  653, 1144, 1144,  653, 1144, 1144,
      653, 1144,  653,  656, 1144, 1144, 1144, 1144,  656, 1144,
     1144,  656,  657, 1144, 1144,  657, 1144, 1144, 1144, 1144,
      657,  663, 1144, 1144, 1144, 1144,  663, 1144, 1144,  663,
      664, 1144, 1144,  664, 1144, 1144, 1144, 1144,  664,  665,
     1144, 1144, 1144, 1144, 1144, 1144,  665,  665,  666, 1144,
     1144,  666, 1144, 1144, 1144, 1144,  666,  667, 1144, 1144,
      667, 1144, 1144,  667, 1144,  667,  668, 1144, 1144,  668,
     1144, 1144, 1144, 1144,  668,  673, 1144, 1144, 1144, 1144,

     1144, 1144, 1144,  673,  674, 1144, 1144, 1144, 1144,  674,
     1144, 1144,  674,  675, 1144, 1144,  675, 1144, 1144, 1144,
     1144,  675,  676, 1144, 1144,  676, 1144, 1144,  676, 1144,
      676,  679, 1144, 1144, 1144, 1144,  679, 1144, 1144,  679,
      680, 1144, 1144,  680, 1144, 1144, 1144, 1144,  680,  686,
     1144, 1144, 1144, 1144,  686, 1144, 1144,  686,  687, 1144,
     1144,  687, 1144, 1144, 1144, 1144,  687,  688, 1144, 1144,
     1144, 1144, 1144, 1144,  688,  688,  689, 1144, 1144,  689,
     1144, 1144, 1144, 1144,  689,  690, 1144, 1144,  690, 1144,
     1144,  690, 1144,  690,  691, 1144, 1144,  691, 1144, 1144,

     1144, 1144,  691,  696, 1144, 1144, 1144, 1144, 1144, 1144,
     1144,  696,  697, 1144, 1144, 1144, 1144,  697, 1144, 1144,
      697,  698, 1144, 1144,  698, 1144, 1144, 1144, 1144,  698,
      699, 1144, 1144,  699, 1144, 1144,  699, 1144,  699,  703,
     1144, 1144, 1144, 1144,  703, 1144, 1144,  703,  704, 1144,
     1144,  704, 1144, 1144, 1144, 1144,  704,  710, 1144, 1144,
     1144, 1144,  710, 1144, 1144,  710,  711, 1144, 1144,  711,
     1144, 1144, 1144, 1144,  711,  712, 1144, 1144, 1144, 1144,
     1144, 1144,  712,  712,  713, 1144, 1144,  713, 1144, 1144,
     1144, 1144,  713,  714, 1144, 1144,  714, 1144, 1144,  714,

     1144,  714,  715, 1144, 1144,  715, 1144, 1144, 1144, 1144,
      715,  718, 1144, 1144, 1144, 1144, 1144, 1144, 1144,  718,
      719, 1144, 1144, 1144, 1144,  719, 1144, 1144,  719,  720,
     1144, 1144,  720, 1144, 1144, 1144, 1144,  720,  721, 1144,
     1144,  721, 1144, 1144,  721, 1144,  721,  727, 1144, 1144,
     1144, 1144,  727, 1144, 1144,  727,  728, 1144, 1144,  728,
     1144, 1144, 1144, 1144,  728,  731, 1144, 1144, 1144, 1144,
      731, 1144, 1144,  731,  732, 1144, 1144,  732, 1144, 1144,
     1144, 1144,  732,  733, 1144, 1144, 1144, 1144, 1144, 1144,
      733,  733,  734, 1144, 1144,  734, 1144, 1144, 1144, 1144,

      734,  735, 1144, 1144,  735, 1144, 1144,  735, 1144,  735,
      736, 1144, 1144,  736, 1144, 1144, 1144, 1144,  736,  740,
     1144, 1144, 1144, 1144, 1144, 1144, 1144,  740,  741, 1144,
     1144, 1144, 1144,  741, 1144, 1144,  741,  742, 1144, 1144,
      742, 1144, 1144, 1144, 1144,  742,  743, 1144, 1144,  743,
     1144, 1144,  743, 1144,  743,  750, 1144, 1144, 1144, 1144,
      750, 1144, 1144,  750,  751, 1144, 1144,  751, 1144, 1144,
     1144, 1144,  751,  754, 1144, 1144, 1144, 1144,  754, 1144,
     1144,  754,  755, 1144, 1144,  755, 1144, 1144, 1144, 1144,
      755,  756, 1144, 1144, 1144, 1144, 1144, 1144,  756,  756,

      757, 1144, 1144,  757, 1144, 1144, 1144, 1144,  757,  758,
     1144, 1144,  758, 1144, 1144,  758, 1144,  758,  759, 1144,
     1144,  759, 1144, 1144, 1144, 1144,  759,  765, 1144, 1144,
     1144, 1144, 1144, 1144, 1144,  765,  766, 1144, 1144, 1144,
     1144,  766, 1144, 1144,  766,  767, 1144, 1144,  767, 1144,
     1144, 1144, 1144,  767,  768, 1144, 1144,  768, 1144, 1144,
      768, 1144,  768,  776, 1144, 1144, 1144, 1144,  776, 1144,
     1144,  776,  777, 1144, 1144,  777, 1144, 1144, 1144, 1144,
      777,  781, 1144, 1144, 1144, 1144,  781, 1144, 1144,  781,
      782, 1144, 1144,  782, 1144, 1144, 1144, 1144,  782,  783,

     1144, 1144, 1144, 1144, 1144, 1144,  783,  783,  784, 1144,
     1144,  784, 1144, 1144, 1144, 1144,  784,  785, 1144, 1144,
      785, 1144, 1144,  785, 1144,  785,  786, 1144, 1144,  786,
     1144, 1144, 1144, 1144,  786,  793, 1144, 1144, 1144, 1144,
     1144, 1144, 1144,  793,  794, 1144, 1144, 1144, 1144,  794,
     1144, 1144,  794,  795, 1144, 1144,  795, 1144, 1144, 1144,
     1144,  795,  796, 1144, 1144,  796, 1144, 1144,  796, 1144,
      796,  804, 1144, 1144, 1144, 1144,  804, 1144, 1144,  804,
      805, 1144, 1144,  805, 1144, 1144, 1144, 1144,  805,  811,
     1144, 1144, 1144, 1144,  811, 1144, 1144,  811,  812, 1144,

     1144,  812, 1144, 1144, 1144, 1144,  812,  813, 1144, 1144,
     1144, 1144, 1144, 1144,  813,  813,  814, 1144, 1144,  814,
     1144, 1144, 1144, 1144,  814,  815, 1144, 1144,  815, 1144,
     1144,  815, 1144,  815,  816, 1144, 1144,  816, 1144, 1144,
     1144, 1144,  816,  824, 1144, 1144, 1144, 1144, 1144, 1144,
     1144,  824,  825, 1144, 1144, 1144, 1144,  825, 1144, 1144,
      825,  826, 1144, 1144,  826, 1144, 1144, 1144, 1144,  826,
      827, 1144, 1144,  827, 1144, 1144,  827, 1144,  827,  835,
     1144, 1144, 1144, 1144,  835, 1144, 1144,  835,  836, 1144,
     1144,  836, 1144, 1144, 1144, 1144,  836,  843, 1144, 1144,

     1144, 1144,  843, 1144, 1144,  843,  844, 1144, 1144,  844,
     1144, 1144, 1144, 1144,  844,  845, 1144, 1144, 1144, 1144,
     1144, 1144,  845,  845,  846, 1144, 1144,  846, 1144, 1144,
     1144, 1144,  846,  847, 1144, 1144,  847, 1144, 1144,  847,
     1144,  847,  848, 1144, 1144,  848, 1144, 1144, 1144, 1144,
      848,  856, 1144, 1144, 1144, 1144, 1144, 1144, 1144,  856,
      857, 1144, 1144, 1144, 1144,  857, 1144, 1144,  857,  858,
     1144, 1144,  858, 1144, 1144, 1144, 1144,  858,  859, 1144,
     1144,  859, 1144, 1144,  859, 1144,  859,  866, 1144, 1144,
     1144, 1144,  866, 1144, 1144,  866,  867, 1144, 1144,  867,

     1144, 1144, 1144, 1144,  867,  875, 1144, 1144, 1144, 1144,
      875, 1144, 1144,  875,  876, 1144, 1144,  876, 1144, 1144,
     1144, 1144,  876,  877, 1144, 1144, 1144, 1144, 1144, 1144,
      877,  877,  878, 1144, 1144,  878, 1144, 1144, 1144, 1144,
      878,  879, 1144, 1144,  879, 1144, 1144,  879, 1144,  879,
      880, 1144, 1144,  880, 1144, 1144, 1144, 1144,  880,  888,
     1144, 1144, 1144, 1144, 1144, 1144, 1144,  888,  889, 1144,
     1144, 1144, 1144,  889, 1144, 1144,  889,  890, 1144, 1144,
      890, 1144, 1144, 1144, 1144,  890,  891, 1144, 1144,  891,
     1144, 1144,  891, 1144,  891,  896, 1144, 1144, 1144, 1144,

      896, 1144, 1144,  896,  897, 1144, 1144,  897, 1144, 1144,
     1144, 1144,  897,  905, 1144, 1144, 1144, 1144,  905, 1144,
     1144,  905,  906, 1144, 1144,  906, 1144, 1144, 1144, 1144,
      906,  907, 1144, 1144, 1144, 1144, 1144, 1144,  907,  907,
      908, 1144, 1144,  908, 1144, 1144, 1144, 1144,  908,  909,
     1144, 1144,  909, 1144, 1144,  909, 1144,  909,  910, 1144,
     1144,  910, 1144, 1144, 1144, 1144,  910,  917, 1144, 1144,
     1144, 1144, 1144, 1144, 1144,  917,  918, 1144, 1144, 1144,
     1144,  918, 1144, 1144,  918,  919, 1144, 1144,  919, 1144,
     1144, 1144, 1144,  919,  920, 1144, 1144,  920, 1144, 1144,

      920, 1144,  920,  923, 1144, 1144, 1144, 1144,  923, 1144,
     1144,  923,  924, 1144, 1144,  924, 1144, 1144, 1144, 1144,
      924,  932, 1144, 1144, 1144, 1144,  932, 1144, 1144,  932,
      933, 1144, 1144,  933, 1144, 1144, 1144, 1144,  933,  934,
     1144, 1144, 1144, 1144, 1144, 1144,  934,  934,  935, 1144,
     1144,  935, 1144, 1144, 1144, 1144,  935,  936, 1144, 1144,
      936, 1144, 1144,  936, 1144,  936,  937, 1144, 1144,  937,
     1144, 1144, 1144, 1144,  937,  942, 1144, 1144, 1144, 1144,
     1144, 1144, 1144,  942,  943, 1144, 1144, 1144, 1144,  943,
     1144, 1144,  943,  944, 1144, 1144,  944, 1144, 1144, 1144,

     1144,  944,  945, 1144, 1144,  945, 1144, 1144,  945, 1144,
      945,  947, 1144, 1144, 1144, 1144,  947, 1144, 1144,  947,
      948, 1144, 1144,  948, 1144, 1144, 1144, 1144,  948,  955,
     1144, 1144, 1144, 1144,  955, 1144, 1144,  955,  956, 1144,
     1144,  956, 1144, 1144, 1144, 1144,  956,  957, 1144, 1144,
     1144, 1144, 1144, 1144,  957,  957,  958, 1144, 1144,  958,
     1144, 1144, 1144, 1144,  958,  959, 1144, 1144,  959, 1144,
     1144,  959, 1144,  959,  960, 1144, 1144,  960, 1144, 1144,
     1144, 1144,  960,  963, 1144, 1144, 1144, 1144, 1144, 1144,
     1144,  963,  964, 1144, 1144, 1144, 1144,  964, 1144, 1144,

      964,  965, 1144, 1144,  965, 1144, 1144, 1144, 1144,  965,
      966, 1144, 1144,  966, 1144, 1144,  966, 1144,  966,  967,
     1144, 1144, 1144, 1144,  967, 1144, 1144,  967,  968, 1144,
     1144,  968, 1144, 1144, 1144, 1144,  968,  973, 1144, 1144,
     1144, 1144,  973, 1144, 1144,  973,  974, 1144, 1144,  974,
     1144, 1144, 1144, 1144,  974,  975, 1144, 1144, 1144, 1144,
     1144, 1144,  975,  975,  976, 1144, 1144,  976, 1144, 1144,
     1144, 1144,  976,  977, 1144, 1144,  977, 1144, 1144,  977,
     1144,  977,  978, 1144, 1144,  978, 1144, 1144, 1144, 1144,
      978,  980, 1144, 1144, 1144, 1144, 1144, 1144, 1144,  980,

      981, 1144, 1144, 1144, 1144,  981, 1144, 1144,  981,  982,
     1144, 1144,  982, 1144, 1144, 1144, 1144,  982,  983, 1144,
     1144,  983, 1144, 1144,  983, 1144,  983,  984, 1144, 1144,
     1144, 1144,  984, 1144, 1144,  984,  985, 1144, 1144,  985,
     1144, 1144, 1144, 1144,  985,  988, 1144, 1144, 1144, 1144,
      988, 1144, 1144,  988,  989, 1144, 1144,  989, 1144, 1144,
     1144, 1144,  989,  990, 1144, 1144, 1144, 1144, 1144, 1144,
      990,  990,  991, 1144, 1144,  991, 1144, 1144, 1144, 1144,
      991,  992, 1144, 1144,  992, 1144, 1144,  992, 1144,  992,
      993, 1144, 1144,  993, 1144, 1144, 1144, 1144,  993,  994,

     1144, 1144, 1144, 1144, 1144, 1144, 1144,  994,  995, 1144,
     1144, 1144, 1144,  995, 1144, 1144,  995,  996, 1144, 1144,
      996, 1144, 1144, 1144, 1144,  996,  997, 1144, 1144,  997,
     1144, 1144,  997, 1144,  997,  998, 1144, 1144, 1144, 1144,
      998, 1144, 1144,  998,  999, 1144, 1144,  999, 1144, 1144,
     1144, 1144,  999, 1001, 1144, 1144, 1144, 1144, 1001, 1144,
     1144, 1001, 1002, 1144, 1144, 1002, 1144, 1144, 1144, 1144,
     1002, 1003, 1144, 1144, 1144, 1144, 1144, 1144, 1003, 1003,
     1004, 1144, 1144, 1004, 1144, 1144, 1144, 1144, 1004, 1005,
     1144, 1144, 1005, 1144, 1144, 1005, 1144, 1005, 1006, 1144,

     1144, 1006, 1144, 1144, 1144, 1144, 1006, 1007, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1007, 1008, 1144, 1144, 1144,
     1144, 1008, 1144, 1144, 1008, 1009, 1144, 1144, 1009, 1144,
     1144, 1144, 1144, 1009, 1010, 1144, 1144, 1010, 1144, 1144,
     1010, 1144, 1010, 1011, 1144, 1144, 1144, 1144, 1011, 1144,
     1144, 1011, 1012, 1144, 1144, 1012, 1144, 1144, 1144, 1144,
     1012, 1013, 1144, 1144, 1144, 1144, 1013, 1144, 1144, 1013,
     1014, 1144, 1144, 1014, 1144, 1144, 1144, 1144, 1014, 1015,
     1144, 1144, 1144, 1144, 1144, 1144, 1015, 1015, 1016, 1144,
     1144, 1016, 1144, 1144, 1144, 1144, 1016, 1017, 1144, 1144,

     1017, 1144, 1144, 1017, 1144, 1017, 1018, 1144, 1144, 1018,
     1144, 1144, 1144, 1144, 1018, 1019, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1019, 1020, 1144, 1144, 1144, 1144, 1020,
     1144, 1144, 1020, 1021, 1144, 1144, 1021, 1144, 1144, 1144,
     1144, 1021, 1022, 1144, 1144, 1022, 1144, 1144, 1022, 1144,
     1022, 1023, 1144, 1144, 1144, 1144, 1023, 1144, 1144, 1023,
     1024, 1144, 1144, 1024, 1144, 1144, 1144, 1144, 1024, 1025,
     1144, 1144, 1144, 1144, 1025, 1144, 1144, 1025, 1026, 1144,
     1144, 1026, 1144, 1144, 1144, 1144, 1026, 1027, 1144, 1144,
     1144, 1144, 1144, 1144, 1027, 1027, 1028, 1144, 1144, 1028,

     1144, 1144, 1144, 1144, 1028, 1029, 1144, 1144, 1029, 1144,
     1144, 1029, 1144, 1029, 1030, 1144, 1144, 1030, 1144, 1144,
     1144, 1144, 1030, 1031, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1031, 1032, 1144, 1144, 1144, 1144, 1032, 1144, 1144,
     1032, 1033, 1144, 1144, 1033, 1144, 1144, 1144, 1144, 1033,
     1034, 1144, 1144, 1034, 1144, 1144, 1034, 1144, 1034, 1035,
     1144, 1144, 1144, 1144, 1035, 1144, 1144, 1035, 1036, 1144,
     1144, 1036, 1144, 1144, 1144, 1144, 1036, 1037, 1144, 1144,
     1144, 1144, 1037, 1144, 1144, 1037, 1038, 1144, 1144, 1038,
     1144, 1144, 1144, 1144, 1038, 1039, 1144, 1144, 1144, 1144,

     1144, 1144, 1039, 1039, 1040, 1144, 1144, 1040, 1144, 1144,
     1144, 1144, 1040, 1041, 1144, 1144, 1041, 1144, 1144, 1041,
     1144, 1041, 1042, 1144, 1144, 1042, 1144, 1144, 1144, 1144,
     1042, 1043, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1043,
     1044, 1144, 1144, 1144, 1144, 1044, 1144, 1144, 1044, 1045,
     1144, 1144, 1045, 1144, 1144, 1144, 1144, 1045, 1046, 1144,
     1144, 1046, 1144, 1144, 1046, 1144, 1046, 1047, 1144, 1144,
     1144, 1144, 1047, 1144, 1144, 1047, 1048, 1144, 1144, 1048,
     1144, 1144, 1144, 1144, 1048, 1049, 1144, 1144, 1144, 1144,
     1049, 1144, 1144, 1049, 1050, 1144, 1144, 1050, 1144, 1144,

     1144, 1144, 1050, 1051, 1144, 1144, 1144, 1144, 1144, 1144,
     1051, 1051, 1052, 1144, 1144, 1052, 1144, 1144, 1144, 1144,
     1052, 1053, 1144, 1144, 1053, 1144, 1144, 1053, 1144, 1053,
     1054, 1144, 1144, 1054, 1144, 1144, 1144, 1144, 1054, 1055,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1055, 1056, 1144,
     1144, 1144, 1144, 1056, 1144, 1144, 1056, 1057, 1144, 1144,
     1057, 1144, 1144, 1144, 1144, 1057, 1058, 1144, 1144, 1058,
     1144, 1144, 1058, 1144, 1058, 1059, 1144, 1144, 1144, 1144,
     1059, 1144, 1144, 1059, 1060, 1144, 1144, 1060, 1144, 1144,
     1144, 1144, 1060, 1061, 1144, 1144, 1144, 1144, 1061, 1144,

     1144, 1061, 1062, 1144, 1144, 1062, 1144, 1144, 1144, 1144,
     1062, 1063, 1144, 1144, 1144, 1144, 1144, 1144, 1063, 1063,
     1064, 1144, 1144, 1064, 1144, 1144, 1144, 1144, 1064, 1065,
     1144, 1144, 1065, 1144, 1144, 1065, 1144, 1065, 1066, 1144,
     1144, 1066, 1144, 1144, 1144, 1144, 1066, 1067, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1067, 1068, 1144, 1144, 1144,
     1144, 1068, 1144, 1144, 1068, 1069, 1144, 1144, 1069, 1144,
     1144, 1144, 1144, 1069, 1070, 1144, 1144, 1070, 1144, 1144,
     1070, 1144, 1070, 1071, 1144, 1144, 1144, 1144, 1071, 1144,
     1144, 1071, 1072, 1144, 1144, 1072, 1144, 1144, 1144, 1144,

     1072, 1073, 1144, 1144, 1144, 1144, 1073, 1144, 1144, 1073,
     1074, 1144, 1144, 1074, 1144, 1144, 1144, 1144, 1074, 1075,
     1144, 1144, 1144, 1144, 1144, 1144, 1075, 1075, 1076, 1144,
     1144, 1076, 1144, 1144, 1144, 1144, 1076, 1077, 1144, 1144,
     1077, 1144, 1144, 1077, 1144, 1077, 1078, 1144, 1144, 1078,
     1144, 1144, 1144, 1144, 1078, 1079, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1079, 1080, 1144, 1144, 1144, 1144, 1080,
     1144, 1144, 1080, 1081, 1144, 1144, 1081, 1144, 1144, 1144,
     1144, 1081, 1082, 1144, 1144, 1082, 1144, 1144, 1082, 1144,
     1082, 1083, 1144, 1144, 1144, 1144, 1083, 1144, 1144, 1083,

     1084, 1144, 1144, 1084, 1144, 1144, 1144, 1144, 1084, 1085,
     1144, 1144, 1144, 1144, 1085, 1144, 1144, 1085, 1086, 1144,
     1144, 1086, 1144, 1144, 1144, 1144, 1086, 1087, 1144, 1144,
     1144, 1144, 1144, 1144, 1087, 1087, 1088, 1144, 1144, 1088,
     1144, 1144, 1144, 1144, 1088,   63, 1144, 1144,   63, 1144,
     1144,   63, 1089, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1089, 1090, 1144, 1144, 1144, 1144, 1090, 1144, 1144, 1090,
     1091, 1144, 1144, 1091, 1144, 1144, 1144, 1144, 1091, 1092,
     1144, 1144, 1092, 1144, 1144, 1092, 1144, 1092, 1093, 1144,
     1144, 1144, 1144, 1093, 1144, 1144, 1093, 1094, 1144, 1144,

     1094, 1144, 1144, 1144, 1144, 1094, 1095, 1144, 1144, 1144,
     1144, 1095, 1144, 1144, 1095, 1096, 1144, 1144, 1096, 1144,
     1144, 1144, 1144, 1096, 1097, 1144, 1144, 1144, 1144, 1144,
     1144, 1097, 1097, 1098, 1144, 1144, 1098, 1144, 1144, 1144,
     1144, 1098, 1099, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1099, 1100, 1144, 1144, 1144, 1144, 1100, 1144, 1144, 1100,
     1101, 1144, 1144, 1101, 1144, 1144, 1144, 1144, 1101, 1102,
     1144, 1144, 1102, 1144, 1144, 1102, 1144, 1102, 1103, 1144,
     1144, 1144, 1144, 1103, 1144, 1144, 1103, 1104, 1144, 1144,
     1104, 1144, 1144, 1144, 1144, 1104, 1105, 1144, 1144, 1144,

     1144, 1105, 1144, 1144, 1105, 1106, 1144, 1144, 1106, 1144,
     1144, 1144, 1144, 1106, 1107, 1144, 1144, 1144, 1144, 1144,
     1144, 1107, 1107, 1108, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1108, 1109, 1144, 1144, 1144, 1144, 1109, 1144, 1144,
     1109, 1110, 1144, 1144, 1110, 1144, 1144, 1144, 1144, 1110,
     1111, 1144, 1144, 1111, 1144, 1144, 1111, 1144, 1111, 1112,
     1144, 1144, 1144, 1144, 1112, 1144, 1144, 1112, 1113, 1144,
     1144, 1113, 1144, 1144, 1144, 1144, 1113, 1114, 1144, 1144,
     1144, 1144, 1114, 1144, 1144, 1114, 1115, 1144, 1144, 1115,
     1144, 1144, 1144, 1144, 1115, 1116, 1144, 1144, 1144, 1144,

     1144, 1144, 1116, 1116, 1117, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1117, 1118, 1144, 1144, 1144, 1144, 1118, 1144,
     1144, 1118, 1119, 1144, 1144, 1119, 1144, 1144, 1144, 1144,
     1119, 1120, 1144, 1144, 1120, 1144, 1144, 1120, 1144, 1120,
     1121, 1144, 1144, 1144, 1144, 1121, 1144, 1144, 1121, 1122,
     1144, 1144, 1122, 1144, 1144, 1144, 1144, 1122, 1123, 1144,
     1144, 1144, 1144, 1123, 1144, 1144, 1123, 1124, 1144, 1144,
     1124, 1144, 1144, 1144, 1144, 1124, 1125, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1125, 1126, 1144, 1144, 1144, 1144,
     1126, 1144, 1144, 1126,   63, 1144, 1144,   63, 1144, 1144,

       63, 1127, 1144, 1144, 1144, 1144, 1127, 1144, 1144, 1127,
     1128, 1144, 1144, 1144, 1144, 1128, 1144, 1144, 1128, 1129,
     1144, 1144, 1129, 1144, 1144, 1144, 1144, 1129, 1130, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1130, 1131, 1144, 1144,
     1144, 1144, 1131, 1144, 1144, 1131, 1132, 1144, 1144, 1144,
     1144, 1132, 1144, 1144, 1132, 1133, 1144, 1144, 1144, 1144,
     1133, 1144, 1144, 1133, 1134, 1144, 1144, 1134, 1144, 1144,
     1144, 1144, 1134, 1135, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1135, 1136, 1144, 1144, 1144, 1144, 1136, 1144, 1144,
     1136, 1137, 1144, 1144, 1137, 1144, 1144, 1144, 1144, 1137,

     1138, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1138, 1139,
     1144, 1144, 1144, 1144, 1139, 1144, 1144, 1139, 1140, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1140, 1141, 1144, 1144,
     1144, 1144, 1141, 1144, 1144, 1141, 1142, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1142, 1143, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1143,    3, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,

     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144
    } ;

static const flex_int16_t yy_chk[11133] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    5,  142,    5,
       17,   17,   44,   22,   45,   46,   24,   22,  142,   25,
       24,  647,   64,   22,   64,   79,   24,   64,   79,   25,

       26,  632,   24,   22,    5,  630,   24,    5,  606,   25,
       26,   44,   22,   45,   46,   24,   22,   81,   25,   24,
       26,    5,   22,   79,  605,   24,   79,  601,   25,   26,
       24,   22,  575,    5,   24,  570,    5,   25,   91,   26,
       52,  125,   52,  125,  568,   81,   99,  126,   26,    5,
        9,    9,   52,    9,    9,    9,    9,    9,    9,    9,
        9,    9,    9,    9,    9,  538,   91,  100,    9,    9,
        9,    9,    9,   42,   99,   42,  126,   42,  537,   68,
       68,   42,   42,  101,   42,  127,   42,  127,  517,  214,
       42,  214,   42,   42,   42,  100,  515,  101,   77,    9,

        9,    9,   14,   77,   14,   67,   14,   68,   68,  506,
       14,   14,  101,   14,   14,   14,   14,   14,   14,   14,
       67,   14,   14,   14,   19,  101,   19,   77,   19,   29,
      504,   77,   19,   19,   67,   19,   19,   19,   28,   29,
       83,   19,   28,   19,   19,   19,   28,   19,   67,   29,
       30,   69,   28,   83,   30,  470,   83,   69,   29,   19,
       30,  469,   28,   19,   19,   96,  465,   28,   29,   83,
       30,   28,   96,  456,   19,   28,   19,   29,  455,   30,
       69,   28,   83,   30,   83,   69,  451,  102,   19,   30,
       28,   19,   19,   20,   96,   20,  406,   20,   30,  401,

       96,   20,   20,  399,   20,   20,   20,   32,  391,  385,
       20,   32,   20,   20,   20,  102,  113,   39,   33,   20,
      383,   32,   33,  364,   32,   35,   95,   39,   35,   20,
      362,   32,   33,  330,  146,   35,   32,   39,   35,   20,
       32,   95,   33,   20,  113,   35,   39,   33,   20,   72,
       32,   33,   32,   72,   35,   95,   39,   35,   20,   32,
      329,   33,   71,  146,   35,   39,   35,   20,   21,   95,
       33,  124,   21,   35,   71,   21,   36,  148,   72,   21,
       75,   72,   21,   36,   36,  321,  320,   73,   73,   36,
       36,   71,   21,  299,   74,   74,  159,   21,   75,  124,

      298,   21,   71,  105,   21,   36,  148,  105,   21,   75,
       37,   21,   36,   36,   37,   73,   73,   36,   36,  294,
       21,   23,   74,   74,   37,  159,   75,   88,   23,   88,
       23,   23,  105,  225,   37,  105,  220,   78,   78,   37,
       23,   23,  218,   37,   38,   76,  136,   38,   38,  215,
       23,  215,  162,   37,   38,  215,  139,   23,  139,   23,
       23,  139,   37,   76,   38,   78,   78,   88,   23,   23,
       27,   27,   89,   38,   76,   89,   38,   38,   27,   27,
       27,  162,  307,   38,   27,  360,  106,  360,  135,   80,
       27,   76,   38,   80,  131,   88,  106,  128,   60,   27,

       27,   89,   43,   89,   43,   92,   50,   27,   27,   27,
      307,   56,   27,   56,   56,  106,   56,   80,   27,   31,
       48,   80,   92,   31,  106,   56,   56,   56,   82,   43,
       31,   31,   43,   31,   92,   31,   31,   47,   31,   58,
      165,   58,   18,   82,   58,   82,   43,  110,   31,   84,
       92,   84,   31,   58,   58,   58,   84,   82,   43,   31,
       31,   43,   31,   31,   31,  110,   31,   34,  152,  165,
       34,   82,   15,   82,   43,   34,  110,   34,   84,  152,
       84,   49,   34,   49,   84,   49,  308,   34,   12,   49,
       49,    7,   49,  110,   49,    6,   34,  152,   49,   34,

       49,   49,   49,   98,   34,  322,   34,  322,  152,    3,
       34,  322,   98,  170,  308,   34,   51,   51,    0,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,    0,   98,  181,   51,   51,   51,   51,   51,   54,
       98,   54,  170,   54,    0,   85,   85,   54,   54,   86,
       54,  386,   54,  386,   86,  104,   54,  386,   54,   54,
       54,    0,  181,  311,    0,   51,   51,   51,   55,   93,
       55,  104,   55,   85,   85,    0,   55,   55,   86,   55,
       55,   55,   86,  182,  104,   55,   93,   55,   55,   55,
       57,  311,   57,   57,  508,   57,  508,    0,   93,  104,

      180,  224,  224,  224,   57,   57,   57,  519,  180,  519,
       57,   59,  182,   59,   93,   59,  183,    0,    0,   59,
       59,  186,   59,   59,   59,   59,   59,   59,   59,  180,
       59,   59,   59,   61,    0,   61,   61,  180,   61,   87,
       87,   62,    0,   62,   62,  183,   62,   61,   61,   61,
      186,  147,    0,   61,   61,   62,   62,   62,   94,    0,
      191,   62,   63,   94,   63,  147,   63,   87,   87,    0,
       63,   63,    0,   63,   63,   63,  366,  366,  366,   63,
      147,   63,   63,   63,   65,    0,   65,   94,   65,  191,
        0,   94,   65,   65,  147,   65,   65,   65,   70,  194,

       70,   65,   70,   65,   65,   65,   70,   70,  114,   70,
      312,   70,   97,   97,  114,   70,  149,   70,   70,   70,
       90,   90,  149,  302,   90,  302,  302,  302,  194,  103,
      103,   90,   90,  196,   65,   66,  114,   66,  312,   66,
       97,   97,  114,   66,   66,  149,   66,   66,   66,   90,
       90,  149,   66,   90,   66,   66,   66,  103,  103,   90,
       90,  107,  196,  107,  108,    0,  111,  111,  117,  107,
        0,  108,  108,  112,    0,   66,  107,  109,    0,  107,
      109,    0,  117,  109,  109,   66,  112,  112,  115,    0,
      107,  115,  107,  108,  111,  111,    0,  117,  107,  108,

      108,    0,  112,   66,  197,  107,  109,  107,  116,  109,
      117,  109,  109,  118,  112,  112,  120,  115,  116,  115,
      119,  119,    0,  118,  121,  121,  120,  122,  122,  123,
      123,  199,  301,  197,  301,    0,    0,  116,  150,    0,
      154,  150,  118,  154,    0,  120,  116,  204,  119,  119,
      301,  118,  121,  121,  120,  122,  122,  123,  123,  129,
      199,  129,  129,  130,  129,  130,  130,  150,  130,  154,
      150,  154,  209,  129,  129,  129,  204,  130,  130,  130,
      313,    0,  132,  130,  132,  132,  157,  132,  337,  157,
      133,  340,  133,  133,    0,  133,  132,  132,  132,  350,

        0,  209,  132,  132,  133,  133,  133,    0,  313,  134,
      133,  134,  134,    0,  134,  157,  337,  157,    0,  340,
      163,    0,  163,  134,  134,  134,  137,  350,  137,  187,
      137,  175,    0,  187,  137,  137,  175,  137,  137,  137,
      137,  137,  137,  137,  195,  137,  137,  137,  138,  163,
      138,  163,  138,  195,    0,    0,  138,  138,  187,  138,
      175,  138,  187,    0,  175,  138,  206,  138,  138,  138,
      141,  206,  141,  195,  141,  390,  390,  390,  141,  141,
        0,  141,  195,  141,  141,  141,  141,  141,    0,  141,
      141,  141,  143,  213,  143,  206,  143,    0,    0,  206,

      143,  143,  216,  143,  143,  143,  144,  376,  144,  143,
      144,  143,  143,  143,  144,  144,  363,  144,  363,  144,
      151,  173,  213,  144,  173,  144,  144,  144,  153,  155,
      151,  216,    0,  155,  363,  376,  156,  549,  153,  549,
      156,  156,  143,  145,  168,  145,  168,  145,    0,  151,
      173,  145,  145,  173,  145,  145,  145,  153,  155,  151,
      145,  155,  145,  145,  145,  156,  161,  153,  156,  156,
      158,  158,  160,  160,  164,  166,  161,  167,  169,  145,
      168,  232,  176,  190,  164,  166,  190,  174,  176,  235,
      169,  167,    0,  145,  232,  161,  377,  174,    0,  158,

      158,  160,  160,  164,  166,  161,  167,  169,  145,  168,
      232,  176,  190,  164,  166,  190,  174,  176,  235,  169,
      167,  171,  232,  171,  377,  171,  174,  171,  179,  171,
      171,  179,  171,  435,  171,  435,  178,    0,  171,  435,
      171,  171,  171,  172,  378,  172,  178,  172,  177,  172,
      185,  172,  172,  185,  172,  172,  172,  179,  177,  179,
      172,  184,  172,  172,  172,  178,  192,  192,  177,  189,
      188,  184,  378,  189,  188,  178,  193,  198,  201,  185,
      198,  185,  188,  188,  201,  200,  193,  177,  200,    0,
      184,  202,  202,    0,  203,  192,  192,  177,  189,  188,

      184,  189,  379,  188,  203,  193,  198,  201,  198,  205,
      237,  188,  188,  201,  200,  193,  238,  200,  207,  205,
      202,  202,  207,  203,  208,  210,  212,  208,  210,  211,
      379,  236,    0,  203,  236,    0,  211,  212,  205,  237,
      233,  587,  233,  587,  634,  238,  634,  207,  205,  245,
      207,  246,    0,  208,  210,  212,  208,  210,  211,  217,
      236,  217,  217,  236,  217,  211,  212,  249,  219,  233,
      219,  233,  219,  217,  217,  217,  219,  219,  245,  219,
      246,  219,  221,  250,  221,  219,  221,  219,  219,  219,
      221,  221,  254,  221,    0,  221,  249,  240,  644,  221,

      644,  221,  221,  221,  222,  240,  222,  222,  223,  222,
      223,  223,  250,  223,    0,  262,  242,    0,  222,  222,
      222,  254,  223,  223,  223,  242,  240,  226,  223,  226,
      226,  341,  226,  240,  341,  227,  382,  227,  227,  234,
      227,  226,  226,  226,  262,  242,  234,  226,  226,  227,
      227,  227,  228,  242,  228,  227,  228,    0,    0,  341,
      228,  228,  341,  228,  382,  228,    0,    0,  234,  228,
        0,  228,  228,  228,  229,  234,  229,  239,  229,    0,
        0,  244,  229,  229,  239,  229,  229,  229,  230,  244,
      230,  229,  230,  229,  229,  229,  230,  230,  365,  230,

      365,  230,  272,  253,    0,  230,  239,  230,  230,  230,
      244,  253,  239,  650,  241,  650,  365,  244,  243,    0,
      241,  243,  247,  277,  229,  231,  247,  231,  673,  231,
      673,  272,  253,  231,  231,  248,  231,  231,  231,  253,
        0,  248,  231,  241,  231,  231,  231,  243,  241,  256,
      243,  247,  277,  274,    0,  247,  256,  255,  231,  255,
      255,  274,  255,    0,  248,  292,  279,  292,  292,  248,
      292,  255,  255,  255,  696,  231,  696,  257,  256,  292,
      292,  292,  274,  257,  718,  256,  718,  231,  251,  274,
      251,  251,  251,  251,  251,  279,  251,  251,  740,  251,

      740,  251,  251,  251,  251,  251,  257,  251,  251,  251,
      252,  257,  252,  252,  252,  252,  252,  258,  252,  252,
      258,  252,  260,  252,  252,  252,  252,  252,  261,  252,
      252,  252,  259,  261,  259,  281,  263,  266,    0,  261,
      260,  264,  265,  267,  264,  268,  258,  263,  266,  258,
      267,  265,  268,  269,  765,  264,  765,  261,    0,  269,
      252,  259,  261,  259,  281,  263,  266,  261,  270,  260,
      264,  265,  267,  264,  268,  270,  263,  266,  271,  267,
      265,  268,  269,  264,  273,  271,  276,  269,  275,    0,
      273,  282,  283,  278,    0,  276,  280,  270,  280,  275,

        0,  278,  282,  284,  270,  285,  286,  271,  288,  287,
      289,  291,  310,  273,  271,  276,  287,  275,  273,  310,
      282,  283,  278,  276,  309,  280,    0,  280,  275,  278,
      411,  282,  284,    0,  285,  286,    0,  288,  287,  289,
      291,  310,    0,    0,  309,  287,  290,  310,  290,  290,
      290,  290,  290,  309,  290,  290,  333,  290,  411,  290,
      290,  290,  290,  290,  333,  290,  290,  290,  293,  314,
      293,  293,  309,  293,  442,  295,    0,  295,  295,  458,
      295,  458,  293,  293,  293,  333,  458,  314,  293,  295,
      295,  295,  333,  317,  317,  295,  295,  296,  314,  296,

      296,    0,  296,  442,  297,  398,  297,  297,  413,  297,
      398,  296,  296,  296,  300,  314,  300,  296,  297,  297,
      297,  317,  317,  368,    0,  368,  300,    0,  300,  300,
      300,  303,  300,  303,  398,  303,  413,    0,  398,  303,
      303,  368,  303,    0,  303,  405,  405,  405,  303,  417,
      303,  303,  303,  304,    0,  304,  315,  304,  509,  509,
      509,  304,  304,  315,  304,  304,  304,  305,  339,  305,
      304,  305,  304,  304,  304,  305,  305,  417,  305,    0,
      305,  318,  318,  339,  305,  315,  305,  305,  305,  319,
      346,  315,  381,  316,  520,  520,  520,  339,  381,  316,

        0,  319,  327,  304,  306,  319,  306,  346,  306,  318,
      318,  339,  306,  306,  327,  306,  306,  306,  319,  346,
      381,  306,  316,  306,  306,  306,  381,  316,  324,  319,
      324,  327,  324,  319,  343,  346,  324,  324,  446,  324,
      343,  324,  327,  344,  344,  324,  306,  324,  324,  324,
      328,  374,  328,  328,  306,  328,  335,  574,  574,  574,
      437,    0,  437,  343,  328,  328,  328,  446,  343,    0,
      374,  344,  344,  447,  306,  323,  335,  323,  437,  323,
      374,    0,    0,  323,  323,  335,  323,  323,  323,  323,
      323,  323,  323,    0,  323,  323,  323,  325,  374,  325,

        0,  325,  447,    0,  335,  325,  325,    0,  325,  325,
      325,  325,  325,  325,  325,    0,  325,  325,  325,  326,
      476,  326,  334,  326,    0,    0,  347,  326,  326,  336,
      326,  326,  326,  332,  334,  332,  326,  332,  326,  326,
      326,  332,  332,  347,  332,  336,  332,  419,  338,  476,
      332,  334,  332,  332,  332,  347,    0,    0,  336,  342,
        0,  793,  334,  793,  338,    0,  342,  345,  345,  326,
      331,  347,  331,  336,  331,  419,  351,  338,  331,  331,
      348,  331,  331,  331,  331,  331,  331,  331,  342,  331,
      331,  331,  338,  351,  342,  345,  345,    0,  349,  352,

      348,  349,  352,  353,  353,  351,    0,  354,  355,  348,
      354,  356,    0,  359,  412,  359,  358,  635,  635,  635,
      355,  351,  412,  356,  375,  357,  349,  352,  348,  349,
      352,  353,  353,  358,  414,  354,  414,  355,  354,  357,
      356,  375,    0,  412,  361,  358,  361,  361,  355,  361,
      412,  356,  421,  375,  357,  359,  424,  373,  361,  361,
      361,  358,  414,  373,  414,    0,  478,  357,  369,  375,
      369,  472,  369,  472,    0,    0,  369,  369,  472,  369,
      421,  369,    0,  359,  424,  369,  373,  369,  369,  369,
      370,  373,  370,  423,  370,  478,    0,  415,  370,  370,

      423,  370,  370,  370,  371,  410,  371,  370,  371,  370,
      370,  370,  371,  371,    0,  371,  415,  371,  380,  380,
      410,  371,  423,  371,  371,  371,  415,    0,  423,  505,
      824,  505,  824,  834,  410,  834,  505,  416,    0,  425,
      370,  372,  416,  372,  415,  372,  380,  380,  410,  372,
      372,  420,  372,  372,  372,  384,  420,  384,  372,  384,
      372,  372,  372,  384,  384,  416,  384,  425,  384,    0,
      416,  493,  384,  493,  384,  384,  384,  387,  426,  387,
      420,  387,  372,  426,  420,  387,  387,  480,  387,  493,
      387,  372,  422,  422,  387,    0,  387,  387,  387,  388,

      427,  388,  388,  389,  388,  389,  389,  426,  389,    0,
      372,  426,  431,  388,  388,  388,  480,  389,  389,  389,
      422,  422,  392,  389,  392,  392,    0,  392,  427,  418,
      393,  418,  393,  393,  546,  393,  392,  392,  392,  856,
      431,  856,  392,  392,  393,  393,  393,  394,  561,  394,
      393,  394,    0,    0,  462,  394,  394,  418,  394,  418,
      394,    0,  546,  462,  394,  481,  394,  394,  394,  395,
      432,  395,  432,  395,    0,    0,  561,  395,  395,    0,
      395,  395,  395,  462,    0,  864,  395,  864,  395,  395,
      395,  396,  462,  396,  481,  865,  396,  865,  432,  403,

      432,  403,  403,  429,  403,  396,  396,  396,  397,  429,
      397,    0,  397,  403,  403,  403,  397,  397,  563,  397,
      397,  397,  400,  485,  400,  397,  400,  397,  397,  397,
      400,  400,  429,  400,    0,  400,  402,  429,  402,  400,
      402,  400,  400,  400,  402,  402,  563,  402,  488,  402,
        0,    0,  485,  402,  513,  402,  402,  402,  397,  404,
      527,  404,  404,  443,  404,  528,  407,  428,  407,  407,
      443,  407,  430,  404,  404,  404,    0,  488,  430,  404,
      407,  407,  407,  513,  428,    0,  407,  407,  408,  527,
      408,  408,  443,  408,  528,  645,  428,  645,    0,  443,

      564,  430,  408,  408,  408,  409,  430,  409,  408,  409,
        0,    0,  428,  409,  409,  645,  409,  649,  409,  649,
        0,  479,  409,  479,  409,  409,  409,  433,  564,  433,
      444,  433,  510,  433,  510,  433,  433,  649,  433,  510,
      433,    0,  482,  482,  433,  444,  433,  433,  433,  434,
      479,  434,  479,  434,  887,  434,  887,  434,  434,  444,
      434,  434,  434,  436,    0,  436,  434,  530,  434,  434,
      434,  482,  482,  444,  475,    0,    0,  436,  436,  436,
      438,  436,  438,  475,  438,  516,    0,  516,  438,  438,
        0,  438,  516,  438,    0,    0,  530,  438,  567,  438,

      438,  438,  439,  475,  439,  448,  439,    0,    0,  448,
      439,  439,  475,  439,  439,  439,  440,  525,  440,  439,
      440,  439,  439,  439,  440,  440,  567,  440,  525,  440,
      445,    0,    0,  440,  448,  440,  440,  440,  448,  489,
      445,  518,  521,  518,  521,    0,  525,  483,  518,  521,
        0,    0,  439,  441,  489,  441,  525,  441,  484,  445,
      483,  441,  441,  533,  441,  441,  441,    0,  489,  445,
      441,  484,  441,  441,  441,  449,  483,  449,  449,  441,
      449,  450,  489,  450,  450,  490,  450,  484,  483,  449,
      449,  449,  533,    0,    0,  450,  450,  450,  524,  484,

      490,  450,  452,  441,  452,  452,    0,  452,  441,  524,
      453,  534,  453,  453,  490,  453,  452,  452,  452,  550,
        0,    0,  452,  452,  453,  453,  453,  524,  490,  454,
      453,  454,  454,  486,  454,  457,    0,  457,  524,  541,
      534,  541,  457,  454,  454,  454,    0,  457,  550,  457,
      457,  457,  459,  486,  459,  477,  459,  541,    0,  477,
      459,  459,  486,  459,    0,  459,  459,  459,  459,  459,
      502,  459,  459,  459,  460,  502,  460,  888,  460,  888,
        0,  486,  460,  460,  477,  460,    0,  460,  477,    0,
      553,  460,  553,  460,  460,  460,  461,  553,  461,  502,

      461,  487,  487,  502,  461,  461,  491,  461,  461,  461,
      491,  592,  560,  461,  547,  461,  461,  461,  463,    0,
      463,  463,  464,  463,  464,  464,  547,  464,    0,  560,
      487,  487,  463,  463,  463,  491,  464,  464,  464,  491,
      592,  560,  464,  547,    0,  466,  461,  466,  466,  893,
      466,  893,  621,  467,  547,  467,  467,  560,  467,  466,
      466,  466,  678,  678,  678,  466,  466,  467,  467,  467,
        0,    0,  468,  467,  468,  468,  500,  468,  471,  500,
      471,  621,  507,    0,  507,  471,  468,  468,  468,  507,
      471,  523,  471,  471,  471,  473,  523,  473,  501,  473,

      579,  501,  579,  473,  473,  500,  473,  500,  473,  473,
      473,  473,  473,    0,  473,  473,  473,  474,  579,  474,
      523,  474,    0,  507,  523,  474,  474,  501,  474,  501,
      474,  532,    0,  585,  474,  532,  474,  474,  474,  492,
        0,  492,  492,  894,  492,  894,  535,  585,  494,  535,
      494,  507,  494,  492,  492,  492,  494,  494,    0,  494,
      532,  494,  585,  532,  558,  494,  558,  494,  494,  494,
      495,  558,  495,    0,  495,  535,  585,  535,  495,  495,
        0,  495,  495,  495,  496,    0,  496,  495,  496,  495,
      495,  495,  496,  496,  566,  496,  566,  496,  700,  700,

      700,  496,  531,  496,  496,  496,    0,    0,  531,  588,
        0,  588,  503,    0,  503,  503,  588,  503,  622,    0,
      495,  497,  566,  497,  566,  497,  503,  503,  503,  497,
      497,  531,  497,  497,  497,  511,  531,  511,  497,  511,
      497,  497,  497,  511,  511,    0,  511,  622,  511,    0,
        0,  593,  511,  593,  511,  511,  511,  551,  593,  551,
      608,    0,  608,  514,    0,  514,  514,  608,  514,    0,
        0,  497,  498,  895,  498,  895,  498,  514,  514,  514,
      498,  498,    0,  498,  498,  498,  522,  548,  522,  498,
      522,  498,  498,  498,  522,  522,  548,  522,  551,  522,

      526,  627,  611,  522,  611,  522,  522,  522,  529,  556,
      526,  556,  586,    0,  586,  638,  548,  638,  529,  915,
      611,  915,  498,  499,  548,  499,  551,  499,  643,  526,
      627,  499,  499,  638,  499,  499,  499,  529,    0,  526,
      499,  562,  499,  499,  499,    0,  536,  529,  536,  536,
      556,  536,    0,  586,  717,  717,  717,  643,  562,  499,
      536,  536,  536,  540,    0,  540,  595,  540,    0,    0,
      562,  540,  540,  499,  540,  565,  540,  916,  556,  916,
      540,  586,  540,  540,  540,  595,  562,    0,  499,  512,
      565,  512,    0,  512,  591,  595,  591,  512,  512,    0,

      512,  512,  512,  542,  565,  542,  512,  542,  512,  512,
      512,  542,  542,  595,  542,    0,  542,  544,  565,  544,
      542,  544,  542,  542,  542,  544,  544,    0,  544,  654,
      544,  737,  737,  737,  544,  591,  544,  544,  544,  512,
      539,    0,  539,  597,  539,    0,    0,  597,  539,  539,
        0,  539,  539,  539,  539,  539,  539,  539,  654,  539,
      539,  539,  543,  591,  543,  917,  543,  917,  655,    0,
      543,  543,  597,  543,  543,  543,  597,    0,  552,  543,
      552,  543,  543,  543,  665,  552,  665,  554,    0,  554,
      596,  554,  552,  552,  552,  554,  554,  655,  554,  677,

      554,    0,  665,  618,  554,  618,  554,  554,  554,  596,
      618,    0,  543,  545,    0,  545,  623,  545,  623,  596,
        0,  545,  545,  623,  545,  545,  545,    0,  677,  557,
      545,  557,  545,  545,  545,    0,  557,  596,  559,  598,
      559,  682,  559,  557,  557,  557,  559,  559,  688,  559,
      688,  559,  545,  685,    0,  559,  598,  559,  559,  559,
        0,    0,  572,  545,  572,  572,  688,  572,  598,  712,
      682,  712,  631,  733,  631,  733,  572,  572,  572,  631,
      545,  555,  685,  555,  598,  555,  921,  712,  921,  555,
      555,  733,  555,  555,  555,  569,  616,  569,  555,  569,

      555,  555,  555,  569,  569,    0,  569,  616,  569,  571,
        0,  571,  569,  571,  569,  569,  569,  571,  571,    0,
      571,  625,  571,    0,    0,  616,  571,  625,  571,  571,
      571,  555,  573,  693,  573,  573,  616,  573,  633,  576,
      633,  576,  576,    0,  576,  633,  573,  573,  573,  756,
      625,  756,  573,  576,  576,  576,  625,    0,    0,  576,
      576,  577,  693,  577,  577,    0,  577,  756,  922,  599,
      922,  599,  599,  626,  599,  577,  577,  577,  578,  626,
      578,  577,  578,  599,  599,  599,  578,  578,  661,  578,
      661,  578,  580,    0,  580,  578,  580,  578,  578,  578,

      580,  580,  626,  580,  931,  580,  931,    0,  626,  580,
        0,  580,  580,  580,  581,    0,  581,  636,  581,  636,
        0,    0,  581,  581,  636,  581,  581,  581,  582,  661,
      582,  581,  582,  581,  581,  581,  582,  582,  939,  582,
      939,  582,  589,    0,  589,  582,  589,  582,  582,  582,
      589,  589,  940,  589,  940,  589,  646,  661,  646,  589,
      628,  589,  589,  589,  581,  583,  628,  583,  683,  583,
      646,  646,  646,  583,  583,  683,  583,  583,  583,  594,
        0,  594,  583,  594,  583,  583,  583,  594,  594,  628,
      594,  941,  594,  941,    0,  628,  594,  683,  594,  594,

      594,  651,    0,  651,  683,  708,    0,  604,  651,  604,
      604,  648,  604,  648,    0,  583,  584,  684,  584,  684,
      584,  604,  604,  604,  584,  584,    0,  584,  584,  584,
        0,  648,  648,  584,  708,  584,  584,  584,  584,  600,
        0,  600,  600,  656,  600,  656,  670,    0,  670,  607,
      656,  607,    0,  600,  600,  600,  607,    0,  684,  600,
      942,  607,  942,  607,  607,  607,  584,  584,  590,  660,
      590,  670,  590,  709,  658,    0,  590,  590,  660,  590,
      590,  590,    0,    0,  658,  590,  684,  590,  590,  590,
      602,  659,  602,  602,  716,  602,  724,  946,  660,  946,

      670,  659,  709,  658,  602,  602,  602,  660,    0,    0,
      602,  602,  603,  658,  603,  603,  726,  603,  590,  953,
      659,  953,  663,  716,  663,  724,  603,  603,  603,  663,
      659,    0,  603,  609,    0,  609,  674,  609,  674,    0,
        0,  609,  609,  674,  609,  726,  609,  609,  609,  609,
      609,    0,  609,  609,  609,  610,    0,  610,  679,  610,
      679,    0,    0,  610,  610,  679,  610,    0,  610,  612,
        0,  612,  610,  612,  610,  610,  610,  612,  612,    0,
      612,  671,  612,  671,    0,  686,  612,  686,  612,  612,
      612,  613,  686,  613,  697,  613,  697,    0,    0,  613,

      613,  697,  613,  613,  613,  614,  671,  614,  613,  614,
      613,  613,  613,  614,  614,  783,  614,  783,  614,  619,
      729,  619,  614,  619,  614,  614,  614,  619,  619,  813,
      619,  813,  619,  783,    0,  671,  619,    0,  619,  619,
      619,  613,  615,  672,  615,  672,  615,  813,    0,  729,
      615,  615,    0,  615,  615,  615,  624,    0,  624,  615,
      624,  615,  615,  615,  624,  624,  615,  624,  672,  624,
      637,    0,  637,  624,  637,  624,  624,  624,  637,  637,
      725,  637,  725,  637,    0,  730,  703,  637,  703,  637,
      637,  637,  615,  703,  746,  615,  617,  672,  617,  692,

      617,  692,    0,  725,  617,  617,  954,  617,  954,  617,
      617,  617,  617,  617,  730,  617,  617,  617,  620,  694,
      620,  694,  620,  746,  692,    0,  620,  620,    0,  620,
      620,  620,  725,    0,  662,  620,  662,  620,  620,  620,
      629,  662,  629,  629,  694,  629,    0,    0,  662,  662,
      662,    0,    0,  692,  629,  629,  629,  710,  639,  710,
      639,  961,  639,  961,  710,    0,  639,  639,  620,  639,
      695,  639,  695,  694,  719,  639,  719,  639,  639,  639,
      640,  719,  640,  727,  640,  727,    0,    0,  640,  640,
      727,  640,  640,  640,  641,  695,  641,  640,  641,  640,

      640,  640,  641,  641,  845,  641,  845,  641,  652,  747,
      652,  641,  652,  641,  641,  641,  652,  652,  962,  652,
      962,  652,  845,    0,  695,  652,  748,  652,  652,  652,
      640,  642,    0,  642,  731,  642,  731,    0,  747,  642,
      642,  731,  642,  642,  642,  657,    0,  657,  642,  657,
      642,  642,  642,  657,  657,  748,  657,  642,  657,  664,
        0,  664,  657,  664,  657,  657,  657,  664,  664,  963,
      664,  963,  664,  749,    0,  741,  664,  741,  664,  664,
      664,  642,  741,  750,  752,  750,  642,  653,    0,  653,
      750,  653,  753,  753,  753,  653,  653,    0,  653,  653,

      653,  666,  749,  666,  653,  666,  653,  653,  653,  666,
      666,    0,  666,  752,  666,  668,  762,  668,  666,  668,
      666,  666,  666,  668,  668,  970,  668,  970,  668,  778,
      778,  778,  668,  764,  668,  668,  668,  653,  667,    0,
      667,  754,  667,  754,    0,  762,  667,  667,  754,  667,
      667,  667,  675,  770,  675,  667,  675,  667,  667,  667,
      675,  675,  764,  675,    0,  675,  680,  771,  680,  675,
      680,  675,  675,  675,  680,  680,  971,  680,  971,  680,
        0,    0,  770,  680,  772,  680,  680,  680,  667,  669,
        0,  669,  766,  669,  766,    0,  771,  669,  669,  766,

      669,  669,  669,  687,  773,  687,  669,  687,  669,  669,
      669,  687,  687,  772,  687,    0,  687,  689,  774,  689,
      687,  689,  687,  687,  687,  689,  689,  972,  689,  972,
      689,    0,    0,  773,  689,  775,  689,  689,  689,  669,
      676,    0,  676,  776,  676,  776,    0,  774,  676,  676,
      776,  676,  676,  676,  691,    0,  691,  676,  691,  676,
      676,  676,  691,  691,  775,  691,    0,  691,  698,    0,
      698,  691,  698,  691,  691,  691,  698,  698,  979,  698,
      979,  698,  701,  701,  701,  698,    0,  698,  698,  698,
      676,  681,  745,  681,  745,  681,  702,  702,  702,  681,

      681,    0,  681,  681,  681,  701,    0,  781,  681,  781,
      681,  681,  681,  789,  781,  745,  704,  790,  704,  702,
      704,  791,  792,  797,  704,  704,  681,  704,  798,  704,
      722,  722,  722,  704,  701,  704,  704,  704,  794,    0,
      794,  681,  789,    0,  745,  794,  790,  804,  702,  804,
      791,  792,  797,  722,  804,  681,  690,  798,  690,  811,
      690,  811,    0,    0,  690,  690,  811,  690,  690,  690,
      711,  799,  711,  690,  711,  690,  690,  690,  711,  711,
        0,  711,  722,  711,  713,  800,  713,  711,  713,  711,
      711,  711,  713,  713,  980,  713,  980,  713,    0,    0,

      799,  713,  801,  713,  713,  713,  690,  699,    0,  699,
      825,  699,  825,    0,  800,  699,  699,  825,  699,  699,
      699,  715,    0,  715,  699,  715,  699,  699,  699,  715,
      715,  801,  715,    0,  715,  720,    0,  720,  715,  720,
      715,  715,  715,  720,  720,  763,  720,  763,  720,  723,
      723,  723,  720,  802,  720,  720,  720,  699,  705,  803,
      705,  808,  705,  738,  738,  738,  705,  705,  763,  705,
      705,  705,  723,    0,    0,  705,  810,  705,  705,  705,
        0,  818,  802,  728,    0,  728,  738,  728,  803,    0,
      808,  728,  728,    0,  728,  819,  728,  763,    0,    0,

      728,  723,  728,  728,  728,  810,  820,    0,  705,  706,
      818,  706,  835,  706,  835,  738,    0,  706,  706,  835,
      706,  706,  706,  732,  819,  732,  706,  732,  706,  706,
      706,  732,  732,    0,  732,  820,  732,  734,    0,  734,
      732,  734,  732,  732,  732,  734,  734,  986,  734,  986,
      734,  987,    0,  987,  734,  821,  734,  734,  734,  706,
      707,  822,  707,  823,  707,  739,  739,  739,  707,  707,
        0,  707,  707,  707,  736,    0,  736,  707,  736,  707,
      707,  707,  736,  736,  821,  736,    0,  736,  739,    0,
      822,  736,  823,  736,  736,  736,    0,    0,  744,  744,

      744,    0,    0,  760,  760,  760,  828,  994,  829,  994,
      707,  714,  830,  714,  831,  714,  769,  739,  769,  714,
      714,  744,  714,  714,  714,  742,  760,  742,  714,  742,
      714,  714,  714,  742,  742,  828,  742,  829,  742,  769,
      833,  830,  742,  831,  742,  742,  742, 1000,    0, 1000,
      744,  843,    0,  843,  788,  760,  788,  839,  843,  840,
        0,  714,  721,    0,  721,  857,  721,  857,  769,  833,
      721,  721,  857,  721,  721,  721,  751,  788,  751,  721,
      751,  721,  721,  721,  751,  751,  839,  751,  840,  751,
      755,  841,  755,  751,  755,  751,  751,  751,  755,  755,

     1007,  755, 1007,  755,    0,    0,  788,  755,  842,  755,
      755,  755,  721,  735,    0,  735,  866,  735,  866,    0,
      841,  735,  735,  866,  735,  735,  735,  757,    0,  757,
      735,  757,  735,  735,  735,  757,  757,  842,  757,    0,
      757,  759,    0,  759,  757,  759,  757,  757,  757,  759,
      759,  809,  759,  809,  759,  761,  761,  761,  759,  849,
      759,  759,  759,  735,  743,  850,  743,  851,  743,  779,
      779,  779,  743,  743,  809,  743,  743,  743,  761,    0,
        0,  743,  852,  743,  743,  743,    0,  853,  849,  767,
        0,  767,  779,  767,  850,    0,  851,  767,  767,  817,

      767,  817,  767,  809,    0,    0,  767,  761,  767,  767,
      767,  852,  854,    0,  743,  758,  853,  758,  855,  758,
        0,  779,  817,  758,  758,    0,  758,  758,  758,  777,
      860,  777,  758,  777,  758,  758,  758,  777,  777,    0,
      777,  854,  777,  861,  862,    0,  777,  855,  777,  777,
      777,  817,  869,  780,  780,  780, 1019,    0, 1019,  860,
     1031,  870, 1031,  871,    0,  758,  768,  872,  768,  873,
      768,    0,  861,  862,  768,  768,  780,  768,  768,  768,
      782,  869,  782,  768,  782,  768,  768,  768,  782,  782,
      870,  782,  871,  782,    0,    0,  872,  782,  873,  782,

      782,  782,  784,    0,  784,  780,  784,  875,    0,  875,
      784,  784,    0,  784,  875,  784,  768,    0, 1043,  784,
     1043,  784,  784,  784,  785,  838,  785,  838,  785,  787,
      787,  787,  785,  785,  874,  785,  785,  785,  786,  881,
      786,  785,  786,  785,  785,  785,  786,  786,  838,  786,
      882,  786,  787,  883,  877,  786,  877,  786,  786,  786,
     1055,    0, 1055,  874, 1067,    0, 1067,  795,  881,  795,
      884,  795,  877,    0,  785,  795,  795,  838,  795,  882,
      795,  787,  883, 1079,  795, 1079,  795,  795,  795,  796,
      868,  796,  868,  796,  806,  806,  806,  796,  796,  884,

      796,  796,  796,  805,  886,  805,  796,  805,  796,  796,
      796,  805,  805,  868,  805,  892,  805,  806,  898,    0,
      805,  899,  805,  805,  805,  807,  807,  807,  889,    0,
      889,  900,  812,  886,  812,  889,  812,  901,    0,  796,
      812,  812,  868,  812,  892,  812,  806,  898,  807,  812,
      899,  812,  812,  812,  814,  902,  814,  896,  814,  896,
      900,    0,  814,  814,  896,  814,  901,  814, 1089,    0,
     1089,  814,    0,  814,  814,  814,    0,  807,  815,    0,
      815,  905,  815,  905,  902,    0,  815,  815,  905,  815,
      815,  815,  816,  903,  816,  815,  816,  815,  815,  815,

      816,  816,  907,  816,  907,  816,  826,    0,  826,  816,
      826,  816,  816,  816,  826,  826, 1099,  826, 1099,  826,
      907,    0,  903,  826,  904,  826,  826,  826,  815,  827,
      911,  827,  912,  827,  837,  837,  837,  827,  827,  913,
      827,  827,  827,  836,    0,  836,  827,  836,  827,  827,
      827,  836,  836,  904,  836,  925,  836,  837,  926,  911,
      836,  912,  836,  836,  836, 1108,  927, 1108,  913,    0,
      928,  918,  844,  918,  844,  923,  844,  923,  918,  827,
      844,  844,  923,  844,  925,  844,  837,  926,  930,  844,
        0,  844,  844,  844,  846,  927,  846,    0,  846,  928,

        0,    0,  846,  846,  934,  846,  934,  846, 1117,    0,
     1117,  846,    0,  846,  846,  846,  847,  930,  847,  932,
      847,  932,  934,    0,  847,  847,  932,  847,  847,  847,
      848,  938,  848,  847,  848,  847,  847,  847,  848,  848,
      957,  848,  957,  848,  858,  949,  858,  848,  858,  848,
      848,  848,  858,  858, 1125,  858, 1125,  858,  957,    0,
      938,  858,  950,  858,  858,  858,  847,  859,    0,  859,
      943,  859,  943,    0,  949,  859,  859,  943,  859,  859,
      859,  867,  951,  867,  859,  867,  859,  859,  859,  867,
      867,  950,  867,    0,  867,  876,  969,  876,  867,  876,

      867,  867,  867,  876,  876, 1130,  876, 1130,  876,    0,
        0,  951,  876,    0,  876,  876,  876,  859,  878,    0,
      878,  947,  878,  947,    0,  969,  878,  878,  947,  878,
     1135,  878, 1135,    0,  955,  878,  955,  878,  878,  878,
      879,  955,  879,  964,  879,  964,    0,    0,  879,  879,
      964,  879,  879,  879,  880,    0,  880,  879,  880,  879,
      879,  879,  880,  880,  975,  880,  975,  880,  890,    0,
      890,  880,  890,  880,  880,  880,  890,  890, 1138,  890,
     1138,  890,  975,    0, 1140,  890, 1140,  890,  890,  890,
      879,  891,    0,  891,  967,  891,  967,    0,    0,  891,

      891,  967,  891,  891,  891,  897,    0,  897,  891,  897,
      891,  891,  891,  897,  897,  990,  897,  990,  897,  906,
        0,  906,  897,  906,  897,  897,  897,  906,  906, 1142,
      906, 1142,  906,  990,    0, 1143,  906, 1143,  906,  906,
      906,  891,  908,    0,  908,  973,  908,  973,    0,    0,
      908,  908,  973,  908,    0,  908,    0,    0,  981,  908,
      981,  908,  908,  908,  909,  981,  909,  984,  909,  984,
        0,    0,  909,  909,  984,  909,  909,  909,  910,    0,
      910,  909,  910,  909,  909,  909,  910,  910, 1003,  910,
     1003,  910,  919,    0,  919,  910,  919,  910,  910,  910,

      919,  919,    0,  919,    0,  919, 1003,    0,    0,  919,
        0,  919,  919,  919,  909,  920,    0,  920,  988,  920,
      988,    0,    0,  920,  920,  988,  920,  920,  920,  924,
        0,  924,  920,  924,  920,  920,  920,  924,  924, 1015,
      924, 1015,  924,  933,    0,  933,  924,  933,  924,  924,
      924,  933,  933,    0,  933,    0,  933, 1015,    0,    0,
      933,    0,  933,  933,  933,  920,  935,    0,  935,  995,
      935,  995,    0,    0,  935,  935,  995,  935,    0,  935,
        0,    0,  998,  935,  998,  935,  935,  935,  936,  998,
      936, 1001,  936, 1001,    0,    0,  936,  936, 1001,  936,

      936,  936,  937,    0,  937,  936,  937,  936,  936,  936,
      937,  937, 1027,  937, 1027,  937,  944,    0,  944,  937,
      944,  937,  937,  937,  944,  944,    0,  944,    0,  944,
     1027,    0,    0,  944,    0,  944,  944,  944,  936,  945,
        0,  945, 1008,  945, 1008,    0,    0,  945,  945, 1008,
      945,  945,  945,  948,    0,  948,  945,  948,  945,  945,
      945,  948,  948, 1039,  948, 1039,  948,  956,    0,  956,
      948,  956,  948,  948,  948,  956,  956,    0,  956,    0,
      956, 1039,    0,    0,  956,    0,  956,  956,  956,  945,
      958,    0,  958, 1011,  958, 1011,    0,    0,  958,  958,

     1011,  958,    0,  958,    0,    0, 1013,  958, 1013,  958,
      958,  958,  959, 1013,  959, 1020,  959, 1020,    0,    0,
      959,  959, 1020,  959,  959,  959,  960,    0,  960,  959,
      960,  959,  959,  959,  960,  960, 1051,  960, 1051,  960,
      965,    0,  965,  960,  965,  960,  960,  960,  965,  965,
        0,  965,    0,  965, 1051,    0,    0,  965,    0,  965,
      965,  965,  959,  966,    0,  966, 1023,  966, 1023,    0,
        0,  966,  966, 1023,  966,  966,  966,  968,    0,  968,
      966,  968,  966,  966,  966,  968,  968, 1063,  968, 1063,
      968,  974,    0,  974,  968,  974,  968,  968,  968,  974,

      974,    0,  974,    0,  974, 1063,    0,    0,  974,    0,
      974,  974,  974,  966,  976,    0,  976, 1025,  976, 1025,
        0,    0,  976,  976, 1025,  976,    0,  976,    0,    0,
     1032,  976, 1032,  976,  976,  976,  977, 1032,  977, 1035,
      977, 1035,    0,    0,  977,  977, 1035,  977,  977,  977,
      978,    0,  978,  977,  978,  977,  977,  977,  978,  978,
     1075,  978, 1075,  978,  982,    0,  982,  978,  982,  978,
      978,  978,  982,  982,    0,  982,    0,  982, 1075,    0,
        0,  982,    0,  982,  982,  982,  977,  983,    0,  983,
     1037,  983, 1037,    0,    0,  983,  983, 1037,  983,  983,

      983,  985,    0,  985,  983,  985,  983,  983,  983,  985,
      985, 1087,  985, 1087,  985,  989,    0,  989,  985,  989,
      985,  985,  985,  989,  989,    0,  989,    0,  989, 1087,
        0,    0,  989,    0,  989,  989,  989,  983,  991,    0,
      991, 1044,  991, 1044,    0,    0,  991,  991, 1044,  991,
        0,  991,    0,    0, 1047,  991, 1047,  991,  991,  991,
      992, 1047,  992, 1049,  992, 1049,    0,    0,  992,  992,
     1049,  992,  992,  992,  993,    0,  993,  992,  993,  992,
      992,  992,  993,  993, 1097,  993, 1097,  993,  996,    0,
      996,  993,  996,  993,  993,  993,  996,  996,    0,  996,

        0,  996, 1097,    0,    0,  996,    0,  996,  996,  996,
      992,  997,    0,  997, 1056,  997, 1056,    0,    0,  997,
      997, 1056,  997,  997,  997,  999,    0,  999,  997,  999,
      997,  997,  997,  999,  999, 1107,  999, 1107,  999, 1002,
        0, 1002,  999, 1002,  999,  999,  999, 1002, 1002,    0,
     1002,    0, 1002, 1107,    0,    0, 1002,    0, 1002, 1002,
     1002,  997, 1004,    0, 1004, 1059, 1004, 1059,    0,    0,
     1004, 1004, 1059, 1004,    0, 1004,    0,    0, 1061, 1004,
     1061, 1004, 1004, 1004, 1005, 1061, 1005, 1068, 1005, 1068,
        0,    0, 1005, 1005, 1068, 1005, 1005, 1005, 1006,    0,

     1006, 1005, 1006, 1005, 1005, 1005, 1006, 1006, 1116, 1006,
     1116, 1006, 1009,    0, 1009, 1006, 1009, 1006, 1006, 1006,
     1009, 1009,    0, 1009,    0, 1009, 1116,    0,    0, 1009,
        0, 1009, 1009, 1009, 1005, 1010,    0, 1010, 1071, 1010,
     1071,    0,    0, 1010, 1010, 1071, 1010, 1010, 1010, 1012,
        0, 1012, 1010, 1012, 1010, 1010, 1010, 1012, 1012,    0,
     1012,    0, 1012, 1014,    0, 1014, 1012, 1014, 1012, 1012,
     1012, 1014, 1014,    0, 1014,    0, 1014,    0,    0,    0,
     1014,    0, 1014, 1014, 1014, 1010, 1016,    0, 1016, 1073,
     1016, 1073,    0,    0, 1016, 1016, 1073, 1016,    0, 1016,

        0,    0, 1080, 1016, 1080, 1016, 1016, 1016, 1017, 1080,
     1017, 1083, 1017, 1083,    0,    0, 1017, 1017, 1083, 1017,
     1017, 1017, 1018,    0, 1018, 1017, 1018, 1017, 1017, 1017,
     1018, 1018,    0, 1018,    0, 1018, 1021,    0, 1021, 1018,
     1021, 1018, 1018, 1018, 1021, 1021,    0, 1021,    0, 1021,
        0,    0,    0, 1021,    0, 1021, 1021, 1021, 1017, 1022,
        0, 1022, 1085, 1022, 1085,    0,    0, 1022, 1022, 1085,
     1022, 1022, 1022, 1024,    0, 1024, 1022, 1024, 1022, 1022,
     1022, 1024, 1024,    0, 1024,    0, 1024, 1026,    0, 1026,
     1024, 1026, 1024, 1024, 1024, 1026, 1026,    0, 1026,    0,

     1026,    0,    0,    0, 1026,    0, 1026, 1026, 1026, 1022,
     1028,    0, 1028, 1090, 1028, 1090,    0,    0, 1028, 1028,
     1090, 1028,    0, 1028,    0,    0, 1093, 1028, 1093, 1028,
     1028, 1028, 1029, 1093, 1029, 1095, 1029, 1095,    0,    0,
     1029, 1029, 1095, 1029, 1029, 1029, 1030,    0, 1030, 1029,
     1030, 1029, 1029, 1029, 1030, 1030,    0, 1030,    0, 1030,
     1033,    0, 1033, 1030, 1033, 1030, 1030, 1030, 1033, 1033,
        0, 1033,    0, 1033,    0,    0,    0, 1033,    0, 1033,
     1033, 1033, 1029, 1034,    0, 1034, 1100, 1034, 1100,    0,
        0, 1034, 1034, 1100, 1034, 1034, 1034, 1036,    0, 1036,

     1034, 1036, 1034, 1034, 1034, 1036, 1036,    0, 1036,    0,
     1036, 1038,    0, 1038, 1036, 1038, 1036, 1036, 1036, 1038,
     1038,    0, 1038,    0, 1038,    0,    0,    0, 1038,    0,
     1038, 1038, 1038, 1034, 1040,    0, 1040, 1103, 1040, 1103,
        0,    0, 1040, 1040, 1103, 1040,    0, 1040,    0,    0,
     1105, 1040, 1105, 1040, 1040, 1040, 1041, 1105, 1041, 1109,
     1041, 1109,    0,    0, 1041, 1041, 1109, 1041, 1041, 1041,
     1042,    0, 1042, 1041, 1042, 1041, 1041, 1041, 1042, 1042,
        0, 1042,    0, 1042, 1045,    0, 1045, 1042, 1045, 1042,
     1042, 1042, 1045, 1045,    0, 1045,    0, 1045,    0,    0,

        0, 1045,    0, 1045, 1045, 1045, 1041, 1046,    0, 1046,
     1112, 1046, 1112,    0,    0, 1046, 1046, 1112, 1046, 1046,
     1046, 1048,    0, 1048, 1046, 1048, 1046, 1046, 1046, 1048,
     1048,    0, 1048,    0, 1048, 1050,    0, 1050, 1048, 1050,
     1048, 1048, 1048, 1050, 1050,    0, 1050,    0, 1050,    0,
        0,    0, 1050,    0, 1050, 1050, 1050, 1046, 1052,    0,
     1052, 1114, 1052, 1114,    0,    0, 1052, 1052, 1114, 1052,
        0, 1052,    0,    0, 1118, 1052, 1118, 1052, 1052, 1052,
     1053, 1118, 1053, 1121, 1053, 1121,    0,    0, 1053, 1053,
     1121, 1053, 1053, 1053, 1054,    0, 1054, 1053, 1054, 1053,

     1053, 1053, 1054, 1054,    0, 1054,    0, 1054, 1057,    0,
     1057, 1054, 1057, 1054, 1054, 1054, 1057, 1057,    0, 1057,
        0, 1057,    0,    0,    0, 1057,    0, 1057, 1057, 1057,
     1053, 1058,    0, 1058, 1123, 1058, 1123,    0,    0, 1058,
     1058, 1123, 1058, 1058, 1058, 1060,    0, 1060, 1058, 1060,
     1058, 1058, 1058, 1060, 1060,    0, 1060,    0, 1060, 1062,
        0, 1062, 1060, 1062, 1060, 1060, 1060, 1062, 1062,    0,
     1062,    0, 1062,    0,    0,    0, 1062,    0, 1062, 1062,
     1062, 1058, 1064,    0, 1064, 1126, 1064, 1126,    0,    0,
     1064, 1064, 1126, 1064,    0, 1064,    0,    0, 1127, 1064,

     1127, 1064, 1064, 1064, 1065, 1127, 1065, 1128, 1065, 1128,
        0,    0, 1065, 1065, 1128, 1065, 1065, 1065, 1066,    0,
     1066, 1065, 1066, 1065, 1065, 1065, 1066, 1066,    0, 1066,
        0, 1066, 1069,    0, 1069, 1066, 1069, 1066, 1066, 1066,
     1069, 1069,    0, 1069,    0, 1069,    0,    0,    0, 1069,
        0, 1069, 1069, 1069, 1065, 1070,    0, 1070, 1131, 1070,
     1131,    0,    0, 1070, 1070, 1131, 1070, 1070, 1070, 1072,
        0, 1072, 1070, 1072, 1070, 1070, 1070, 1072, 1072,    0,
     1072,    0, 1072, 1074,    0, 1074, 1072, 1074, 1072, 1072,
     1072, 1074, 1074,    0, 1074,    0, 1074,    0,    0,    0,

     1074,    0, 1074, 1074, 1074, 1070, 1076,    0, 1076, 1132,
     1076, 1132,    0,    0, 1076, 1076, 1132, 1076,    0, 1076,
        0,    0, 1133, 1076, 1133, 1076, 1076, 1076, 1077, 1133,
     1077, 1136, 1077, 1136,    0,    0, 1077, 1077, 1136, 1077,
     1077, 1077, 1078,    0, 1078, 1077, 1078, 1077, 1077, 1077,
     1078, 1078,    0, 1078,    0, 1078, 1081,    0, 1081, 1078,
     1081, 1078, 1078, 1078, 1081, 1081,    0, 1081,    0, 1081,
        0,    0, 1139, 1081, 1139, 1081, 1081, 1081, 1082, 1139,
     1082, 1141, 1082, 1141,    0,    0, 1082, 1082, 1141, 1082,
     1082, 1082, 1084,    0, 1084, 1082, 1084, 1082, 1082, 1082,

     1084, 1084,    0, 1084,    0, 1084, 1086,    0, 1086, 1084,
     1086, 1084, 1084, 1084, 1086, 1086,    0, 1086,    0, 1086,
        0,    0,    0, 1086,    0, 1086, 1086, 1086, 1082, 1088,
        0, 1088,    0, 1088,    0,    0,    0, 1088, 1088,    0,
     1088,    0, 1088, 1091,    0, 1091, 1088, 1091, 1088, 1088,
     1088, 1091, 1091,    0, 1091,    0, 1091,    0,    0,    0,
     1091,    0, 1091, 1091, 1091, 1092,    0, 1092,    0, 1092,
        0,    0,    0, 1092, 1092,    0, 1092, 1092, 1092, 1094,
        0, 1094, 1092, 1094, 1092, 1092, 1092, 1094, 1094,    0,
     1094,    0, 1094, 1096,    0, 1096, 1094, 1096, 1094, 1094,

     1094, 1096, 1096,    0, 1096,    0, 1096,    0,    0,    0,
     1096,    0, 1096, 1096, 1096, 1092, 1098,    0, 1098,    0,
     1098,    0,    0,    0, 1098, 1098,    0, 1098,    0, 1098,
     1101,    0, 1101, 1098, 1101, 1098, 1098, 1098, 1101, 1101,
        0, 1101,    0, 1101,    0,    0,    0, 1101,    0, 1101,
     1101, 1101, 1102,    0, 1102,    0, 1102,    0,    0,    0,
     1102, 1102,    0, 1102, 1102, 1102, 1104,    0, 1104, 1102,
     1104, 1102, 1102, 1102, 1104, 1104,    0, 1104,    0, 1104,
     1106,    0, 1106, 1104, 1106, 1104, 1104, 1104, 1106, 1106,
        0, 1106,    0, 1106,    0,    0,    0, 1106,    0, 1106,

     1106, 1106, 1102, 1110,    0, 1110,    0, 1110,    0,    0,
        0, 1110, 1110,    0, 1110,    0, 1110,    0,    0,    0,
     1110,    0, 1110, 1110, 1110, 1111,    0, 1111,    0, 1111,
        0,    0,    0, 1111, 1111,    0, 1111, 1111, 1111, 1113,
        0, 1113, 1111, 1113, 1111, 1111, 1111, 1113, 1113,    0,
     1113,    0, 1113, 1115,    0, 1115, 1113, 1115, 1113, 1113,
     1113, 1115, 1115,    0, 1115,    0, 1115,    0,    0,    0,
     1115,    0, 1115, 1115, 1115, 1111, 1119,    0, 1119,    0,
     1119,    0,    0,    0, 1119, 1119,    0, 1119,    0, 1119,
        0,    0,    0, 1119,    0, 1119, 1119, 1119, 1120,    0,

     1120,    0, 1120,    0,    0,    0, 1120, 1120,    0, 1120,
     1120, 1120, 1122,    0, 1122, 1120, 1122, 1120, 1120, 1120,
     1122, 1122,    0, 1122,    0, 1122, 1124,    0, 1124, 1122,
     1124, 1122, 1122, 1122, 1124, 1124,    0, 1124,    0, 1124,
     1129,    0, 1129, 1124, 1129, 1124, 1124, 1124, 1129, 1129,
        0, 1129,    0, 1129, 1134,    0, 1134, 1129, 1134, 1129,
     1129, 1129, 1134, 1134,    0, 1134,    0, 1134, 1137,    0,
     1137, 1134, 1137, 1134, 1134, 1134, 1137, 1137,    0, 1137,
        0, 1137,    0,    0,    0, 1137,    0, 1137, 1137, 1137,
     1145, 1145,    0, 1145, 1145, 1145, 1145, 1145, 1145, 1145,

     1146, 1146,    0, 1146, 1146, 1146, 1146, 1146, 1146, 1146,
     1147,    0,    0, 1147,    0,    0, 1147, 1148,    0,    0,
     1148,    0,    0, 1148,    0, 1148, 1149,    0,    0, 1149,
        0,    0,    0,    0, 1149, 1150, 1150,    0, 1150, 1150,
     1150, 1150, 1150, 1150, 1150, 1151,    0, 1151,    0,    0,
        0,    0,    0, 1151, 1152,    0,    0, 1152,    0,    0,
     1152,    0, 1152, 1153,    0,    0, 1153,    0,    0,    0,
        0, 1153, 1154, 1154,    0, 1154, 1154, 1154, 1154, 1154,
     1154, 1154, 1155, 1155,    0, 1155, 1155, 1155, 1155, 1155,
     1155, 1155, 1156,    0,    0, 1156,    0,    0,    0,    0,

     1156, 1157,    0,    0, 1157,    0,    0, 1157,    0, 1157,
     1158,    0,    0, 1158,    0,    0,    0,    0, 1158, 1159,
        0, 1159,    0,    0,    0,    0,    0, 1159, 1160,    0,
        0, 1160,    0,    0,    0,    0, 1160, 1161,    0,    0,
     1161,    0,    0, 1161,    0, 1161, 1162,    0,    0, 1162,
        0,    0,    0,    0, 1162, 1163,    0, 1163, 1163, 1163,
        0,    0,    0, 1163, 1164,    0, 1164, 1164, 1164,    0,
        0,    0, 1164, 1165,    0, 1165,    0,    0,    0,    0,
        0, 1165, 1166, 1166,    0, 1166, 1166, 1166, 1166, 1166,
     1166, 1166, 1167, 1167,    0, 1167, 1167, 1167, 1167, 1167,

     1167, 1167, 1168,    0,    0,    0,    0,    0,    0, 1168,
     1168, 1169,    0,    0, 1169,    0,    0,    0,    0, 1169,
     1170,    0,    0, 1170,    0,    0, 1170,    0, 1170, 1171,
        0,    0, 1171,    0,    0,    0,    0, 1171, 1172, 1172,
        0, 1172, 1172, 1172, 1172, 1172, 1172, 1172, 1173, 1173,
        0, 1173, 1173, 1173, 1173, 1173, 1173, 1173, 1174,    0,
        0, 1174,    0,    0,    0,    0, 1174, 1175,    0,    0,
     1175,    0,    0, 1175, 1176,    0,    0, 1176,    0,    0,
     1176,    0, 1176, 1177, 1177,    0, 1177, 1177, 1177, 1177,
     1177, 1177, 1177, 1178, 1178,    0, 1178, 1178, 1178, 1178,

     1178, 1178, 1178, 1179,    0,    0, 1179,    0,    0,    0,
        0, 1179, 1180,    0,    0,    0,    0,    0,    0, 1180,
     1180, 1181,    0,    0, 1181,    0,    0,    0,    0, 1181,
     1182,    0,    0, 1182,    0,    0, 1182,    0, 1182, 1183,
        0,    0, 1183,    0,    0,    0,    0, 1183, 1184,    0,
     1184,    0,    0,    0,    0,    0, 1184, 1185,    0,    0,
     1185,    0,    0,    0,    0, 1185, 1186,    0,    0, 1186,
        0,    0, 1186,    0, 1186, 1187,    0, 1187,    0,    0,
        0,    0,    0, 1187, 1188,    0,    0, 1188,    0,    0,
        0,    0, 1188, 1189,    0,    0,    0,    0,    0,    0,

     1189, 1189, 1190,    0,    0, 1190,    0,    0,    0,    0,
     1190, 1191,    0,    0, 1191,    0,    0, 1191,    0, 1191,
     1192,    0,    0, 1192,    0,    0,    0,    0, 1192, 1193,
     1193,    0, 1193, 1193, 1193, 1193, 1193, 1193, 1193, 1194,
     1194,    0, 1194, 1194, 1194, 1194, 1194, 1194, 1194, 1195,
        0,    0,    0,    0, 1195,    0,    0, 1195, 1196,    0,
        0, 1196,    0,    0,    0,    0, 1196, 1197,    0,    0,
     1197,    0,    0, 1197,    0, 1197, 1198, 1198,    0, 1198,
     1198, 1198, 1198, 1198, 1198, 1198, 1199, 1199,    0, 1199,
     1199, 1199, 1199, 1199, 1199, 1199, 1200,    0,    0,    0,

        0, 1200,    0,    0, 1200, 1201,    0,    0, 1201,    0,
        0,    0,    0, 1201, 1202,    0, 1202,    0,    0,    0,
        0,    0, 1202, 1203,    0,    0,    0,    0,    0,    0,
     1203, 1203, 1204,    0,    0, 1204,    0,    0,    0,    0,
     1204, 1205,    0,    0, 1205,    0,    0, 1205,    0, 1205,
     1206,    0,    0, 1206,    0,    0,    0,    0, 1206, 1207,
        0,    0,    0,    0, 1207,    0,    0, 1207, 1208,    0,
        0, 1208,    0,    0,    0,    0, 1208, 1209,    0,    0,
     1209,    0,    0, 1209,    0, 1209, 1210,    0,    0,    0,
        0, 1210,    0,    0, 1210, 1211,    0,    0, 1211,    0,

        0,    0,    0, 1211, 1212, 1212,    0, 1212, 1212, 1212,
     1212, 1212, 1212, 1212, 1213, 1213,    0, 1213, 1213, 1213,
     1213, 1213, 1213, 1213, 1214,    0,    0, 1214,    0,    0,
        0,    0, 1214, 1215,    0,    0,    0,    0,    0,    0,
     1215, 1215, 1216,    0,    0, 1216,    0,    0,    0,    0,
     1216, 1217,    0,    0, 1217,    0,    0, 1217,    0, 1217,
     1218,    0,    0, 1218,    0,    0,    0,    0, 1218, 1219,
        0,    0,    0,    0, 1219,    0,    0, 1219, 1220,    0,
        0, 1220,    0,    0,    0,    0, 1220, 1221,    0,    0,
     1221,    0,    0, 1221,    0, 1221, 1222,    0,    0,    0,

        0, 1222,    0,    0, 1222, 1223,    0,    0, 1223,    0,
        0,    0,    0, 1223, 1224,    0, 1224,    0,    0,    0,
        0,    0, 1224, 1225,    0,    0, 1225,    0,    0,    0,
        0, 1225, 1226,    0,    0,    0,    0,    0,    0, 1226,
     1226, 1227,    0,    0, 1227,    0,    0,    0,    0, 1227,
     1228,    0,    0, 1228,    0,    0, 1228,    0, 1228, 1229,
        0,    0, 1229,    0,    0,    0,    0, 1229, 1230,    0,
        0,    0,    0, 1230,    0,    0, 1230, 1231,    0,    0,
     1231,    0,    0,    0,    0, 1231, 1232,    0,    0, 1232,
        0,    0, 1232,    0, 1232, 1233,    0,    0,    0,    0,

     1233,    0,    0, 1233, 1234,    0,    0, 1234,    0,    0,
        0,    0, 1234, 1235, 1235,    0, 1235, 1235, 1235, 1235,
     1235, 1235, 1235, 1236, 1236,    0, 1236, 1236, 1236, 1236,
     1236, 1236, 1236, 1237,    0,    0,    0,    0, 1237,    0,
        0, 1237, 1238,    0,    0, 1238,    0,    0,    0,    0,
     1238, 1239,    0,    0,    0,    0,    0,    0, 1239, 1239,
     1240,    0,    0, 1240,    0,    0,    0,    0, 1240, 1241,
        0,    0, 1241,    0,    0, 1241,    0, 1241, 1242,    0,
        0, 1242,    0,    0,    0,    0, 1242, 1243,    0,    0,
     1243,    0,    0,    0,    0, 1243, 1244,    0,    0,    0,

        0, 1244,    0,    0, 1244, 1245,    0,    0, 1245,    0,
        0,    0,    0, 1245, 1246,    0,    0, 1246,    0,    0,
     1246,    0, 1246, 1247,    0,    0,    0,    0, 1247,    0,
        0, 1247, 1248,    0,    0, 1248,    0,    0,    0,    0,
     1248, 1249,    0,    0,    0,    0, 1249,    0,    0, 1249,
     1250,    0,    0, 1250,    0,    0,    0,    0, 1250, 1251,
        0,    0,    0,    0,    0,    0, 1251, 1251, 1252,    0,
        0, 1252,    0,    0,    0,    0, 1252, 1253,    0,    0,
     1253,    0,    0, 1253,    0, 1253, 1254,    0,    0, 1254,
        0,    0,    0,    0, 1254, 1255,    0,    0,    0,    0,

        0,    0,    0, 1255, 1256,    0,    0,    0,    0, 1256,
        0,    0, 1256, 1257,    0,    0, 1257,    0,    0,    0,
        0, 1257, 1258,    0,    0, 1258,    0,    0, 1258,    0,
     1258, 1259,    0,    0,    0,    0, 1259,    0,    0, 1259,
     1260,    0,    0, 1260,    0,    0,    0,    0, 1260, 1261,
        0,    0,    0,    0, 1261,    0,    0, 1261, 1262,    0,
        0, 1262,    0,    0,    0,    0, 1262, 1263,    0,    0,
        0,    0,    0,    0, 1263, 1263, 1264,    0,    0, 1264,
        0,    0,    0,    0, 1264, 1265,    0,    0, 1265,    0,
        0, 1265,    0, 1265, 1266,    0,    0, 1266,    0,    0,

        0,    0, 1266, 1267,    0,    0,    0,    0,    0,    0,
        0, 1267, 1268,    0,    0,    0,    0, 1268,    0,    0,
     1268, 1269,    0,    0, 1269,    0,    0,    0,    0, 1269,
     1270,    0,    0, 1270,    0,    0, 1270,    0, 1270, 1271,
        0,    0,    0,    0, 1271,    0,    0, 1271, 1272,    0,
        0, 1272,    0,    0,    0,    0, 1272, 1273,    0,    0,
        0,    0, 1273,    0,    0, 1273, 1274,    0,    0, 1274,
        0,    0,    0,    0, 1274, 1275,    0,    0,    0,    0,
        0,    0, 1275, 1275, 1276,    0,    0, 1276,    0,    0,
        0,    0, 1276, 1277,    0,    0, 1277,    0,    0, 1277,

        0, 1277, 1278,    0,    0, 1278,    0,    0,    0,    0,
     1278, 1279,    0,    0,    0,    0,    0,    0,    0, 1279,
     1280,    0,    0,    0,    0, 1280,    0,    0, 1280, 1281,
        0,    0, 1281,    0,    0,    0,    0, 1281, 1282,    0,
        0, 1282,    0,    0, 1282,    0, 1282, 1283,    0,    0,
        0,    0, 1283,    0,    0, 1283, 1284,    0,    0, 1284,
        0,    0,    0,    0, 1284, 1285,    0,    0,    0,    0,
     1285,    0,    0, 1285, 1286,    0,    0, 1286,    0,    0,
        0,    0, 1286, 1287,    0,    0,    0,    0,    0,    0,
     1287, 1287, 1288,    0,    0, 1288,    0,    0,    0,    0,

     1288, 1289,    0,    0, 1289,    0,    0, 1289,    0, 1289,
     1290,    0,    0, 1290,    0,    0,    0,    0, 1290, 1291,
        0,    0,    0,    0,    0,    0,    0, 1291, 1292,    0,
        0,    0,    0, 1292,    0,    0, 1292, 1293,    0,    0,
     1293,    0,    0,    0,    0, 1293, 1294,    0,    0, 1294,
        0,    0, 1294,    0, 1294, 1295,    0,    0,    0,    0,
     1295,    0,    0, 1295, 1296,    0,    0, 1296,    0,    0,
        0,    0, 1296, 1297,    0,    0,    0,    0, 1297,    0,
        0, 1297, 1298,    0,    0, 1298,    0,    0,    0,    0,
     1298, 1299,    0,    0,    0,    0,    0,    0, 1299, 1299,

     1300,    0,    0, 1300,    0,    0,    0,    0, 1300, 1301,
        0,    0, 1301,    0,    0, 1301,    0, 1301, 1302,    0,
        0, 1302,    0,    0,    0,    0, 1302, 1303,    0,    0,
        0,    0,    0,    0,    0, 1303, 1304,    0,    0,    0,
        0, 1304,    0,    0, 1304, 1305,    0,    0, 1305,    0,
        0,    0,    0, 1305, 1306,    0,    0, 1306,    0,    0,
     1306,    0, 1306, 1307,    0,    0,    0,    0, 1307,    0,
        0, 1307, 1308,    0,    0, 1308,    0,    0,    0,    0,
     1308, 1309,    0,    0,    0,    0, 1309,    0,    0, 1309,
     1310,    0,    0, 1310,    0,    0,    0,    0, 1310, 1311,

        0,    0,    0,    0,    0,    0, 1311, 1311, 1312,    0,
        0, 1312,    0,    0,    0,    0, 1312, 1313,    0,    0,
     1313,    0,    0, 1313,    0, 1313, 1314,    0,    0, 1314,
        0,    0,    0,    0, 1314, 1315,    0,    0,    0,    0,
        0,    0,    0, 1315, 1316,    0,    0,    0,    0, 1316,
        0,    0, 1316, 1317,    0,    0, 1317,    0,    0,    0,
        0, 1317, 1318,    0,    0, 1318,    0,    0, 1318,    0,
     1318, 1319,    0,    0,    0,    0, 1319,    0,    0, 1319,
     1320,    0,    0, 1320,    0,    0,    0,    0, 1320, 1321,
        0,    0,    0,    0, 1321,    0,    0, 1321, 1322,    0,

        0, 1322,    0,    0,    0,    0, 1322, 1323,    0,    0,
        0,    0,    0,    0, 1323, 1323, 1324,    0,    0, 1324,
        0,    0,    0,    0, 1324, 1325,    0,    0, 1325,    0,
        0, 1325,    0, 1325, 1326,    0,    0, 1326,    0,    0,
        0,    0, 1326, 1327,    0,    0,    0,    0,    0,    0,
        0, 1327, 1328,    0,    0,    0,    0, 1328,    0,    0,
     1328, 1329,    0,    0, 1329,    0,    0,    0,    0, 1329,
     1330,    0,    0, 1330,    0,    0, 1330,    0, 1330, 1331,
        0,    0,    0,    0, 1331,    0,    0, 1331, 1332,    0,
        0, 1332,    0,    0,    0,    0, 1332, 1333,    0,    0,

        0,    0, 1333,    0,    0, 1333, 1334,    0,    0, 1334,
        0,    0,    0,    0, 1334, 1335,    0,    0,    0,    0,
        0,    0, 1335, 1335, 1336,    0,    0, 1336,    0,    0,
        0,    0, 1336, 1337,    0,    0, 1337,    0,    0, 1337,
        0, 1337, 1338,    0,    0, 1338,    0,    0,    0,    0,
     1338, 1339,    0,    0,    0,    0,    0,    0,    0, 1339,
     1340,    0,    0,    0,    0, 1340,    0,    0, 1340, 1341,
        0,    0, 1341,    0,    0,    0,    0, 1341, 1342,    0,
        0, 1342,    0,    0, 1342,    0, 1342, 1343,    0,    0,
        0,    0, 1343,    0,    0, 1343, 1344,    0,    0, 1344,

        0,    0,    0,    0, 1344, 1345,    0,    0,    0,    0,
     1345,    0,    0, 1345, 1346,    0,    0, 1346,    0,    0,
        0,    0, 1346, 1347,    0,    0,    0,    0,    0,    0,
     1347, 1347, 1348,    0,    0, 1348,    0,    0,    0,    0,
     1348, 1349,    0,    0, 1349,    0,    0, 1349,    0, 1349,
     1350,    0,    0, 1350,    0,    0,    0,    0, 1350, 1351,
        0,    0,    0,    0,    0,    0,    0, 1351, 1352,    0,
        0,    0,    0, 1352,    0,    0, 1352, 1353,    0,    0,
     1353,    0,    0,    0,    0, 1353, 1354,    0,    0, 1354,
        0,    0, 1354,    0, 1354, 1355,    0,    0,    0,    0,

     1355,    0,    0, 1355, 1356,    0,    0, 1356,    0,    0,
        0,    0, 1356, 1357,    0,    0,    0,    0, 1357,    0,
        0, 1357, 1358,    0,    0, 1358,    0,    0,    0,    0,
     1358, 1359,    0,    0,    0,    0,    0,    0, 1359, 1359,
     1360,    0,    0, 1360,    0,    0,    0,    0, 1360, 1361,
        0,    0, 1361,    0,    0, 1361,    0, 1361, 1362,    0,
        0, 1362,    0,    0,    0,    0, 1362, 1363,    0,    0,
        0,    0,    0,    0,    0, 1363, 1364,    0,    0,    0,
        0, 1364,    0,    0, 1364, 1365,    0,    0, 1365,    0,
        0,    0,    0, 1365, 1366,    0,    0, 1366,    0,    0,

     1366,    0, 1366, 1367,    0,    0,    0,    0, 1367,    0,
        0, 1367, 1368,    0,    0, 1368,    0,    0,    0,    0,
     1368, 1369,    0,    0,    0,    0, 1369,    0,    0, 1369,
     1370,    0,    0, 1370,    0,    0,    0,    0, 1370, 1371,
        0,    0,    0,    0,    0,    0, 1371, 1371, 1372,    0,
        0, 1372,    0,    0,    0,    0, 1372, 1373,    0,    0,
     1373,    0,    0, 1373,    0, 1373, 1374,    0,    0, 1374,
        0,    0,    0,    0, 1374, 1375,    0,    0,    0,    0,
        0,    0,    0, 1375, 1376,    0,    0,    0,    0, 1376,
        0,    0, 1376, 1377,    0,    0, 1377,    0,    0,    0,

        0, 1377, 1378,    0,    0, 1378,    0,    0, 1378,    0,
     1378, 1379,    0,    0,    0,    0, 1379,    0,    0, 1379,
     1380,    0,    0, 1380,    0,    0,    0,    0, 1380, 1381,
        0,    0,    0,    0, 1381,    0,    0, 1381, 1382,    0,
        0, 1382,    0,    0,    0,    0, 1382, 1383,    0,    0,
        0,    0,    0,    0, 1383, 1383, 1384,    0,    0, 1384,
        0,    0,    0,    0, 1384, 1385,    0,    0, 1385,    0,
        0, 1385,    0, 1385, 1386,    0,    0, 1386,    0,    0,
        0,    0, 1386, 1387,    0,    0,    0,    0,    0,    0,
        0, 1387, 1388,    0,    0,    0,    0, 1388,    0,    0,

     1388, 1389,    0,    0, 1389,    0,    0,    0,    0, 1389,
     1390,    0,    0, 1390,    0,    0, 1390,    0, 1390, 1391,
        0,    0,    0,    0, 1391,    0,    0, 1391, 1392,    0,
        0, 1392,    0,    0,    0,    0, 1392, 1393,    0,    0,
        0,    0, 1393,    0,    0, 1393, 1394,    0,    0, 1394,
        0,    0,    0,    0, 1394, 1395,    0,    0,    0,    0,
        0,    0, 1395, 1395, 1396,    0,    0, 1396,    0,    0,
        0,    0, 1396, 1397,    0,    0, 1397,    0,    0, 1397,
        0, 1397, 1398,    0,    0, 1398,    0,    0,    0,    0,
     1398, 1399,    0,    0,    0,    0,    0,    0,    0, 1399,

     1400,    0,    0,    0,    0, 1400,    0,    0, 1400, 1401,
        0,    0, 1401,    0,    0,    0,    0, 1401, 1402,    0,
        0, 1402,    0,    0, 1402,    0, 1402, 1403,    0,    0,
        0,    0, 1403,    0,    0, 1403, 1404,    0,    0, 1404,
        0,    0,    0,    0, 1404, 1405,    0,    0,    0,    0,
     1405,    0,    0, 1405, 1406,    0,    0, 1406,    0,    0,
        0,    0, 1406, 1407,    0,    0,    0,    0,    0,    0,
     1407, 1407, 1408,    0,    0, 1408,    0,    0,    0,    0,
     1408, 1409,    0,    0, 1409,    0,    0, 1409,    0, 1409,
     1410,    0,    0, 1410,    0,    0,    0,    0, 1410, 1411,

        0,    0,    0,    0,    0,    0,    0, 1411, 1412,    0,
        0,    0,    0, 1412,    0,    0, 1412, 1413,    0,    0,
     1413,    0,    0,    0,    0, 1413, 1414,    0,    0, 1414,
        0,    0, 1414,    0, 1414, 1415,    0,    0,    0,    0,
     1415,    0,    0, 1415, 1416,    0,    0, 1416,    0,    0,
        0,    0, 1416, 1417,    0,    0,    0,    0, 1417,    0,
        0, 1417, 1418,    0,    0, 1418,    0,    0,    0,    0,
     1418, 1419,    0,    0,    0,    0,    0,    0, 1419, 1419,
     1420,    0,    0, 1420,    0,    0,    0,    0, 1420, 1421,
        0,    0, 1421,    0,    0, 1421,    0, 1421, 1422,    0,

        0, 1422,    0,    0,    0,    0, 1422, 1423,    0,    0,
        0,    0,    0,    0,    0, 1423, 1424,    0,    0,    0,
        0, 1424,    0,    0, 1424, 1425,    0,    0, 1425,    0,
        0,    0,    0, 1425, 1426,    0,    0, 1426,    0,    0,
     1426,    0, 1426, 1427,    0,    0,    0,    0, 1427,    0,
        0, 1427, 1428,    0,    0, 1428,    0,    0,    0,    0,
     1428, 1429,    0,    0,    0,    0, 1429,    0,    0, 1429,
     1430,    0,    0, 1430,    0,    0,    0,    0, 1430, 1431,
        0,    0,    0,    0,    0,    0, 1431, 1431, 1432,    0,
        0, 1432,    0,    0,    0,    0, 1432, 1433,    0,    0,

     1433,    0,    0, 1433,    0, 1433, 1434,    0,    0, 1434,
        0,    0,    0,    0, 1434, 1435,    0,    0,    0,    0,
        0,    0,    0, 1435, 1436,    0,    0,    0,    0, 1436,
        0,    0, 1436, 1437,    0,    0, 1437,    0,    0,    0,
        0, 1437, 1438,    0,    0, 1438,    0,    0, 1438,    0,
     1438, 1439,    0,    0,    0,    0, 1439,    0,    0, 1439,
     1440,    0,    0, 1440,    0,    0,    0,    0, 1440, 1441,
        0,    0,    0,    0, 1441,    0,    0, 1441, 1442,    0,
        0, 1442,    0,    0,    0,    0, 1442, 1443,    0,    0,
        0,    0,    0,    0, 1443, 1443, 1444,    0,    0, 1444,

        0,    0,    0,    0, 1444, 1445,    0,    0, 1445,    0,
        0, 1445,    0, 1445, 1446,    0,    0, 1446,    0,    0,
        0,    0, 1446, 1447,    0,    0,    0,    0,    0,    0,
        0, 1447, 1448,    0,    0,    0,    0, 1448,    0,    0,
     1448, 1449,    0,    0, 1449,    0,    0,    0,    0, 1449,
     1450,    0,    0, 1450,    0,    0, 1450,    0, 1450, 1451,
        0,    0,    0,    0, 1451,    0,    0, 1451, 1452,    0,
        0, 1452,    0,    0,    0,    0, 1452, 1453,    0,    0,
        0,    0, 1453,    0,    0, 1453, 1454,    0,    0, 1454,
        0,    0,    0,    0, 1454, 1455,    0,    0,    0,    0,

        0,    0, 1455, 1455, 1456,    0,    0, 1456,    0,    0,
        0,    0, 1456, 1457,    0,    0, 1457,    0,    0, 1457,
        0, 1457, 1458,    0,    0, 1458,    0,    0,    0,    0,
     1458, 1459,    0,    0,    0,    0,    0,    0,    0, 1459,
     1460,    0,    0,    0,    0, 1460,    0,    0, 1460, 1461,
        0,    0, 1461,    0,    0,    0,    0, 1461, 1462,    0,
        0, 1462,    0,    0, 1462,    0, 1462, 1463,    0,    0,
        0,    0, 1463,    0,    0, 1463, 1464,    0,    0, 1464,
        0,    0,    0,    0, 1464, 1465,    0,    0,    0,    0,
     1465,    0,    0, 1465, 1466,    0,    0, 1466,    0,    0,

        0,    0, 1466, 1467,    0,    0,    0,    0,    0,    0,
     1467, 1467, 1468,    0,    0, 1468,    0,    0,    0,    0,
     1468, 1469,    0,    0, 1469,    0,    0, 1469,    0, 1469,
     1470,    0,    0, 1470,    0,    0,    0,    0, 1470, 1471,
        0,    0,    0,    0,    0,    0,    0, 1471, 1472,    0,
        0,    0,    0, 1472,    0,    0, 1472, 1473,    0,    0,
     1473,    0,    0,    0,    0, 1473, 1474,    0,    0, 1474,
        0,    0, 1474,    0, 1474, 1475,    0,    0,    0,    0,
     1475,    0,    0, 1475, 1476,    0,    0, 1476,    0,    0,
        0,    0, 1476, 1477,    0,    0,    0,    0, 1477,    0,

        0, 1477, 1478,    0,    0, 1478,    0,    0,    0,    0,
     1478, 1479,    0,    0,    0,    0,    0,    0, 1479, 1479,
     1480,    0,    0, 1480,    0,    0,    0,    0, 1480, 1481,
        0,    0, 1481,    0,    0, 1481,    0, 1481, 1482,    0,
        0, 1482,    0,    0,    0,    0, 1482, 1483,    0,    0,
        0,    0,    0,    0,    0, 1483, 1484,    0,    0,    0,
        0, 1484,    0,    0, 1484, 1485,    0,    0, 1485,    0,
        0,    0,    0, 1485, 1486,    0,    0, 1486,    0,    0,
     1486,    0, 1486, 1487,    0,    0,    0,    0, 1487,    0,
        0, 1487, 1488,    0,    0, 1488,    0,    0,    0,    0,

     1488, 1489,    0,    0,    0,    0, 1489,    0,    0, 1489,
     1490,    0,    0, 1490,    0,    0,    0,    0, 1490, 1491,
        0,    0,    0,    0,    0,    0, 1491, 1491, 1492,    0,
        0, 1492,    0,    0,    0,    0, 1492, 1493,    0,    0,
     1493,    0,    0, 1493,    0, 1493, 1494,    0,    0, 1494,
        0,    0,    0,    0, 1494, 1495,    0,    0,    0,    0,
        0,    0,    0, 1495, 1496,    0,    0,    0,    0, 1496,
        0,    0, 1496, 1497,    0,    0, 1497,    0,    0,    0,
        0, 1497, 1498,    0,    0, 1498,    0,    0, 1498,    0,
     1498, 1499,    0,    0,    0,    0, 1499,    0,    0, 1499,

     1500,    0,    0, 1500,    0,    0,    0,    0, 1500, 1501,
        0,    0,    0,    0, 1501,    0,    0, 1501, 1502,    0,
        0, 1502,    0,    0,    0,    0, 1502, 1503,    0,    0,
        0,    0,    0,    0, 1503, 1503, 1504,    0,    0, 1504,
        0,    0,    0,    0, 1504, 1505,    0,    0, 1505,    0,
        0, 1505, 1506,    0,    0,    0,    0,    0,    0,    0,
     1506, 1507,    0,    0,    0,    0, 1507,    0,    0, 1507,
     1508,    0,    0, 1508,    0,    0,    0,    0, 1508, 1509,
        0,    0, 1509,    0,    0, 1509,    0, 1509, 1510,    0,
        0,    0,    0, 1510,    0,    0, 1510, 1511,    0,    0,

     1511,    0,    0,    0,    0, 1511, 1512,    0,    0,    0,
        0, 1512,    0,    0, 1512, 1513,    0,    0, 1513,    0,
        0,    0,    0, 1513, 1514,    0,    0,    0,    0,    0,
        0, 1514, 1514, 1515,    0,    0, 1515,    0,    0,    0,
        0, 1515, 1516,    0,    0,    0,    0,    0,    0,    0,
     1516, 1517,    0,    0,    0,    0, 1517,    0,    0, 1517,
     1518,    0,    0, 1518,    0,    0,    0,    0, 1518, 1519,
        0,    0, 1519,    0,    0, 1519,    0, 1519, 1520,    0,
        0,    0,    0, 1520,    0,    0, 1520, 1521,    0,    0,
     1521,    0,    0,    0,    0, 1521, 1522,    0,    0,    0,

        0, 1522,    0,    0, 1522, 1523,    0,    0, 1523,    0,
        0,    0,    0, 1523, 1524,    0,    0,    0,    0,    0,
        0, 1524, 1524, 1525,    0,    0,    0,    0,    0,    0,
        0, 1525, 1526,    0,    0,    0,    0, 1526,    0,    0,
     1526, 1527,    0,    0, 1527,    0,    0,    0,    0, 1527,
     1528,    0,    0, 1528,    0,    0, 1528,    0, 1528, 1529,
        0,    0,    0,    0, 1529,    0,    0, 1529, 1530,    0,
        0, 1530,    0,    0,    0,    0, 1530, 1531,    0,    0,
        0,    0, 1531,    0,    0, 1531, 1532,    0,    0, 1532,
        0,    0,    0,    0, 1532, 1533,    0,    0,    0,    0,

        0,    0, 1533, 1533, 1534,    0,    0,    0,    0,    0,
        0,    0, 1534, 1535,    0,    0,    0,    0, 1535,    0,
        0, 1535, 1536,    0,    0, 1536,    0,    0,    0,    0,
     1536, 1537,    0,    0, 1537,    0,    0, 1537,    0, 1537,
     1538,    0,    0,    0,    0, 1538,    0,    0, 1538, 1539,
        0,    0, 1539,    0,    0,    0,    0, 1539, 1540,    0,
        0,    0,    0, 1540,    0,    0, 1540, 1541,    0,    0,
     1541,    0,    0,    0,    0, 1541, 1542,    0,    0,    0,
        0,    0,    0,    0, 1542, 1543,    0,    0,    0,    0,
     1543,    0,    0, 1543, 1544,    0,    0, 1544,    0,    0,

     1544, 1545,    0,    0,    0,    0, 1545,    0,    0, 1545,
     1546,    0,    0,    0,    0, 1546,    0,    0, 1546, 1547,
        0,    0, 1547,    0,    0,    0,    0, 1547, 1548,    0,
        0,    0,    0,    0,    0,    0, 1548, 1549,    0,    0,
        0,    0, 1549,    0,    0, 1549, 1550,    0,    0,    0,
        0, 1550,    0,    0, 1550, 1551,    0,    0,    0,    0,
     1551,    0,    0, 1551, 1552,    0,    0, 1552,    0,    0,
        0,    0, 1552, 1553,    0,    0,    0,    0,    0,    0,
        0, 1553, 1554,    0,    0,    0,    0, 1554,    0,    0,
     1554, 1555,    0,    0, 1555,    0,    0,    0,    0, 1555,

     1556,    0,    0,    0,    0,    0,    0,    0, 1556, 1557,
        0,    0,    0,    0, 1557,    0,    0, 1557, 1558,    0,
        0,    0,    0,    0,    0,    0, 1558, 1559,    0,    0,
        0,    0, 1559,    0,    0, 1559, 1560,    0,    0,    0,
        0,    0,    0,    0, 1560, 1561,    0,    0,    0,    0,
        0,    0,    0, 1561, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,

     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1144
    } ;

/* Table of booleans, true if rule could match eol. */
static const flex_int32_t yy_rule_can_match_eol[107] =
    {   0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 0, 0, 1, 1, 1, 0,     };

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "lexico.l"
#line 2 "lexico.l"
#include <stdio.h>
#include "Token.h"
#include <stdlib.h>

using namespace std;

extern string* pStr;
extern void GetToken(string lexema, Token_type tipo, int linea);
#line 3357 "Scanner.cpp"
/*PASCAL RESEVED WORDS*/
/*  -- Simplificador   -- */
#line 76 "lexico.l"
            /*CASO  *//*CASO (*/                          /*CASO ( */
/*Object Reserved Words*/
/*   -- END OF RSVW --    */
/*SINTAX SYMBOLS*/
/*  -- END OF SYNTX -- */
/* DATA TYPES  */
/* -- END OF DATA TYPES  --*/
/*All Arithmetic Operators*/
/*Arithmetic Operations*/
/* -- END OF OPRT --*/
#line 3371 "Scanner.cpp"

#define INITIAL 0

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#include <unistd.h>
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy ( char *, const char *, int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen ( const char * );
#endif

#ifndef YY_NO_INPUT

#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
#define ECHO LexerOutput( yytext, yyleng )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
\
	if ( (int)(result = LexerInput( (char *) buf, max_size )) < 0 ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) LexerError( msg )
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
#define YY_DECL int yyFlexLexer::yylex()
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK /*LINTED*/break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	yy_state_type yy_current_state;
	char *yy_cp, *yy_bp;
	int yy_act;
    
	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
			yyin.rdbuf(std::cin.rdbuf());

		if ( ! yyout )
			yyout.rdbuf(std::cout.rdbuf());

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	{
#line 182 "lexico.l"



#line 3507 "Scanner.cpp"

	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
		{
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = (yy_start);
yy_match:
		do
			{
			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1145 )
					yy_c = yy_meta[yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 11055 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;

		if ( yy_act != YY_END_OF_BUFFER && yy_rule_can_match_eol[yy_act] )
			{
			int yyl;
			for ( yyl = 0; yyl < yyleng; ++yyl )
				if ( yytext[yyl] == '\n' )
					
    yylineno++;
;
			}

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 185 "lexico.l"
GetToken(yytext,EOU,yylineno);
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 186 "lexico.l"
GetToken(yytext,EOU,yylineno);
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 188 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 189 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);     
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 191 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);     
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 192 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);     
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 193 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);     
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 194 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);      
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 195 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 196 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 197 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 198 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 199 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 200 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 201 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 204 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 205 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 206 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 207 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 208 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 209 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 210 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 211 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 212 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 213 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 214 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 215 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 216 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 218 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 219 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 220 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 221 "lexico.l"
GetToken(yytext,RSVWORD,yylineno); 
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 222 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 223 "lexico.l"
GetToken(yytext,RSVWORD,yylineno); 
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 224 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 226 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 227 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 228 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 230 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 231 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 234 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 235 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 236 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 237 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 238 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 239 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 240 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 241 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 242 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 243 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 246 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);  
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 247 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 248 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 249 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 250 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 252 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 253 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 254 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 255 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 257 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 258 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 259 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 260 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 262 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 263 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 264 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 265 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 269 "lexico.l"
GetToken(yytext,OPERATOR,yylineno);         
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 270 "lexico.l"
GetToken(yytext,OPERATION,yylineno);  
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 274 "lexico.l"
GetToken(yytext,STXSymbl,yylineno);
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 275 "lexico.l"
GetToken(yytext,STXSymbl,yylineno);
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 276 "lexico.l"
GetToken(yytext,STXSymbl,yylineno);
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 277 "lexico.l"
GetToken(yytext,STXSymbl,yylineno);
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 278 "lexico.l"
GetToken(yytext,STXSymbl,yylineno);
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 279 "lexico.l"
GetToken(yytext,STXSymbl,yylineno);
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 280 "lexico.l"
GetToken(yytext,STXSymbl,yylineno);
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 283 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);   
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 284 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 285 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 286 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 287 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 288 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 289 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 84:
YY_RULE_SETUP
#line 290 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 85:
YY_RULE_SETUP
#line 291 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 293 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 294 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 295 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 296 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 298 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 299 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 92:
YY_RULE_SETUP
#line 300 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 301 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 94:
YY_RULE_SETUP
#line 302 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 95:
YY_RULE_SETUP
#line 304 "lexico.l"
GetToken(yytext,DIGIT,yylineno);                
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 305 "lexico.l"
GetToken(yytext,INTEGER,yylineno);
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 306 "lexico.l"
GetToken(yytext,REAL,yylineno);
	YY_BREAK
case 98:
YY_RULE_SETUP
#line 307 "lexico.l"
GetToken(yytext,IDENTIFIER,yylineno);
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 308 "lexico.l"
GetToken(yytext,EMPTYSPC,yylineno);
	YY_BREAK
case 100:
/* rule 100 can match eol */
YY_RULE_SETUP
#line 309 "lexico.l"
GetToken(yytext,LINEBRK,yylineno);
	YY_BREAK
case 101:
YY_RULE_SETUP
#line 310 "lexico.l"
GetToken(yytext,STRING,yylineno);
	YY_BREAK
case 102:
YY_RULE_SETUP
#line 313 "lexico.l"
GetToken(yytext,UsrOperations,yylineno);
	YY_BREAK
case 103:
/* rule 103 can match eol */
YY_RULE_SETUP
#line 314 "lexico.l"
GetToken(yytext,Usr_WHILE,yylineno);
	YY_BREAK
case 104:
/* rule 104 can match eol */
YY_RULE_SETUP
#line 315 "lexico.l"
GetToken(yytext,Usr_IF,yylineno);
	YY_BREAK
case 105:
/* rule 105 can match eol */
YY_RULE_SETUP
#line 316 "lexico.l"
GetToken(yytext,Usr_FOR,yylineno);
	YY_BREAK
case 106:
YY_RULE_SETUP
#line 318 "lexico.l"
ECHO;
	YY_BREAK
#line 4108 "Scanner.cpp"
case YY_STATE_EOF(INITIAL):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin.rdbuf();
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = (yy_c_buf_p);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of user's declarations */
} /* end of yylex */

/* The contents of this function are C++ specific, so the () macro is not used.
 * This constructor simply maintains backward compatibility.
 * DEPRECATED
 */
yyFlexLexer::yyFlexLexer( std::istream* arg_yyin, std::ostream* arg_yyout ):
	yyin(arg_yyin ? arg_yyin->rdbuf() : std::cin.rdbuf()),
	yyout(arg_yyout ? arg_yyout->rdbuf() : std::cout.rdbuf())
{
	ctor_common();
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::yyFlexLexer( std::istream& arg_yyin, std::ostream& arg_yyout ):
	yyin(arg_yyin.rdbuf()),
	yyout(arg_yyout.rdbuf())
{
	ctor_common();
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::ctor_common()
{
	yy_c_buf_p = 0;
	yy_init = 0;
	yy_start = 0;
	yy_flex_debug = 0;
	yylineno = 1;	// this will only get updated if %option yylineno

	yy_did_buffer_switch_on_eof = 0;

	yy_looking_for_trail_begin = 0;
	yy_more_flag = 0;
	yy_more_len = 0;
	yy_more_offset = yy_prev_more_offset = 0;

	yy_start_stack_ptr = yy_start_stack_depth = 0;
	yy_start_stack = NULL;

	yy_buffer_stack = NULL;
	yy_buffer_stack_top = 0;
	yy_buffer_stack_max = 0;

	yy_state_buf = 0;

}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::~yyFlexLexer()
{
	delete [] yy_state_buf;
	yyfree( yy_start_stack  );
	yy_delete_buffer( YY_CURRENT_BUFFER );
	yyfree( yy_buffer_stack  );
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream& new_in, std::ostream& new_out )
{
	// was if( new_in )
	yy_delete_buffer( YY_CURRENT_BUFFER );
	yy_switch_to_buffer( yy_create_buffer( new_in, YY_BUF_SIZE  ) );

	// was if( new_out )
	yyout.rdbuf(new_out.rdbuf());
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )
{
	if( ! new_in ) {
		new_in = &yyin;
	}

	if ( ! new_out ) {
		new_out = &yyout;
	}

	switch_streams(*new_in, *new_out);
}

#ifdef YY_INTERACTIVE
int yyFlexLexer::LexerInput( char* buf, int /* max_size */ )
#else
int yyFlexLexer::LexerInput( char* buf, int max_size )
#endif
{
	if ( yyin.eof() || yyin.fail() )
		return 0;

#ifdef YY_INTERACTIVE
	yyin.get( buf[0] );

	if ( yyin.eof() )
		return 0;

	if ( yyin.bad() )
		return -1;

	return 1;

#else
	(void) yyin.read( buf, max_size );

	if ( yyin.bad() )
		return -1;
	else
		return yyin.gcount();
#endif
}

void yyFlexLexer::LexerOutput( const char* buf, int size )
{
	(void) yyout.write( buf, size );
}

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
int yyFlexLexer::yy_get_next_buffer()
{
    	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	char *source = (yytext_ptr);
	int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr) - 1);

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yyrealloc( (void *) b->yy_ch_buf,
							 (yy_size_t) (b->yy_buf_size + 2)  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = NULL;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
		/* "- 2" to take care of EOB's */
		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    yy_state_type yyFlexLexer::yy_get_previous_state()
{
	yy_state_type yy_current_state;
	char *yy_cp;
    
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1145 )
				yy_c = yy_meta[yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )
{
	int yy_is_jam;
    	char *yy_cp = (yy_c_buf_p);

	YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		(yy_last_accepting_state) = yy_current_state;
		(yy_last_accepting_cpos) = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1145 )
			yy_c = yy_meta[yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
	yy_is_jam = (yy_current_state == 1144);

		return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_UNPUT
    void yyFlexLexer::yyunput( int c, char* yy_bp)
{
	char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up yytext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		int number_to_move = (yy_n_chars) + 2;
		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

    if ( c == '\n' ){
        --yylineno;
    }

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}
#endif

    int yyFlexLexer::yyinput()
{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (int) ((yy_c_buf_p) - (yytext_ptr));
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return 0;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

	if ( c == '\n' )
		
    yylineno++;
;

	return c;
}

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void yyFlexLexer::yyrestart( std::istream& input_file )
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/** Delegate to the new version that takes an istream reference.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
void yyFlexLexer::yyrestart( std::istream* input_file )
{
	if( ! input_file ) {
		input_file = &yyin;
	}
	yyrestart( *input_file );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

    void yyFlexLexer::yy_load_buffer_state()
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin.rdbuf(YY_CURRENT_BUFFER_LVALUE->yy_input_file);
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream& file, int size )
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/** Delegate creation of buffers to the new version that takes an istream reference.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
	YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )
{
	return yy_create_buffer( *file, size );
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yyfree( (void *) b->yy_ch_buf  );

	yyfree( (void *) b  );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream& file )

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

	b->yy_input_file = file.rdbuf();
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

	b->yy_is_interactive = 0;
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
void yyFlexLexer::yypop_buffer_state (void)
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
void yyFlexLexer::yyensure_buffer_stack(void)
{
	yy_size_t num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
      num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));

		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		yy_size_t grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}

    void yyFlexLexer::yy_push_state( int _new_state )
{
    	if ( (yy_start_stack_ptr) >= (yy_start_stack_depth) )
		{
		yy_size_t new_size;

		(yy_start_stack_depth) += YY_START_STACK_INCR;
		new_size = (yy_size_t) (yy_start_stack_depth) * sizeof( int );

		if ( ! (yy_start_stack) )
			(yy_start_stack) = (int *) yyalloc( new_size  );

		else
			(yy_start_stack) = (int *) yyrealloc(
					(void *) (yy_start_stack), new_size  );

		if ( ! (yy_start_stack) )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	(yy_start_stack)[(yy_start_stack_ptr)++] = YY_START;

	BEGIN(_new_state);
}

    void yyFlexLexer::yy_pop_state()
{
    	if ( --(yy_start_stack_ptr) < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN((yy_start_stack)[(yy_start_stack_ptr)]);
}

    int yyFlexLexer::yy_top_state()
{
    	return (yy_start_stack)[(yy_start_stack_ptr) - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

void yyFlexLexer::LexerError( const char* msg )
{
    	std::cerr << msg << std::endl;
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, const char * s2, int n )
{
		
	int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (const char * s )
{
	int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *yyalloc (yy_size_t  size )
{
			return malloc(size);
}

void *yyrealloc  (void * ptr, yy_size_t  size )
{
		
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return realloc(ptr, size);
}

void yyfree (void * ptr )
{
			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
}

#define YYTABLES_NAME "yytables"

#line 318 "lexico.l"



