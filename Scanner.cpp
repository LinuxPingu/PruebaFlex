#line 2 "Scanner.cpp"

#line 4 "Scanner.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 4
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

    /* The c++ scanner is a mess. The FlexLexer.h header file relies on the
     * following macro. This is required in order to pass the c++-multiple-scanners
     * test in the regression suite. We get reports that it breaks inheritance.
     * We will address this in a future release of flex, or omit the C++ scanner
     * altogether.
     */
    #define yyFlexLexer yyFlexLexer

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#ifndef SIZE_MAX
#define SIZE_MAX               (~(size_t)0)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* begin standard C++ headers. */
#include <iostream>
#include <errno.h>
#include <cstdlib>
#include <cstdio>
#include <cstring>
/* end standard C++ headers. */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an
 *   integer in range [0..255] for use as an array index.
 */
#define YY_SC_TO_UI(c) ((YY_CHAR) (c))

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *
/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START
/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )
#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

extern int yyleng;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2
    
    /* Note: We specifically omit the test for yy_rule_can_match_eol because it requires
     *       access to the local variable yy_act. Since yyless() is a macro, it would break
     *       existing scanners that call yyless() from OUTSIDE yylex.
     *       One obvious solution it to make yy_act a global. I tried that, and saw
     *       a 5% performance hit in a non-yylineno scanner, because yy_act is
     *       normally declared as a register variable-- so it is not worth it.
     */
    #define  YY_LESS_LINENO(n) \
            do { \
                int yyl;\
                for ( yyl = n; yyl < yyleng; ++yyl )\
                    if ( yytext[yyl] == '\n' )\
                        --yylineno;\
            }while(0)
    #define YY_LINENO_REWIND_TO(dst) \
            do {\
                const char *p;\
                for ( p = yy_cp-1; p >= (dst); --p)\
                    if ( *p == '\n' )\
                        --yylineno;\
            }while(0)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )
#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{

	std::streambuf* yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)
/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

void *yyalloc ( yy_size_t  );
void *yyrealloc ( void *, yy_size_t  );
void yyfree ( void *  );

#define yy_new_buffer yy_create_buffer
#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}
#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}
#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */
#define YY_SKIP_YYWRAP
typedef flex_uint8_t YY_CHAR;

#define yytext_ptr yytext
#define YY_INTERACTIVE

#include <FlexLexer.h>

int yyFlexLexer::yywrap() { return 1; }

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
	(yy_c_buf_p) = yy_cp;
#define YY_NUM_RULES 104
#define YY_END_OF_BUFFER 105
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static const flex_int16_t yy_accept[1063] =
    {   0,
        0,    0,  105,  104,   97,   98,  104,   66,   72,   68,
       69,   66,   73,   93,  104,   74,   66,   66,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   70,
       71,   97,    0,    0,    0,   98,    0,   99,    0,   66,
        0,    0,    0,    0,   94,    0,    0,    0,   96,   96,
       96,   96,   49,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   10,   96,   96,   96,   96,   96,   96,   96,
       17,   96,   19,   57,   96,   96,   96,   96,   96,   96,
       96,   28,   59,   96,   30,   96,   96,   96,   96,   96,

       96,   96,   96,   96,   96,   40,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   67,   67,   95,
       96,   96,    2,   96,    3,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,    9,   96,   96,   13,   96,
       96,   96,   96,   96,   14,   96,   96,    0,   96,   96,
       96,   96,   96,   96,   96,   96,   24,   25,   26,   96,
       96,   60,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   91,   37,   96,   38,   96,   96,   96,   96,   65,
       96,   96,   96,   96,   45,   96,   96,   96,   48,    0,

        0,    0,    0,    0,   67,    0,    0,    0,    0,    0,
        0,    0,    0,   67,   96,   96,   96,   96,   96,   81,
       96,    5,   84,   96,   96,   96,   96,   96,   96,   12,
       87,   96,   96,   89,   96,    0,   96,   16,    0,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   85,   96,   96,   96,   96,
       36,   96,   96,   96,   39,   96,   41,   42,   44,   43,
       96,   47,   82,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   67,   67,   96,   96,   88,
        4,   96,   96,   50,    6,   96,   96,   96,   96,   96,

       96,   96,    0,    0,    0,    0,    0,   96,    0,    0,
        0,    0,    0,   96,   96,   96,   96,   80,   96,   96,
       23,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       62,   96,   96,   96,   96,   96,   96,   96,   96,   46,
        0,    0,    0,    0,    0,    0,    0,  100,    0,   67,
       96,   96,   96,   96,   96,   96,   96,   11,   52,   96,
       96,   55,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   96,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   96,   96,   96,   21,
       96,   96,   96,   96,   96,   27,   96,   31,   96,   96,

       96,   92,   96,   35,   96,   96,   96,   90,   96,    0,
        0,    0,    0,   67,   96,   96,   86,   96,   96,   96,
       96,   53,   96,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   96,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   96,   96,
       96,   75,   96,   58,   79,   96,   96,   96,   33,   96,
       96,   96,   96,   96,   96,    0,    0,   67,   96,    1,
       76,   96,   96,   96,   96,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   15,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   96,   96,   96,   96,   83,   29,

       96,   61,   96,   96,   77,   78,   96,    0,    0,    0,
        0,    0,    0,   67,   96,   96,    8,   96,   96,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   96,
       20,   96,   22,   32,   96,   96,   64,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   67,
       96,    7,   96,   96,    0,    0,    0,    0,    0,    0,
        0,    0,   96,   96,   96,   96,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   67,
       96,   96,   96,    0,    0,    0,    0,    0,    0,    0,
       96,   96,   34,   96,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,   67,   96,   96,   54,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   96,   96,   96,    0,    0,    0,    0,    0,   67,
       96,   51,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   96,   96,   96,    0,    0,    0,    0,    0,
       67,   96,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   18,   56,   63,    0,    0,    0,
        0,    0,   67,   96,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   67,   96,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   67,   96,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   67,   96,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   67,   96,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  102,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   67,   96,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      102,    0,  102,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   67,   96,    0,    0,    0,
        0,  103,    0,    0,    0,    0,    0,    0,  102,  102,
      102,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   67,   96,    0,    0,    0,  103,    0,
      103,    0,    0,    0,  102,  102,    0,    0,    0,    0,
        0,    0,  101,    0,    0,    0,    0,    0,   67,   96,
        0,  103,  103,  103,    0,    0,    0,  102,    0,    0,
        0,    0,    0,  101,    0,  101,    0,    0,    0,   67,

       96,  103,  103,    0,    0,    0,    0,    0,    0,  101,
      101,  101,    0,    0,    0,   67,   96,  103,    0,    0,
        0,    0,    0,  101,  101,    0,    0,    0,   67,   96,
        0,    0,    0,    0,    0,  101,    0,    0,    0,   67,
       96,    0,    0,    0,    0,    0,    0,    0,    0,   67,
       96,    0,    0,    0,    0,    0,    0,    0,    0,   67,
       96,    0,    0,    0,    0,    0,    0,    0,    0,   67,
       96,    0,    0,    0,    0,    0,    0,    0,    0,   67,
       96,    0,    0,    0,    0,    0,    0,    0,    0,   67,
       96,    0,    0,    0,    0,    0,    0,    0,    0,   67,

       96,    0,    0,    0,    0,    0,    0,    0,    0,   67,
        0,    0,    0,    0,    0,    0,    0,    0,   67,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0
    } ;

static const YY_CHAR yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    1,    4,    1,    1,    5,    1,    6,    7,
        8,    9,   10,   11,   12,   13,   14,   15,   15,   15,
       15,   16,   15,   17,   15,   15,   15,   18,   19,   20,
       21,   22,    1,    1,   23,   24,   25,   26,   27,   28,
       29,   30,   31,   32,   33,   34,   35,   36,   37,   38,
       39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
       49,    1,   50,    1,   39,    1,   51,   52,   53,   54,

       55,   56,   57,   58,   59,   60,   61,   62,   63,   64,
       65,   66,   39,   67,   68,   69,   70,   71,   72,   73,
       74,   75,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static const YY_CHAR yy_meta[76] =
    {   0,
        1,    2,    3,    4,    5,    4,    6,    7,    5,    5,
        1,    5,    1,    5,    2,    2,    2,    5,    8,    5,
        5,    5,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    1,    1,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2
    } ;

static const flex_int16_t yy_base[1410] =
    {   0,
        0,    0, 2182,10684,   74, 2178, 2173,10684, 2141,10684,
    10684, 2115,10684,  145, 2114,10684,   56, 2111,  166,  233,
      285,   52,  333,   53,   66,   67,  381,  146,  145,  167,
      432,  235,  162,  476,  229,  285,  287,  345,  230,10684,
    10684,  433,   44,   54,   57, 2122, 2112,  507, 2108,10684,
      542,  329,  409,  119,    0, 2072,  436,  551,  568,  589,
      656,  709,  775,  837,  893,  957, 1025,  238,  288,   84,
      322,  552,  572,  224,  440,  508,  588,  317,  595,  574,
      631,  613, 1064,  353,  645,  649,  668,  666,  703,  684,
      706,  700,  714,  723,  758,  760,  763,  768,  803, 1111,

      850,  859,  893,  773,  842,  812,  882,  897,  914,  943,
      945,  820,  949,  951,  947,  954,   61, 2090,   57,  520,
     1034, 2068, 1052, 1055,  861, 2080, 2068, 1178, 1098,  208,
     1136, 1199, 1213, 1263, 1235, 1313, 1371, 1432, 1486, 1539,
     1593, 1659, 1726, 1022, 1045,  955,  964, 1098, 1011, 1134,
     1219, 1201, 1221, 1268, 1210, 1271, 1261, 1336, 1326, 1355,
     1060, 1359, 1357, 1380, 1362, 1414, 1252, 1310, 1345, 1424,
     1434, 1416, 1448, 1486, 1477, 1496, 1531, 1540, 1551, 1575,
     1494, 1580, 1582, 1585, 1587, 1597, 1616, 1646, 1649, 1594,
     1651, 1653, 1655, 1691, 1661, 1708, 1713, 1715, 1710, 2071,

       84,  108, 1157, 2047, 1565, 2044, 1787, 1796, 1812,  122,
     2017, 1815, 1836, 1853, 1867, 1888, 1949, 2022, 2085, 1909,
     2139, 1923, 1963, 2197, 2264, 2332, 2398, 2467, 2525, 1977,
     1998, 2593, 2658, 2043, 2724, 2785, 2806, 2057, 1844, 2874,
     2928, 2994, 3052, 2099, 3115, 2105, 1982, 2097,  434, 2123,
      372, 1907,  124, 2043, 2146,  475,  754, 2126, 2165, 2183,
     1705, 2168, 2205, 2191, 1909, 2220, 2147, 2223, 2235, 2241,
     2264, 2259, 2260, 3181,  176, 2307, 2341, 2014, 2359, 2362,
     2380, 2024, 2019,  743,  177,  233, 2412, 2426, 3202, 2440,
     2481, 3271, 3321, 2495, 2539, 3384, 3453, 3505, 3568, 3632,

     3700, 3768, 2013, 2009,   90, 3841, 2560,  403, 2449, 2010,
     1995, 3862, 2607,  873,  590, 1833, 1982,  601, 2481, 2592,
      894, 2091, 2532, 2587, 2595, 2640, 2281, 2627, 2626, 2644,
     1050, 2663, 2657, 2681, 2701, 1639, 1652, 2722, 2778, 2591,
     1992, 2516, 1988,  193, 1984,  297,  128,10684,  299, 2752,
     2829, 3883, 3951, 4014, 4064, 4116, 4184, 2851, 2888, 4252,
     4319, 2902, 1942, 2942, 1933,  237, 2964, 2569, 2761,  416,
     1896, 3005, 2911, 3026, 4393, 1912, 3073, 1909, 3087, 2955,
     2973,  568, 1892, 3124, 3035, 3101, 4457, 4511, 4579, 3147,
     4640, 4706, 4756, 4829, 4897, 3216, 4963, 3230, 5027, 5096,

     5158, 3244, 5226, 3293, 5290, 5342, 5405, 3307, 5468, 3342,
      261, 1347,  349, 3356, 3370, 5538, 3398, 5592, 5653, 5721,
     5785, 3412, 5839, 3158, 3253, 1883, 3435, 3464, 3284, 1887,
     1877, 1940,  315, 5889, 3426, 5910, 3480, 3487, 1861, 3514,
     3536, 3543, 1874, 1864, 2628,  363, 5973, 3582, 5994, 6057,
     6111, 3604, 6169, 3618, 3646, 6221, 6274, 6340, 3667, 6406,
     6479, 6532, 6586, 6654, 6722, 3559,  364, 3714, 3735, 3782,
     3796, 6772, 6836, 6902, 6968, 3595, 1843,  379, 1819, 1113,
     1822,  589,  394, 3819, 3897, 3676, 1819,  439, 1814,  446,
     1786,  610,  463, 3918, 7036, 7104, 7157, 7231, 3972, 3986,

     7285, 4000, 7339, 7408, 4036, 4050, 7475, 3744, 1781, 1758,
     7541, 4078,  467, 4092, 4130, 7562, 4151, 7628, 7683, 1759,
      260,  700, 2985,  474, 4198,  737, 3682,  477, 4219, 7741,
     4266, 7791, 4280, 4294, 7841, 7893, 4333, 1735, 4354, 1710,
     4368, 3832, 3927,  630, 1691, 4160, 4228, 4407,  495, 4429,
     4443, 4471, 7961, 8011, 1075, 1706,  557, 4485, 1163,  347,
      579, 4525, 8075, 8143, 8211, 8265, 4027, 4494, 1684, 4534,
     4555, 4420, 1663, 1639, 3750,  600,  678, 4600,  665, 4614,
     4654, 8331, 8383, 8446,  720, 4676,  356,  503,  784, 4728,
     8467, 8525, 4742, 8583, 4558, 1638,  810, 1635,  815, 1635,

      857,  846, 4770,  681, 4784, 4805, 8641, 4843, 1632,  250,
     1169, 1611, 1208,  272, 1628,  848, 4864,  516,  533,  873,
     4911, 8695, 8759, 8823, 1290, 4107,  938, 4933,  686, 4977,
     4999, 5013, 1073, 1406, 1413, 1608,  940, 5041,  651,  213,
      949, 5055, 8886, 8949, 9012, 1367,  944,  999, 5069,  805,
     5118, 5132, 1414,  966, 1443, 1460, 1599, 1040, 5172,  226,
     1256, 1763, 1076, 5193, 5240, 5262, 5276, 1030, 1199, 1135,
     5304,  813, 5318, 5363, 1202,  371, 1589, 1293, 5377, 1842,
     2044, 1244, 1532, 1273, 1303, 5391, 1315, 1311, 1353, 5426,
      818, 5440, 5454,  883, 2078, 2176, 1587, 1363, 5482, 2227,

     1545, 1392, 1448, 1563, 1617, 1409, 5496, 1673, 1204, 1462,
     5524,  887, 5552, 5566, 2244, 2336, 1731, 1802, 1736, 1578,
     1470, 5613, 1978, 1748, 1779, 1839, 1881, 1895, 1929, 1518,
     5627, 1304, 2346, 2387, 1521, 5667, 1128, 5688, 5735, 2391,
     2002, 1951, 1964, 2033, 2114, 1540, 1523, 5757, 2169, 2204,
     2268, 2270, 2323, 2342, 2349, 1699, 5771, 2454, 2472, 2382,
     2490, 2455, 1772, 5799, 1222, 5813, 5861, 2552, 2511, 2537,
     2626, 2631, 2663, 2662, 1531, 1833, 5875, 2673, 2676, 2684,
     2683,10684, 2716, 1530, 1841, 5931, 2833, 2769, 2729, 2756,
     2785, 2785, 1893, 5945, 1461, 5959, 6015, 2790, 2801, 2817,

     2823, 2823, 2846, 2855, 1519, 1897, 6029, 2872, 2889, 2903,
    10684, 1511, 1508, 1918, 6043, 2981, 2964, 2990, 3001, 3001,
     3014, 3018, 2074, 6071, 1569, 6085, 6125, 3047, 3053, 3055,
     3054,10684, 3102, 1497, 1492, 2083, 6139, 3106, 1471, 1459,
     1436, 2116, 6183, 3116, 3119, 3121, 3120, 3117, 3146, 3144,
     2121, 6197, 1670, 6243, 6288, 3158, 3177, 3179,10684, 1418,
     1404, 1375, 2125, 6310, 1351, 1315, 2183, 6354, 3190, 3202,
     3247, 3246,10684, 3260, 1314, 2234, 6376, 1771, 6420, 6434,
     3268, 1302, 1295, 1280, 1248, 2312, 6455, 1226, 2328, 6501,
     3277, 3282, 3284,10684, 1214, 1212, 2421, 6546, 1791, 6560,

     6600, 1187, 1179, 1166, 2465, 6621, 2517, 6668, 3309, 1158,
     1133, 1094, 2521, 6689, 1820, 6744, 6758, 1083, 1080, 2548,
     6786, 2550, 6808, 1042, 1039, 2575, 6822, 1884, 6850, 6872,
     1027, 2821, 6916, 2860, 6938, 1023, 2862, 6982, 2313, 7003,
     7050, 1007, 2933, 7071, 2990, 7126, 3016, 7171, 2461, 7192,
     7206,  970, 3021, 7245, 3057, 7259, 3061, 7299, 2492, 7313,
     7353,  950, 3192, 7367, 3269, 7381, 3332, 7422, 2694, 7436,
     7450,  941, 3351, 7489, 3379, 7511, 3393, 7576, 2978, 7598,
     7649,  937, 3407, 7697, 3421, 7711, 3441, 7763, 3079, 7777,
     7813,  929, 3451, 7827, 3475, 7855, 3486, 7869, 3190, 7907,

     7928,  926, 3490, 7983, 3497, 7997, 3520, 8025, 3208, 8047,
      899, 3531, 8061, 3535, 8089, 3542, 8110, 3265, 8157,  866,
     3546, 8178, 3554, 8225, 3564, 8239, 3336,  862, 3577, 8279,
     3613, 8301, 3627, 8345, 3348,  843, 3641, 8359, 3655, 8404,
     3657, 8418,  820, 3692, 3705, 3709, 8432,  817, 3723, 3725,
     3760, 8481,  773, 3773, 8495,  770, 3777,  759, 3805,  755,
      746,10684, 9069, 9077, 9084, 9088, 9091, 9096, 9104, 9111,
     9115, 9119, 9122, 9126, 9130, 9135, 9139, 9147, 9154, 9161,
     9165, 9170, 9178, 9185, 9190, 9198, 9205, 9209, 9216, 9220,
     9224, 9227, 9231, 9234, 9238, 9245, 9249, 9254, 9262, 9269,

     9275, 9280, 9288, 9295, 9301, 9305, 9308, 9315, 9319, 9323,
     9329, 9333, 9339, 9344, 9352, 9359, 9363, 9370, 9374, 9378,
     9384, 9388, 9394, 9398, 9401, 9405, 9412, 9416, 9420, 9426,
     9430, 9436, 9441, 9449, 9456, 9462, 9466, 9473, 9477, 9481,
     9485, 9491, 9495, 9501, 9505, 9511, 9515, 9522, 9526,  701,
     9530, 9536, 9540, 9546, 9550, 9556, 9560, 9567, 9571,  694,
     9575, 9581, 9585, 9591, 9595, 9601, 9605, 9612, 9616,  636,
     9620, 9626, 9630, 9636, 9640, 9646, 9650, 9657, 9661,  632,
     9665, 9671, 9675, 9681, 9685, 9691, 9695, 9702, 9706,  616,
     9710, 9716, 9720, 9726, 9730, 9736, 9740, 9747, 9751,  598,

     9755, 9761, 9765, 9771, 9775, 9781, 9785, 9792, 9796,  593,
     9800, 9806, 9810, 9816, 9820, 9826, 9830, 9837, 9841,  577,
     9845, 9851, 9855, 9861, 9865, 9871, 9875, 9882, 9886,  538,
     9890, 9896, 9900, 9906, 9910, 9916, 9920, 9927, 9931,  536,
     9935, 9941, 9945, 9951, 9955, 9961, 9965, 9972, 9976,  518,
     9980, 9986, 9990, 9996,10000,10006,10010,10017,10021,  491,
    10025,10031,10035,10041,10045,10051,10055,10062,10066,  488,
    10070,10076,10080,10086,10090,10096,10100,10107,10111,  441,
    10115,10121,10125,10131,10135,10141,10145,10152,10156,  421,
    10160,10166,10170,10176,10180,10186,10190,10197,10201,  376,

    10205,10211,10215,10221,10225,10231,10235,10242,10246,  335,
    10250,10256,10260,10266,10270,10276,10280,10287,10291,  328,
    10295,10301,10305,10311,10315,10321,10325,10332,10336,  281,
    10340,10346,10350,10356,10360,10366,10370,10377,10381,  279,
    10385,10391,10395,10401,10405,10411,10415,10422,10426,  271,
    10430,10436,10440,10446,10450,10456,10460,10467,  238,10471,
    10477,10481,10487,10491,10497,10501,10508,  235,10512,10518,
    10522,10528,10532,10538,10542,  206,10549,10555,10559,10565,
    10569,10575,10579,  172,10586,10592,10596,10602,10606,10612,
      154,10616,10622,10628,10634,  147,10638,10644,10650,10656,

      127,10660,10666,  104,10670,   96,10676,   93,   83
    } ;

static const flex_int16_t yy_def[1410] =
    {   0,
     1062,    1, 1062, 1062, 1062, 1062, 1063, 1062, 1064, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1065, 1065,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       27,   20,   20,   20,   20,   27,   20,   20,   20, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1063, 1062, 1064, 1062,
     1062, 1066, 1066, 1062,   14, 1062, 1066, 1066, 1067, 1067,
     1067, 1067, 1067, 1067, 1067, 1067, 1067,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,

       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67, 1062, 1062, 1062, 1066,
     1066, 1062, 1066, 1066, 1066, 1068, 1069, 1062, 1070,   14,
     1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071,
     1071, 1071, 1071,  143,  143,  143,  143,  143,  143,  143,
      143,  143,  143,  143,  143,  143,  143, 1062,  143,  143,
      143,  143,  143,  143,  143,  143,  143,  143,  143,  143,
      143,  143,  143,  143,  143,  143,  143,  143,  143,  143,
      143,  143,  143,  143,  143,  143,  143,  143,  143,  143,
      143,  143,  143,  143,  143,  143,  143,  143,  143, 1062,

     1062, 1062, 1066, 1068, 1062, 1069, 1062, 1072, 1072, 1062,
     1062, 1072, 1072, 1073, 1074, 1074, 1074, 1074, 1074, 1074,
     1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074,
     1074, 1074, 1074, 1074, 1074, 1075, 1074, 1074, 1076, 1074,
     1074, 1074, 1074, 1074, 1074,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245, 1075, 1062, 1072, 1072, 1062, 1072, 1072,
     1072, 1077, 1078, 1062, 1079,  128, 1080, 1081, 1081, 1081,
     1081, 1081, 1081, 1081, 1081, 1081, 1081, 1081, 1081, 1081,

     1081, 1081, 1082, 1083,  274, 1062, 1084,  302, 1076, 1085,
     1086, 1062, 1087,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
     1062, 1072, 1077, 1062, 1078, 1062, 1062, 1062, 1088, 1089,
     1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090,
     1090, 1090, 1082, 1062, 1083,  274, 1062, 1091, 1091, 1062,
     1062, 1091, 1091, 1092, 1090, 1085, 1062, 1086, 1062, 1093,
     1093, 1062, 1062, 1093, 1093, 1094, 1090, 1090, 1090, 1090,
     1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090,

     1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1062,
     1062, 1062, 1095, 1096, 1097, 1097, 1097, 1097, 1097, 1097,
     1097, 1097, 1097, 1091, 1091, 1062, 1091, 1091, 1091, 1098,
     1099, 1062, 1100, 1062, 1101, 1097, 1093, 1093, 1062, 1093,
     1093, 1093, 1102, 1103, 1062, 1104, 1062, 1105, 1097, 1097,
     1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
     1097, 1097, 1097, 1097, 1097, 1106, 1107, 1108, 1109, 1109,
     1109, 1109, 1109, 1109, 1109, 1091, 1098, 1062, 1099, 1062,
     1062, 1062, 1110, 1111, 1109, 1093, 1102, 1062, 1103, 1062,
     1062, 1062, 1112, 1113, 1109, 1109, 1109, 1109, 1109, 1109,

     1109, 1109, 1109, 1109, 1109, 1109, 1109, 1106, 1114, 1115,
     1062, 1116, 1117, 1118, 1119, 1119, 1119, 1119, 1119, 1062,
     1062, 1062, 1062, 1120, 1121, 1062, 1062, 1122, 1123, 1119,
     1119, 1119, 1119, 1119, 1119, 1119, 1119, 1114, 1062, 1115,
     1062, 1124, 1124, 1062, 1062, 1124, 1124, 1125, 1126, 1127,
     1128, 1128, 1128, 1128, 1062, 1062, 1129, 1130, 1062, 1062,
     1131, 1132, 1128, 1128, 1128, 1128, 1124, 1124, 1062, 1124,
     1124, 1124, 1133, 1134, 1062, 1135,  511, 1136, 1137, 1138,
     1139, 1139, 1139, 1140, 1141, 1142, 1062, 1062, 1143, 1144,
     1139, 1139, 1139, 1139, 1124, 1133, 1062, 1134, 1062, 1062,

     1062, 1145, 1146, 1147, 1148, 1149, 1149, 1149, 1062, 1062,
     1062, 1062, 1062, 1062, 1150, 1151, 1152, 1062, 1062, 1153,
     1154, 1149, 1149, 1149, 1062, 1062, 1155, 1156, 1157, 1158,
     1159, 1159, 1062, 1062, 1062, 1160, 1161, 1162, 1062, 1062,
     1163, 1164, 1159, 1159, 1159, 1062, 1062, 1165, 1166, 1167,
     1168, 1169, 1062, 1062, 1062, 1062, 1170, 1171, 1172, 1062,
     1062, 1062, 1173, 1174, 1169, 1169, 1169, 1062, 1062, 1175,
     1176, 1177, 1178, 1179, 1062, 1062, 1180, 1181, 1182, 1062,
     1062, 1062, 1062, 1062, 1183, 1184, 1062, 1062, 1185, 1186,
     1187, 1188, 1189, 1062, 1062, 1062, 1190, 1191, 1192, 1062,

     1062, 1062, 1062, 1062, 1062, 1193, 1194, 1062, 1062, 1195,
     1196, 1197, 1198, 1199, 1062, 1062, 1062, 1062, 1062, 1200,
     1201, 1202, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1203,
     1204, 1062, 1062, 1062, 1205, 1206, 1207, 1208, 1209, 1062,
     1062, 1062, 1062, 1062, 1062, 1210, 1211, 1212, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1213, 1214, 1062, 1062, 1062,
     1062, 1062, 1215, 1216, 1217, 1218, 1219, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1220, 1221, 1222, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1223, 1224, 1062, 1062, 1062, 1062,
     1062, 1062, 1225, 1226, 1227, 1228, 1229, 1062, 1062, 1062,

     1062, 1062, 1062, 1062, 1230, 1231, 1232, 1062, 1062, 1062,
     1062, 1062, 1062, 1233, 1234, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1235, 1236, 1237, 1238, 1239, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1240, 1241, 1242, 1062, 1062, 1062,
     1062, 1243, 1244, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1245, 1246, 1247, 1248, 1249, 1062, 1062, 1062, 1062, 1062,
     1062, 1250, 1251, 1252, 1062, 1062, 1253, 1254, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1255, 1256, 1257, 1258, 1259,
     1062, 1062, 1062, 1062, 1260, 1261, 1262, 1062, 1263, 1264,
     1062, 1062, 1062, 1062, 1062, 1062, 1265, 1266, 1267, 1268,

     1269, 1062, 1062, 1270, 1271, 1272, 1273, 1274, 1062, 1062,
     1062, 1062, 1275, 1276, 1277, 1278, 1279, 1062, 1280, 1281,
     1282, 1283, 1284, 1062, 1062, 1285, 1286, 1287, 1288, 1289,
     1290, 1291, 1292, 1293, 1294, 1062, 1295, 1296, 1297, 1298,
     1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
     1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
     1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
     1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
     1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
     1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,

     1062, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
     1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1062, 1376,
     1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
     1387, 1388, 1389, 1390, 1062, 1391, 1392, 1062, 1393, 1062,
     1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1062, 1062,
     1402, 1403, 1404, 1405, 1062, 1406, 1407, 1408, 1062, 1409,
     1062,    0, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,

     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,

     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,

     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,

     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062
    } ;

static const flex_int16_t yy_nxt[10760] =
    {   0,
        4,    5,    6,    7,    8,    9,   10,   11,    8,   12,
       13,    8,    4,    8,   14,   14,   14,   15,   16,   17,
        8,   18,   19,   20,   21,   22,   23,   24,   25,   26,
       27,   26,   26,   28,   29,   30,   31,   32,   26,   33,
       34,   35,   36,   37,   38,   39,   26,   26,   40,   41,
       19,   20,   21,   22,   23,   24,   25,   26,   27,   26,
       26,   28,   29,   30,   31,   32,   33,   34,   35,   36,
       37,   38,   39,   26,   26,   42,   50,   50,   71,   59,
      117,  118,   72,   77, 1061,  201,  119,  202,   73,   78,
      239,  366,   59,   59, 1060,   79, 1062, 1058,   59,   59,

      200,   43,   80,   59,   44, 1056,   71,   59,  117,  118,
       72,   77,   59,   59,  119,  202,   73,   78,   45,  143,
       59,   59,   79,  131,  131,   59,   59,  200, 1053,   43,
       80,   59,   44,  130,  130,  130,  286,  286,  286,   59,
       59,  275,  412,  412,  412,   45,   51,  143, 1048,   52,
      131,  131,  288,   52,   53, 1043,   52,   54,   52,   55,
       55,   55,   56,  329,   57,   52,   58,   51,   85,  275,
       52,   59,   59, 1036,   52,   53,   86,   52,  346,   52,
      288,   88,   87,   56,   99,   57,   52,   58,  100,   60,
      329,   59,   59,   59,  346,  348,   85,   89,   59,   59,

       59,   61,  341,   90,   86,   62,   63, 1028,   59,   88,
       87,  348,   99,   59,  661,  662,  100,   60,   59,   59,
     1062,   59,  130,  130,  130,   89,   59,  680,  662,   61,
      341,   90,   62,   63,   51,   59, 1020,   52,  366, 1011,
       59,   52,   53, 1062,   52, 1062,   52,  286,  286,  286,
       56,  633,   57,   52,   58,   59,   59,   97,  105,   64,
      141,   59,  411,  131,  148,  106,  116,  466,  107,   65,
      609,   59, 1002,  633,   98,  108,   59,  131,  131,   66,
      992,   59,  982,   59,   59,   97,  105,   64,  141,   59,
      131,  148,  609,  106,  116,  107,  556,   65,  346,   59,

      346,   98,  108,   59,  131,  131,   66,   67,   59,  112,
      142,   59,   59,   59,   68,  348,  480,  348,   69,   59,
      109,   70,  481,   59,  556,  110,  111,  131,  131,  972,
      125,   59,  126,   59,  127,   67,  962,  112,  142,   59,
       59,   59,   68,  128,  128,  128,   69,   59,  109,   70,
      346,   59,  110,  111,  131,  131,  155,  131,   59,   59,
       59,  131,  131,  144,  490,  346,   74,  348,   75,   59,
      491,   59,  695,  696,  113,  114,  588,  952,   76,   59,
      480,  115,  348,  155,  131,  618,  481,   59,  131,  131,
      144,   59,  131,  131,   74,  480,   75,   59,  327,   59,

      288,  481,  113,  114,  588,   76,   59,   59,   81,  115,
      125,  288,  126,  618,  127,   82,   83,   59,   59,  131,
      131,   84,  942,  128,  128,  128,  327,   59,  288,   52,
      434,  434,  434,  375,   42,   59,   81,  125,  288,  126,
      490,  127,  931,   82,   83,   59,  491,  490,   84,  351,
      128,  128,  128,  491,   59,   91,   52,   52,  325,   92,
       43,  375,  288,   44,  490,  149,   59,   93,  346,   94,
      491,   95,   59,  288,   96,  480,  351,   45,  490,  131,
      131,  481,  150,   91,  491,  348,  325,   92,   43,  919,
      288,   44,  904,  149,   59,   93,  346,   94,   95,   59,

      288,   96,  101,  288,   45,  102,  131,  131,   51,  150,
      103,   52,   59,  348,  288,   52,   53,  104,   52,  885,
       52,  203,   59,  126,   56,  127,   57,   52,   58,  619,
      101,  288,  151,  102,  128,  128,  128,  862,  103,  835,
       59,  288,  639,   51,  104,  152,  120,  131,  131,   59,
      120,  121,  125,  120,  126,  120,  127,  619,  480,  122,
      151,  123,  120,  124,  481,  128,  128,  128,  640,   51,
      639,   52,   52,  152,  131,  131,   52,   53,  805,   52,
      490,   52,  447,  447,  447,   56,  491,   57,   52,   58,
       51,  131,  145,   52,  775,  146,  640,   52,   53,  746,

       52,  599,   52,  523,  523,  523,   56,  600,   57,   52,
       58,  131,  131,  131,  131,  157,  147,  720,  131,  145,
      388,  153,  146,  154,  527,  527,  527,  131,  131,  132,
      156,  351,  158,  697,  131,  131,  351,  677,  131,  131,
      131,  131,  157,  147,  577,  577,  577,  351,  388,  153,
      159,  154,  131,  131,  131,  131,  132,   51,  156,  351,
       52,  131,  131,  351,   52,   53,  346,   52,  164,   52,
      131,  131,  165,   56,  351,   57,   52,   58,  159,  131,
      131,  133,  346,  348,  131,  131,  660,  346,  131,  131,
     1062,  167,  577,  577,  577,  657,  164,  131,  131,  348,

      165,  522,  636,  166,  348,  131,  131,  131,  131,  133,
       51,  131,  131,   52,  660,  131,  131,   52,   53,  167,
       52,  480,   52,  131,  131,  169,   56,  481,   57,   52,
       58,  166,  131,  131,  131,  131,  168,  170,  559,  131,
      131,  521,  131,  131,  346,  131,  131,  635,  134,  171,
      131,  131,  169,  131,  131,  347,  635,  284,  284,  284,
      635,  348,  131,  131,  168,  170,  131,  131,  521,  131,
      131,  635,  131,  131,  635,  134,   51,  171,  560,   52,
      131,  131,  288,   52,   53,  490,   52,  173,   52,  131,
      131,  491,   56,  332,   57,   52,   58,  131,  131,  131,

      131,  172,  131,  131,  174,  560,  346,  131,  131,  135,
      288,  599,  187,  131,  346,  173,  599,  600,  635,  346,
      332,  635,  600,  348,  131,  131,  131,  131,  172,  131,
      131,  348,  174,  175,  131,  131,  348,  135,   51,  187,
      131,   52,  131,  131,  635,   52,   53,  599,   52,  480,
       52,  131,  131,  600,   56,  481,   57,   52,   58,  195,
      131,  175,  125,  635,  126,  136,  127,  635,  188,  131,
      131,  626,  626,  626,  490,  128,  128,  128,  131,  131,
      491,  189,  131,  181,  715,  696,  195,  131,  346,  131,
      131,  182,  183,  136,   51,  184,  188,   52,  185,  131,

      635,   52,   53,  351,   52,  348,   52,  387,  189,  131,
       56,  181,   57,   52,   58,  186,  131,  131,  182,  351,
      183,  131,  131,  184,  351,  185,  131,  635,  190,  137,
      635,  351,  131,  131,  191,  387,  131,  131,  635,  599,
      351,  480,  635,  186,  192,  600,  351,  481,  131,  131,
      490,  635,  351,  131,  131,  190,  491,  137,   51,  131,
      131,   52,  191,  131,  131,   52,   53,  351,   52,  193,
       52,  635,  192,  669,   56,  194,   57,   52,   58,  196,
      131,  131,  131,  131,  131,  131,  198,  131,  131,  131,
      131,  131,  197,  199,  131,  215,  215,  193,  138,  229,

      599,  669,  676,  194,  215,  215,  600,  196,  635,  131,
      131,  131,  131,  198,  131,  131,  131,  131,  131,  197,
      199,  131,  215,  215,  936,  138,   51,  229,  635,   52,
      676,  215,  215,   52,   53,  203,   52,  126,   52,  127,
      925,  480,   56,  936,   57,   52,   58,  481,  128,  128,
      128,  215,  215,  203,  120,  126,  203,  127,  126,  687,
      127,  227,  215,  215,  139,  140,  128,  128,  128,  128,
      128,  128,  120,  120,  653,  120,  555,  490,  215,  215,
      351,  635,  228,  491,  918,  215,  215,  687,  227,  215,
      215,  139,  140,  160,  161,  912,  351,  162,  654,  207,

      215,  242,  208,  131,  131,  163,  208,  209,  351,  208,
      228,  208,  215,  215,  480,  211,  521,  212,  208,  213,
      520,  160,  161,  351,  230,  162,  654,  215,  242,  346,
      131,  131,  163,  176,  925,  177,  599,   51,  215,  215,
       52,  178,  600,  521,   52,   53,  348,   52,  179,   52,
      131,  180,  230,   56,  521,   57,   52,   58,  203,  896,
      126,  176,  127,  177,  559,  215,  215,  635,  231,  178,
      634,  128,  128,  128,  215,  215,  179,  131,  180,  207,
      903,  521,  208,  611,  611,  611,  208,  209,  918,  208,
      210,  208,  128,  128,  128,  211,  231,  212,  208,  213,

       51,  215,  215,   52,  587,  733,  734,   52,   53,  633,
       52,  236,   52,  896,   51,  912,   56,   52,   57,   52,
       58,   52,   53,  346,   52,  688,   52,  888,  609,  609,
       56,  587,   57,   52,   58,  216,   51,  233,  694,   52,
      348,  215,  215,   52,   53,  232,   52,  234,   52,  635,
      215,  215,   56,  688,   57,   52,   58,  661,  681,  215,
      215,  215,  215,  216,   51,  233,  694,   52,  215,  215,
      703,   52,   53,  232,   52,  234,   52,  215,  215,  682,
       56,  884,   57,   52,   58,  217,  215,  215,  215,  215,
      235,  646,  215,  215,  480,  237,  903,  238,  703,  705,

      481,  215,  215,  861,  490,  758,  734,  682,  215,  215,
      491,  215,  215,  217,   51,  896,  866,   52,  235,  215,
      215,   52,   53,  237,   52,  238,   52,  705,  215,  215,
       56,  647,   57,   52,   58,  215,  215,  158,  215,  215,
      120,  708,  239,  218,  120,  121,  709,  120,  346,  120,
      215,  215,  888,  122,  599,  123,  120,  124,  647,  240,
      600,  412,  412,  412,  480,  348,  215,  215,  646,  708,
      481,  218,   51,  244,  709,   52,  635,  215,  215,   52,
       53,  241,   52,  245,   52,  215,  215,  240,   56,  243,
       57,   52,   58,  215,  215,  215,  215,  215,  215,  215,

      215,  247,  215,  215,  219,  861,  246,  655,  668,  241,
      490,  245,  215,  215,  656,  653,  491,  243,  726,  884,
      215,  215,  215,  215,  215,  215,  215,  215,  247,  215,
      215,  654,  219,   51,  246,  668,   52,  841,  654,  675,
       52,   53,  248,   52,  655,   52,  726,  215,  215,   56,
      249,   57,   52,   58,  215,  215,  215,  215,  220,  654,
      866,  656,  346,  599,  215,  215,  654,  675,  675,  600,
      248,  480,  813,  250,  215,  215,  727,  481,  249,  348,
      251,  215,  215,  215,  215,  675,  220,   51,  215,  215,
       52,  215,  215,  635,   52,   53,  675,   52,  861,   52,

      250,  215,  215,   56,  727,   57,   52,   58,  251,  813,
      252,  221,  841,  675,  253,  215,  215,  255,  215,  490,
      635,  261,  599,  254,  480,  491,  215,  215,  600,  256,
      481,  813,  635,  683,  215,  215,  215,  215,  252,  221,
       51,  635,  253,   52,  255,  215,  701,   52,   53,  261,
       52,  254,   52,  215,  215,  704,   56,  256,   57,   52,
       58,  215,  215,  215,  215,  222,  207,  257,  725,  208,
      346,  215,  215,  208,  209,  258,  208,  259,  208,  635,
      215,  215,  211,  704,  212,  208,  213,  348,  635,  728,
      635,  215,  215,  222,   51,  257,  725,   52,  215,  215,

      635,   52,   53,  258,   52,  259,   52,  215,  215,  635,
       56,  260,   57,   52,   58,  215,  215,  728,  215,  215,
      215,  215,  215,  215,  262,  215,  215,  215,  215,  635,
      263,  609,  223,  633,  215,  215,  625,  215,  215,  260,
      597,  597,  215,  215,  597,  729,  264,  215,  215,  215,
      215,  262,  215,  215,  215,  215,  215,  215,  263,  223,
       51,  215,  215,   52,  215,  215,  597,   52,   53,  406,
       52,  346,   52,  729,  264,  266,   56,  267,   57,   52,
       58,  265,  407,  215,  215,  351,  215,  215,  348,  215,
      215,  215,  215,  215,  268,  269,  215,  406,  351,  224,

      490,  215,  215,  266,  567,  267,  491,  584,  732,  265,
      407,  542,  351,  215,  215,  539,  215,  215,  215,  215,
      215,  268,  269,  215,  270,  351,  224,   51,  215,  215,
       52,  215,  215,  288,   52,   53,  732,   52,  539,   52,
      273,  271,  272,   56,  288,   57,   52,   58,  215,  215,
      215,  215,  270,  215,  215,  215,  215,  743,  215,  215,
      555,  288,  745,  539,  683,  662,  225,  226,  273,  271,
      272,  288,  346,  599,  750,  215,  215,  215,  215,  600,
      215,  215,  215,  215,  539,  743,  684,  526,  207,  348,
      745,  276,  346,  225,  226,  276,  277,  281,  276,  282,

      276,  283,  750,  718,  278,  751,  279,  276,  280,  348,
      284,  284,  284,  281,  684,  282,  281,  283,  282,  488,
      283,  346,  488,  522,  478,  744,  284,  284,  284,  284,
      284,  284,  208,  751,  480,  208,  208,  281,  348,  282,
      481,  283,  490,  680,  700,  309,  478,  310,  491,  311,
      284,  284,  284,  744,  207,  389,  208,  208,  312,  312,
      312,  208,  209,  351,  208,  682,  208,  752,   51,  488,
      211,   52,  212,  208,  213,   52,   53,  488,   52,  351,
       52,  437,  478,  389,   56,  346,   57,   52,   58,   51,
      478,  351,   52,  682,  599,  752,   52,   53,  480,   52,

      600,   52,  348,  424,  481,   56,  351,   57,   52,   58,
       51,  753,  380,   52,  377,  377,  368,   52,   53,  490,
       52,  289,   52,  754,   51,  491,   56,   52,   57,   52,
       58,   52,   53,  328,   52,  288,   52,  288,  364,  753,
       56,  480,   57,   52,   58,  364,  288,  481,  288,  289,
       51,  754,  482,   52,  432,  432,  432,   52,   53,  755,
       52,  328,   52,  288,   51,  288,   56,   52,   57,   52,
       58,   52,   53,  288,   52,  288,   52,  771,   51,  723,
       56,   52,   57,   52,   58,   52,   53,  755,   52,  344,
       52,  344,  772,  411,   56,  290,   57,   52,   58,   51,

      377,  749,   52,  741,  322,  771,   52,   53,  390,   52,
      288,   52,  351,  377,  364,   56,  364,   57,   52,   58,
      772,  288,  290,   51,  344,  770,   52,  344,  351,  749,
       52,   53,  322,   52,  276,   52,  390,  208,  288,   56,
      351,   57,   52,   58,   51,  701,  681,   52,  288,  205,
      205,   52,   53,  770,   52,  351,   52,  291,   51,  773,
       56,   52,   57,   52,   58,   52,   53,  702,   52,  330,
       52,  288,  274,  205,   56,  599,   57,   52,   58,  695,
      716,  600,  288,  205,  480,  291,   51,  773,  120,   52,
      481,  201,   52,   52,   53,  702,   52,  330,   52,  288,

       51,  717,   56,   52,   57,   52,   58,   52,   53,  288,
       52,  292,   52,   48,  318,   48,   56,  490,   57,   52,
       58,  351,  599,  491,   46,  288,  480,  323,  600,  717,
      393,   50,  481,  288,   50,   50,  288,  351,  321,  292,
       51,  324,  774,   52,  288,  326,   48,   52,   53,  351,
       52,  288,   52,  288,  288,  323,   56,  393,   57,   52,
       58,  288,  288,  288,  351,  288,  321,  333,  324,  293,
      774,  288,  331,  326,  288,  288,   48,  718,  696,  288,
       46, 1062,  288, 1062,  490,  288,  288,  334, 1062,  288,
      491, 1062,  288,  288,  333,  778,  288,  293,   51,  719,

      331,   52,  288,  288,  288,   52,   53,  288,   52,  336,
       52,  288,  288,  288,   56,  334,   57,   52,   58,  288,
     1062,  288,  288,  778,  288,  335,  338,  719,  723,  700,
      288,  288,  779,  288,  288,  599,  336,  294,  337,  288,
     1062,  600,  339, 1062,  288,  715,  740,  288,  288,  288,
      724,  288,  335, 1062,  338, 1062, 1062,  288, 1062,  288,
      779,  288,  288,  288,  294,   51,  337,  717,   52,  288,
      339,  288,   52,   53,  288,   52,  288,   52,  724,  288,
      288,   56, 1062,   57,   52,   58,  288,  288,  288,  288,
      340,  288,  288, 1062, 1062,  717,  780,  288,  288,  288,

      781,  288, 1062,  288, 1062,  295,  398,  288,  342, 1062,
      282,  351,  283,  480,  346,  288,  288, 1062,  340,  481,
      288,  284,  284,  284,  780,  288,  288,  351,  781,  490,
      288,  348,  295,   51,  398,  491,   52,  741,  716,  351,
       52,   53,  342,   52,  282,   52,  283,  733,  759,   56,
     1062,   57,   52,   58,  351,  284,  284,  284,  782,  742,
      342,  276,  282,  342,  283,  282, 1062,  283, 1062,  760,
     1062,  296,  783,  284,  284,  284,  284,  284,  284,  276,
      276,  281,  276,  282,  784,  283,  782,  742,  761,  734,
     1062, 1062,  768,  740,  284,  284,  284,  760,  296,   51,

      783, 1062,   52, 1062, 1062, 1062,   52,   53,  790,   52,
      762,   52,  784,  207,  769,   56,  208,   57,   52,   58,
      208,  209,  599,  208, 1062,  208, 1062,   51,  600,  211,
       52,  212,  208,  213,   52,   53,  790,   52,  762,   52,
      297,   51,  769,   56,   52,   57,   52,   58,   52,   53,
      309,   52,  310,   52,  311,  758,  787,   56, 1062,   57,
       52,   58,  346,  312,  312,  312,  480,  297,   51, 1062,
     1062,   52,  481,  788,  759,   52,   53,  760,   52,  348,
       52,  792,   51, 1062,   56,   52,   57,   52,   58,   52,
       53,  761,   52,  346,   52,  789,   51,  298,   56,   52,

       57,   52,   58,   52,   53,  760,   52,  391,   52,  792,
      348,  351,   56,  791,   57,   52,   58,  342,  490,  282,
     1062,  283,  599,  789,  491,  298,   51,  351,  600,   52,
      284,  284,  284,   52,   53,  391,   52,  799,   52,  351,
       51,  791,   56,   52,   57,   52,   58,   52,   53,  480,
       52,  490,   52,  768,  351,  481,   56,  491,   57,   52,
       58,  367,  351,  800,  368,  799,  299,  394,  368,  369,
      429,  368,  430,  368,  431,  798,  599,  371,  351,  372,
      368,  373,  600,  432,  432,  432, 1062, 1062, 1062, 1062,
      351,  800,  410,  299,   51,  394, 1062,   52, 1062, 1062,

     1062,   52,   53,  798,   52,  351,   52, 1062,  379, 1062,
       56,  380,   57,   52,   58,  380,  381,  351,  380,  392,
      380,  351,  351,  395,  383,  351,  384,  380,  385,  490,
      300, 1062, 1062,  351, 1062,  491,  396,  351,  351, 1062,
      492,  351,  445,  445,  445,  351, 1062,  392,  400,  351,
      351,  395,  399,  351,  801, 1062,  351,  351,  300,   51,
      351,  802,   52,  396,  351,  351,   52,   53,  351,   52,
      351,   52,  351,  351,  351,   56,  400,   57,   52,   58,
      399,  397,  801,  401,  351,  351,  351,  351,  402,  802,
      351,  803,  804,  351, 1062,  346,  403,  301,  351,  351,

      351,  808,  351,  351, 1062, 1062,  809, 1062,  397,  351,
      401,  351,  348,  351,  810,  351,  402,  351,  811,  803,
      804,  351,  404,  403,  301,   51, 1062,  351,   52,  808,
      351,  351,   52,   53,  809,   52,  351,   52, 1062,  351,
      405,   56,  810,   57,   52,   58,  811,  351, 1062,  404,
      408,  812,  351,  207,  351,  819,  208,  302, 1062,  351,
      208,  209,  429,  208,  430,  208,  431,  405,  351,  211,
      788,  212,  208,  213,  351,  432,  432,  432,  408,  812,
      351,  368, 1062,  819,  820,  302,  236, 1062,  303,  120,
      304,  305,  818,  120,  121,  351,  120, 1062,  120,  306,

      306,  306,  122,  409,  123,  120,  124,   51,  351, 1062,
       52,  821,  820,  822,   52,   53,  828,   52, 1062,   52,
      818, 1062,  480,   56,  351,   57,   52,   58,  481,  829,
       51,  409, 1062,   52,  816,  787,  351,   52,   53,  821,
       52,  822,   52, 1062,  828,  830,   56,  308,   57,   52,
       58,  351,   51,  831, 1062,   52,  817,  829,  832,   52,
       53,  490,   52,  599,   52, 1062, 1062,  491,   56,  600,
       57,   52,   58,  830,  308,   51,  833, 1062,   52, 1062,
     1062,  831,   52,   53,  817,   52,  832,   52, 1062,   51,
      834,   56,   52,   57,   52,   58,   52,   53, 1062,   52,

      314,   52,  838,   51,  833,   56,   52,   57,   52,   58,
       52,   53,  429,   52,  430,   52,  431, 1062,  834,   56,
     1062,   57,   52,   58,  839,  432,  432,  432,  314,   51,
      838,  368,   52, 1062,  480, 1062,   52,   53,  840,   52,
      481,   52, 1062,  367, 1062,   56,  368,   57,   52,   58,
      368,  369,  839,  368, 1062,  368,  442, 1062,  443,  371,
      444,  372,  368,  373, 1062,  367,  840,  315,  424,  445,
      445,  445,  424,  425,  442,  424,  443,  424,  444,  346,
     1062,  426,  816,  427,  424,  428,  480,  445,  445,  445,
      845,  490,  481,  380,  315,   51,  348,  491,   52,  523,

      523,  523,   52,   53,  844,   52,  429,   52,  430, 1062,
      431,   56, 1062,   57,   52,   58,  846,  599,  845,  432,
      432,  432,  480,  600,  316,  368,  368,  367,  481,  847,
      368,  848,  844, 1062,  368,  369,  442,  368,  443,  368,
      444, 1062,  849,  371,  846,  372,  368,  373,  850,  445,
      445,  445,  316,   51, 1062,  380,   52,  847,  490,  848,
       52,   53,  599,   52,  491,   52, 1062, 1062,  600,   56,
      849,   57,   52,   58,  379,  856,  850,  380, 1062, 1062,
      346,  380,  381,  857,  380,  858,  380,  317,  379,  859,
      383,  437,  384,  380,  385,  437,  438,  348,  437, 1062,

      437, 1062,  379,  856,  439,  380,  440,  437,  441,  380,
      381,  857,  380,  858,  380,  317,   51,  859,  383,   52,
      384,  380,  385,   52,   53,  442,   52,  443,   52,  444,
     1062, 1062,   56, 1062,   57,   52,   58,  860,  445,  445,
      445,  865,  869,  319,  380,  380, 1062,  870,   51,  871,
      872,   52,  873, 1062,  320,   52,   53, 1062,   52,  476,
       52,  430, 1062,  431,   56,  860,   57,   52,   58,  865,
      869,  319,  432,  432,  432,  870,  874,  871,  872,  875,
      873,  320,  274, 1062,  303, 1062,  304,  305,  881, 1062,
     1062,  346, 1062,  480, 1062,  306,  306,  306, 1062,  481,

     1062, 1062, 1062,   51,  874, 1062,   52,  875,  348,  346,
       52,   53,  882,   52,  883,   52,  881,   51,  891,   56,
       52,   57,   52,   58,   52,   53,  348,   52, 1062,   52,
     1062,   51,  892,   56,   52,   57,   52,   58,   52,   53,
      882,   52,  883,   52,  352,   51,  891,   56,   52,   57,
       52,   58,   52,   53,  476,   52,  430,   52,  431, 1062,
      892,   56, 1062,   57,   52,   58,  346,  432,  432,  432,
      490,  352,   51,  424, 1062,   52,  491,  893, 1062,   52,
       53,  894,   52,  348,   52,  429, 1062,  430,   56,  431,
       57,   52,   58,  353,   51,  895, 1062,   52,  432,  432,

      432,   52,   53,  902,   52,  893,   52,  909,   51,  894,
       56,   52,   57,   52,   58,   52,   53,  910,   52,  911,
       52,  353,   51,  895,   56,   52,   57,   52,   58,   52,
       53,  902,   52,  599,   52,  909, 1062,  346,   56,  600,
       57,   52,   58,  410,  924,  910,  120,  911,  466,  346,
      120,  121,  480,  120,  348,  120,  354,  207,  481,  122,
      208,  123,  120,  124,  208,  209,  348,  208, 1062,  208,
     1062,   51,  924,  211,   52,  212,  208,  213,   52,   53,
      490,   52, 1062,   52,  354,   51,  491,   56,   52,   57,
       52,   58,   52,   53,  599,   52, 1062,   52, 1062,   51,

      600,   56,   52,   57,   52,   58,   52,   53,  480,   52,
     1062,   52, 1062,   51,  481,   56,   52,   57,   52,   58,
       52,   53,  490,   52, 1062,   52,  355,  367,  491,   56,
      368,   57,   52,   58,  368,  369,  476,  368,  430,  368,
      431, 1062,  599,  371, 1062,  372,  368,  373,  600,  432,
      432,  432,  480,  355,   51,  424,  424,   52,  481, 1062,
     1062,   52,   53, 1062,   52,  476,   52,  430, 1062,  431,
       56, 1062,   57,   52,   58, 1062,  490,  356,  432,  432,
      432,  486,  491,  443,  424,  444, 1062,  599,  486, 1062,
      443,  480,  444,  600,  445,  445,  445,  481,  490, 1062,

     1062,  445,  445,  445,  491,  356,   51,  437, 1062,   52,
     1062, 1062, 1062,   52,   53,  486,   52,  443,   52,  444,
     1062,  599,   56, 1062,   57,   52,   58,  600,  445,  445,
      445, 1062,  480, 1062,  437,  437,  490,  486,  481,  443,
      357,  444,  491,  599,  442, 1062,  443,  480,  444,  600,
      445,  445,  445,  481, 1062,  490,  437,  445,  445,  445,
      508,  491,  509, 1062,  510,  599, 1062, 1062,  357,   51,
     1062,  600,   52,  511,  511,  511,   52,   53,  480,   52,
     1062,   52, 1062,  379,  481,   56,  380,   57,   52,   58,
      380,  381, 1062,  380, 1062,  380,  476, 1062,  430,  383,

      431,  384,  380,  385,  358,   51, 1062, 1062,   52,  432,
      432,  432,   52,   53,  490,   52, 1062,   52, 1062,   51,
      491,   56,   52,   57,   52,   58,   52,   53,  599,   52,
     1062,   52,  358,   51,  600,   56,   52,   57,   52,   58,
       52,   53,  480,   52, 1062,   52, 1062,   51,  481,   56,
       52,   57,   52,   58,   52,   53,  490,   52,  599,   52,
     1062, 1062,  491,   56,  600,   57,   52,   58,   51, 1062,
     1062,   52, 1062,  359, 1062,   52,   53,  486,   52,  443,
       52,  444, 1062,  490,   56, 1062,   57,   52,   58,  491,
      445,  445,  445,  480, 1062, 1062,  527,  527,  527,  481,

      359,   51, 1062, 1062,   52, 1062,  490, 1062,   52,   53,
      599,   52,  491,   52, 1062,  207,  600,   56,  208,   57,
       52,   58,  208,  209,  480,  208,  490,  208, 1062, 1062,
      481,  211,  491,  212,  208,  213,   51, 1062, 1062,   52,
     1062,  360, 1062,   52,   53,  508,   52,  509,   52,  510,
     1062,  599,   56, 1062,   57,   52,   58,  600,  511,  511,
      511,  599,  601, 1062,  575,  575,  575,  600,  360,   51,
     1062, 1062,   52, 1062,  599, 1062,   52,   53,  599,   52,
      600,   52, 1062,   51,  600,   56,   52,   57,   52,   58,
       52,   53, 1062,   52, 1062,   52, 1062,   51,  361,   56,

       52,   57,   52,   58,   52,   53,  599,   52, 1062,   52,
     1062, 1062,  600,   56,  362,   57,   52,   58, 1062, 1062,
      367, 1062, 1062,  368, 1062, 1062,  361,  368,  369, 1062,
      368, 1062,  368,  572, 1062,  573,  371,  574,  372,  368,
      373,  362,  367, 1062, 1062,  368,  575,  575,  575,  368,
      369, 1062,  368,  370,  368,  306,  306,  306,  371, 1062,
      372,  368,  373,  379, 1062, 1062,  380, 1062, 1062, 1062,
      380,  381, 1062,  380,  382,  380,  312,  312,  312,  383,
     1062,  384,  380,  385,   51, 1062, 1062,   52, 1062, 1062,
     1062,   52,   53, 1062,   52, 1062,   52, 1062,   51, 1062,

       56,   52,   57,   52,   58,   52,   53, 1062,   52, 1062,
       52, 1062, 1062, 1062,   56, 1062,   57,   52,   58,  379,
     1062, 1062,  380, 1062,  416, 1062,  380,  381,  572,  380,
      573,  380,  574, 1062, 1062,  383, 1062,  384,  380,  385,
     1062,  575,  575,  575, 1062, 1062, 1062,  542, 1062, 1062,
     1062,  416,   51, 1062, 1062,   52, 1062, 1062, 1062,   52,
       53, 1062,   52, 1062,   52, 1062, 1062, 1062,   56, 1062,
       57,   52,   58,   51, 1062, 1062,   52, 1062, 1062, 1062,
       52,   53, 1062,   52, 1062,   52,  417,   51, 1062,   56,
       52,   57,   52,   58,   52,   53, 1062,   52, 1062,   52,

     1062,   51, 1062,   56,   52,   57,   52,   58,   52,   53,
     1062,   52, 1062,   52,  417,   51, 1062,   56,   52,   57,
       52,   58,   52,   53, 1062,   52, 1062,   52,  595, 1062,
      573,   56,  574,   57,   52,   58,  418,   51, 1062, 1062,
       52,  575,  575,  575,   52,   53, 1062,   52, 1062,   52,
     1062,   51, 1062,   56,   52,   57,   52,   58,   52,   53,
     1062,   52, 1062,   52,  418,   51, 1062,   56,   52,   57,
       52,   58,   52,   53, 1062,   52, 1062,   52, 1062,  541,
     1062,   56,  542,   57,   52,   58,  542,  543,  419,  542,
     1062,  542, 1062,  207, 1062,  545,  208,  546,  542,  547,

      208,  209, 1062,  208, 1062,  208, 1062, 1062,  599,  211,
     1062,  212,  208,  213,  600, 1062,  419,   51, 1062, 1062,
       52,  626,  626,  626,   52,   53, 1062,   52, 1062,   52,
     1062,   51, 1062,   56,   52,   57,   52,   58,   52,   53,
     1062,   52, 1062,   52, 1062, 1062, 1062,   56, 1062,   57,
       52,   58,   51, 1062, 1062,   52, 1062,  420, 1062,   52,
       53,  572,   52,  573,   52,  574, 1062, 1062,   56, 1062,
       57,   52,   58, 1062,  575,  575,  575, 1062, 1062, 1062,
      542,  542, 1062, 1062,  420,   51, 1062, 1062,   52, 1062,
     1062, 1062,   52,   53, 1062,   52, 1062,   52, 1062,  367,

     1062,   56,  368,   57,   52,   58,  368,  369, 1062,  368,
     1062,  368, 1062, 1062, 1062,  371, 1062,  372,  368,  373,
      379, 1062, 1062,  380, 1062,  421, 1062,  380,  381,  572,
      380,  573,  380,  574, 1062, 1062,  383, 1062,  384,  380,
      385, 1062,  575,  575,  575, 1062, 1062, 1062,  542, 1062,
     1062, 1062,  421,   51, 1062, 1062,   52, 1062, 1062, 1062,
       52,   53, 1062,   52, 1062,   52, 1062,   51, 1062,   56,
       52,   57,   52,   58,   52,   53, 1062,   52, 1062,   52,
     1062,   51, 1062,   56,   52,   57,   52,   58,   52,   53,
     1062,   52,  422,   52, 1062,   51, 1062,   56,   52,   57,

       52,   58,   52,   53, 1062,   52, 1062,   52, 1062, 1062,
     1062,   56, 1062,   57,   52,   58, 1062, 1062, 1062,  422,
       51, 1062, 1062,   52, 1062, 1062, 1062,   52,   53, 1062,
       52, 1062,   52, 1062,   51, 1062,   56,   52,   57,   52,
       58,   52,   53, 1062,   52, 1062,   52, 1062, 1062, 1062,
       56, 1062,   57,   52,   58,  541, 1062, 1062,  542, 1062,
     1062, 1062,  542,  543, 1062,  542,  423,  542, 1062,  541,
     1062,  545,  567,  546,  542,  547,  567,  568, 1062,  567,
     1062,  567, 1062, 1062, 1062,  569, 1062,  570,  567,  571,
     1062, 1062, 1062,  423,   51, 1062, 1062,   52, 1062, 1062,

     1062,   52,   53, 1062,   52, 1062,   52, 1062,  541, 1062,
       56,  542,   57,   52,   58,  542,  543, 1062,  542, 1062,
      542,  572, 1062,  573,  545,  574,  546,  542,  547,  436,
      207, 1062, 1062,  208,  575,  575,  575,  208,  209, 1062,
      208, 1062,  208, 1062,   51, 1062,  211,   52,  212,  208,
      213,   52,   53, 1062,   52, 1062,   52,  436,   51, 1062,
       56,   52,   57,   52,   58,   52,   53, 1062,   52, 1062,
       52, 1062,   51, 1062,   56,   52,   57,   52,   58,   52,
       53, 1062,   52,  449,   52, 1062,  367, 1062,   56,  368,
       57,   52,   58,  368,  369,  595,  368,  573,  368,  574,

     1062, 1062,  371, 1062,  372,  368,  373, 1062,  575,  575,
      575,  449,   51, 1062,  567,   52, 1062, 1062, 1062,   52,
       53, 1062,   52, 1062,   52, 1062,  379, 1062,   56,  380,
       57,   52,   58,  380,  381,  595,  380,  573,  380,  574,
     1062, 1062,  383, 1062,  384,  380,  385, 1062,  575,  575,
      575, 1062,  450, 1062,  567,  567,  595, 1062,  573,  595,
      574,  573, 1062,  574, 1062, 1062, 1062, 1062, 1062,  575,
      575,  575,  575,  575,  575,  567, 1062, 1062, 1062,  450,
       51, 1062, 1062,   52, 1062, 1062, 1062,   52,   53, 1062,
       52, 1062,   52, 1062, 1062, 1062,   56, 1062,   57,   52,

       58,  541, 1062, 1062,  542, 1062, 1062, 1062,  542,  543,
     1062,  542,  451,  542, 1062,  207, 1062,  545,  208,  546,
      542,  547,  208,  209, 1062,  208, 1062,  208, 1062, 1062,
     1062,  211, 1062,  212,  208,  213, 1062, 1062, 1062, 1062,
      451,   51, 1062, 1062,   52, 1062, 1062, 1062,   52,   53,
     1062,   52, 1062,   52, 1062,   51, 1062,   56,   52,   57,
       52,   58,   52,   53, 1062,   52, 1062,   52, 1062, 1062,
     1062,   56, 1062,   57,   52,   58, 1062,  367, 1062,  452,
      368, 1062, 1062, 1062,  368,  369, 1062,  368, 1062,  368,
     1062, 1062, 1062,  371, 1062,  372,  368,  373, 1062, 1062,

     1062, 1062, 1062, 1062, 1062, 1062,  452,   51, 1062, 1062,
       52, 1062, 1062, 1062,   52,   53, 1062,   52, 1062,   52,
     1062, 1062, 1062,   56, 1062,   57,   52,   58,  453,  379,
     1062, 1062,  380, 1062, 1062, 1062,  380,  381, 1062,  380,
     1062,  380, 1062,   51, 1062,  383,   52,  384,  380,  385,
       52,   53, 1062,   52, 1062,   52,  453,   51, 1062,   56,
       52,   57,   52,   58,   52,   53, 1062,   52, 1062,   52,
     1062,  541, 1062,   56,  542,   57,   52,   58,  542,  543,
     1062,  542, 1062,  542, 1062,  207, 1062,  545,  208,  546,
      542,  547,  208,  209, 1062,  208, 1062,  208, 1062, 1062,

     1062,  211,  454,  212,  208,  213,   51, 1062, 1062,   52,
     1062, 1062, 1062,   52,   53, 1062,   52, 1062,   52, 1062,
     1062, 1062,   56, 1062,   57,   52,   58, 1062, 1062,  454,
       51, 1062, 1062,   52, 1062, 1062, 1062,   52,   53, 1062,
       52, 1062,   52, 1062,   51, 1062,   56,   52,   57,   52,
       58,   52,   53, 1062,   52, 1062,   52, 1062, 1062, 1062,
       56, 1062,   57,   52,   58,  367, 1062, 1062,  368, 1062,
      455, 1062,  368,  369, 1062,  368, 1062,  368, 1062, 1062,
     1062,  371, 1062,  372,  368,  373, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062,  455,   51, 1062,

     1062,   52, 1062, 1062, 1062,   52,   53, 1062,   52, 1062,
       52, 1062,  379, 1062,   56,  380,   57,   52,   58,  380,
      381, 1062,  380, 1062,  380, 1062, 1062, 1062,  383, 1062,
      384,  380,  385, 1062,  541, 1062,  456,  542, 1062, 1062,
     1062,  542,  543, 1062,  542, 1062,  542, 1062, 1062, 1062,
      545, 1062,  546,  542,  547, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062,  456,   51, 1062, 1062,   52, 1062, 1062,
     1062,   52,   53, 1062,   52, 1062,   52, 1062,  207, 1062,
       56,  208,   57,   52,   58,  208,  209, 1062,  208, 1062,
      208, 1062, 1062, 1062,  211, 1062,  212,  208,  213,  457,

       51, 1062, 1062,   52, 1062, 1062, 1062,   52,   53, 1062,
       52, 1062,   52, 1062,   51, 1062,   56,   52,   57,   52,
       58,   52,   53, 1062,   52, 1062,   52,  457,   51, 1062,
       56,   52,   57,   52,   58,   52,   53, 1062,   52, 1062,
       52, 1062,  367, 1062,   56,  368,   57,   52,   58,  368,
      369, 1062,  368, 1062,  368, 1062,  379, 1062,  371,  380,
      372,  368,  373,  380,  381, 1062,  380, 1062,  380,  458,
      541, 1062,  383,  542,  384,  380,  385,  542,  543, 1062,
      542, 1062,  542, 1062, 1062, 1062,  545, 1062,  546,  542,
      547, 1062, 1062, 1062, 1062, 1062,  458,   51, 1062, 1062,

       52, 1062, 1062, 1062,   52,   53, 1062,   52, 1062,   52,
     1062, 1062, 1062,   56, 1062,   57,   52,   58, 1062,  207,
     1062, 1062,  208, 1062, 1062, 1062,  208,  209, 1062,  208,
      459,  208, 1062,   51, 1062,  211,   52,  212,  208,  213,
       52,   53, 1062,   52, 1062,   52, 1062, 1062, 1062,   56,
     1062,   57,   52,   58, 1062, 1062, 1062, 1062,  459,   51,
     1062, 1062,   52, 1062, 1062, 1062,   52,   53, 1062,   52,
     1062,   52, 1062,  367, 1062,   56,  368,   57,   52,   58,
      368,  369, 1062,  368, 1062,  368, 1062, 1062, 1062,  371,
     1062,  372,  368,  373,  379, 1062, 1062,  380, 1062,  460,

     1062,  380,  381, 1062,  380, 1062,  380, 1062, 1062, 1062,
      383, 1062,  384,  380,  385, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062,  460,   51, 1062, 1062,
       52, 1062, 1062, 1062,   52,   53, 1062,   52, 1062,   52,
     1062,   51, 1062,   56,   52,   57,   52,   58,   52,   53,
     1062,   52, 1062,   52, 1062, 1062, 1062,   56, 1062,   57,
       52,   58,  461,   51, 1062, 1062,   52, 1062, 1062, 1062,
       52,   53, 1062,   52, 1062,   52, 1062,   51, 1062,   56,
       52,   57,   52,   58,   52,   53, 1062,   52, 1062,   52,
      461,   51, 1062,   56,   52,   57,   52,   58,   52,   53,

     1062,   52, 1062,   52, 1062,  541, 1062,   56,  542,   57,
       52,   58,  542,  543,  462,  542, 1062,  542, 1062,  207,
     1062,  545,  208,  546,  542,  547,  208,  209, 1062,  208,
     1062,  208, 1062, 1062, 1062,  211, 1062,  212,  208,  213,
     1062, 1062,  462,   51, 1062, 1062,   52, 1062, 1062, 1062,
       52,   53, 1062,   52, 1062,   52, 1062, 1062, 1062,   56,
     1062,   57,   52,   58,   51, 1062, 1062,   52, 1062, 1062,
     1062,   52,   53, 1062,   52, 1062,   52,  463,  367, 1062,
       56,  368,   57,   52,   58,  368,  369, 1062,  368, 1062,
      368, 1062,  379, 1062,  371,  380,  372,  368,  373,  380,

      381, 1062,  380, 1062,  380,  463,   51, 1062,  383,   52,
      384,  380,  385,   52,   53, 1062,   52, 1062,   52, 1062,
     1062, 1062,   56, 1062,   57,   52,   58,  541, 1062, 1062,
      542, 1062, 1062, 1062,  542,  543, 1062,  542, 1062,  542,
      464,  207, 1062,  545,  208,  546,  542,  547,  208,  209,
     1062,  208, 1062,  208, 1062,   51, 1062,  211,   52,  212,
      208,  213,   52,   53, 1062,   52, 1062,   52,  464,   51,
     1062,   56,   52,   57,   52,   58,   52,   53, 1062,   52,
     1062,   52, 1062,  367, 1062,   56,  368,   57,   52,   58,
      368,  369, 1062,  368, 1062,  368, 1062,  379, 1062,  371,

      380,  372,  368,  373,  380,  381, 1062,  380, 1062,  380,
     1062,  465, 1062,  383, 1062,  384,  380,  385, 1062, 1062,
     1062, 1062, 1062, 1062, 1062,  541, 1062, 1062,  542, 1062,
     1062, 1062,  542,  543, 1062,  542, 1062,  542,  465,   51,
     1062,  545,   52,  546,  542,  547,   52,   53, 1062,   52,
     1062,   52, 1062,  207, 1062,   56,  208,   57,   52,   58,
      208,  209, 1062,  208,  470,  208, 1062,   51, 1062,  211,
       52,  212,  208,  213,   52,   53, 1062,   52, 1062,   52,
     1062, 1062, 1062,   56, 1062,   57,   52,   58, 1062, 1062,
     1062, 1062,  470,   51, 1062, 1062,   52, 1062, 1062, 1062,

       52,   53, 1062,   52, 1062,   52, 1062, 1062, 1062,   56,
     1062,   57,   52,   58,  367, 1062, 1062,  368, 1062, 1062,
     1062,  368,  369, 1062,  368,  471,  368, 1062,  379, 1062,
      371,  380,  372,  368,  373,  380,  381, 1062,  380, 1062,
      380, 1062, 1062, 1062,  383, 1062,  384,  380,  385, 1062,
     1062, 1062, 1062,  471,   51, 1062, 1062,   52, 1062, 1062,
     1062,   52,   53, 1062,   52, 1062,   52, 1062,  541, 1062,
       56,  542,   57,   52,   58,  542,  543, 1062,  542, 1062,
      542, 1062, 1062, 1062,  545, 1062,  546,  542,  547,  207,
     1062, 1062,  208, 1062,  472, 1062,  208,  209, 1062,  208,

     1062,  208, 1062, 1062, 1062,  211, 1062,  212,  208,  213,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062,  472,   51, 1062, 1062,   52, 1062, 1062, 1062,   52,
       53, 1062,   52, 1062,   52, 1062,   51, 1062,   56,   52,
       57,   52,   58,   52,   53, 1062,   52, 1062,   52, 1062,
     1062, 1062,   56, 1062,   57,   52,   58,  473,  367, 1062,
     1062,  368, 1062, 1062, 1062,  368,  369, 1062,  368, 1062,
      368, 1062,  379, 1062,  371,  380,  372,  368,  373,  380,
      381, 1062,  380, 1062,  380,  473,   51, 1062,  383,   52,
      384,  380,  385,   52,   53, 1062,   52, 1062,   52, 1062,

      541, 1062,   56,  542,   57,   52,   58,  542,  543, 1062,
      542,  474,  542, 1062,  207, 1062,  545,  208,  546,  542,
      547,  208,  209, 1062,  208, 1062,  208, 1062, 1062, 1062,
      211, 1062,  212,  208,  213, 1062, 1062, 1062, 1062,  474,
       51, 1062, 1062,   52, 1062, 1062, 1062,   52,   53, 1062,
       52, 1062,   52, 1062, 1062, 1062,   56, 1062,   57,   52,
       58,  475,   51, 1062, 1062,   52, 1062, 1062, 1062,   52,
       53, 1062,   52, 1062,   52, 1062,  367, 1062,   56,  368,
       57,   52,   58,  368,  369, 1062,  368, 1062,  368,  475,
      367, 1062,  371,  368,  372,  368,  373,  368,  369, 1062,

      368, 1062,  368,  434,  434,  434,  371, 1062,  372,  368,
      373,   51, 1062, 1062,   52, 1062, 1062, 1062,   52,   53,
     1062,   52, 1062,   52, 1062, 1062, 1062,   56, 1062,   57,
       52,   58,  379, 1062, 1062,  380, 1062, 1062, 1062,  380,
      381, 1062,  380, 1062,  380,  485,  541, 1062,  383,  542,
      384,  380,  385,  542,  543, 1062,  542, 1062,  542, 1062,
      207, 1062,  545,  208,  546,  542,  547,  208,  209, 1062,
      208, 1062,  208,  485,  379, 1062,  211,  380,  212,  208,
      213,  380,  381, 1062,  380, 1062,  380,  447,  447,  447,
      383, 1062,  384,  380,  385,   51, 1062, 1062,   52, 1062,

     1062, 1062,   52,   53, 1062,   52, 1062,   52, 1062, 1062,
     1062,   56, 1062,   57,   52,   58,   51, 1062, 1062,   52,
     1062, 1062, 1062,   52,   53, 1062,   52, 1062,   52,  495,
      367, 1062,   56,  368,   57,   52,   58,  368,  369, 1062,
      368, 1062,  368, 1062,  379, 1062,  371,  380,  372,  368,
      373,  380,  381, 1062,  380, 1062,  380,  495,   51, 1062,
      383,   52,  384,  380,  385,   52,   53, 1062,   52, 1062,
       52, 1062,  541, 1062,   56,  542,   57,   52,   58,  542,
      543, 1062,  542,  496,  542, 1062,  207, 1062,  545,  208,
      546,  542,  547,  208,  209, 1062,  208, 1062,  208, 1062,

     1062, 1062,  211, 1062,  212,  208,  213, 1062, 1062, 1062,
     1062,  496,   51, 1062, 1062,   52, 1062, 1062, 1062,   52,
       53, 1062,   52, 1062,   52, 1062,   51, 1062,   56,   52,
       57,   52,   58,   52,   53, 1062,   52, 1062,   52, 1062,
      367,  497,   56,  368,   57,   52,   58,  368,  369, 1062,
      368, 1062,  368, 1062, 1062, 1062,  371, 1062,  372,  368,
      373, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,  497,
       51, 1062, 1062,   52, 1062, 1062, 1062,   52,   53, 1062,
       52, 1062,   52, 1062,  379, 1062,   56,  380,   57,   52,
       58,  380,  381,  498,  380, 1062,  380, 1062,  541, 1062,

      383,  542,  384,  380,  385,  542,  543, 1062,  542, 1062,
      542, 1062, 1062, 1062,  545, 1062,  546,  542,  547, 1062,
     1062,  498,   51, 1062, 1062,   52, 1062, 1062, 1062,   52,
       53, 1062,   52, 1062,   52, 1062, 1062, 1062,   56, 1062,
       57,   52,   58, 1062,  207, 1062,  499,  208, 1062, 1062,
     1062,  208,  209, 1062,  208, 1062,  208, 1062, 1062, 1062,
      211, 1062,  212,  208,  213, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062,  499,   51, 1062, 1062,   52, 1062,
     1062, 1062,   52,   53, 1062,   52, 1062,   52, 1062,   51,
     1062,   56,   52,   57,   52,   58,   52,   53, 1062,   52,

     1062,   52, 1062, 1062, 1062,   56, 1062,   57,   52,   58,
     1062,  367, 1062,  500,  368, 1062, 1062, 1062,  368,  369,
     1062,  368, 1062,  368, 1062, 1062, 1062,  371, 1062,  372,
      368,  373, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
      500,   51, 1062, 1062,   52, 1062, 1062, 1062,   52,   53,
     1062,   52, 1062,   52, 1062,  379, 1062,   56,  380,   57,
       52,   58,  380,  381, 1062,  380, 1062,  380, 1062, 1062,
     1062,  383, 1062,  384,  380,  385, 1062,  541, 1062,  501,
      542, 1062, 1062, 1062,  542,  543, 1062,  542, 1062,  542,
     1062, 1062, 1062,  545, 1062,  546,  542,  547, 1062, 1062,

     1062, 1062, 1062, 1062, 1062, 1062,  501,   51, 1062, 1062,
       52, 1062, 1062, 1062,   52,   53, 1062,   52, 1062,   52,
     1062,  207, 1062,   56,  208,   57,   52,   58,  208,  209,
     1062,  208, 1062,  208, 1062,   51, 1062,  211,   52,  212,
      208,  213,   52,   53, 1062,   52, 1062,   52, 1062, 1062,
     1062,   56,  502,   57,   52,   58,  367, 1062, 1062,  368,
     1062, 1062, 1062,  368,  369, 1062,  368, 1062,  368, 1062,
     1062, 1062,  371, 1062,  372,  368,  373, 1062, 1062,  502,
       51, 1062, 1062,   52, 1062, 1062, 1062,   52,   53, 1062,
       52, 1062,   52, 1062, 1062, 1062,   56, 1062,   57,   52,

       58, 1062,  379, 1062,  503,  380, 1062, 1062, 1062,  380,
      381, 1062,  380, 1062,  380, 1062, 1062, 1062,  383, 1062,
      384,  380,  385, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062,  503,   51, 1062, 1062,   52, 1062, 1062, 1062,
       52,   53, 1062,   52, 1062,   52, 1062,  541, 1062,   56,
      542,   57,   52,   58,  542,  543, 1062,  542,  504,  542,
     1062,  207, 1062,  545,  208,  546,  542,  547,  208,  209,
     1062,  208, 1062,  208, 1062, 1062, 1062,  211, 1062,  212,
      208,  213, 1062, 1062, 1062, 1062,  504,   51, 1062, 1062,
       52, 1062, 1062, 1062,   52,   53, 1062,   52, 1062,   52,

     1062,   51, 1062,   56,   52,   57,   52,   58,   52,   53,
     1062,   52, 1062,   52, 1062, 1062, 1062,   56, 1062,   57,
       52,   58,  367, 1062, 1062,  368, 1062,  505, 1062,  368,
      369, 1062,  368, 1062,  368, 1062, 1062, 1062,  371, 1062,
      372,  368,  373, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062,  505,   51, 1062, 1062,   52, 1062,
     1062, 1062,   52,   53, 1062,   52, 1062,   52, 1062,  379,
     1062,   56,  380,   57,   52,   58,  380,  381, 1062,  380,
     1062,  380, 1062, 1062, 1062,  383, 1062,  384,  380,  385,
      541, 1062, 1062,  542, 1062,  506, 1062,  542,  543, 1062,

      542, 1062,  542, 1062, 1062, 1062,  545, 1062,  546,  542,
      547, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062,  506,   51, 1062, 1062,   52, 1062, 1062, 1062,
       52,   53, 1062,   52, 1062,   52, 1062, 1062, 1062,   56,
     1062,   57,   52,   58,  507,  207, 1062, 1062,  208, 1062,
     1062, 1062,  208,  209, 1062,  208, 1062,  208, 1062,   51,
     1062,  211,   52,  212,  208,  213,   52,   53, 1062,   52,
     1062,   52,  507,   51, 1062,   56,   52,   57,   52,   58,
       52,   53, 1062,   52, 1062,   52, 1062,  367, 1062,   56,
      368,   57,   52,   58,  368,  369, 1062,  368, 1062,  368,

     1062, 1062, 1062,  371, 1062,  372,  368,  373,  516,  379,
     1062, 1062,  380, 1062, 1062, 1062,  380,  381, 1062,  380,
     1062,  380, 1062,  541, 1062,  383,  542,  384,  380,  385,
      542,  543, 1062,  542, 1062,  542,  516,   51, 1062,  545,
       52,  546,  542,  547,   52,   53, 1062,   52, 1062,   52,
     1062,  207, 1062,   56,  208,   57,   52,   58,  208,  209,
     1062,  208, 1062,  208, 1062, 1062, 1062,  211, 1062,  212,
      208,  213, 1062,   51, 1062,  517,   52, 1062, 1062, 1062,
       52,   53, 1062,   52, 1062,   52, 1062, 1062, 1062,   56,
     1062,   57,   52,   58, 1062, 1062, 1062, 1062, 1062, 1062,

     1062, 1062,  517,   51, 1062, 1062,   52, 1062, 1062, 1062,
       52,   53, 1062,   52, 1062,   52, 1062,  367, 1062,   56,
      368,   57,   52,   58,  368,  369, 1062,  368, 1062,  368,
     1062, 1062, 1062,  371, 1062,  372,  368,  373, 1062,  379,
     1062,  518,  380, 1062, 1062, 1062,  380,  381, 1062,  380,
     1062,  380, 1062, 1062, 1062,  383, 1062,  384,  380,  385,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,  518,   51,
     1062, 1062,   52, 1062, 1062, 1062,   52,   53, 1062,   52,
     1062,   52, 1062,  541, 1062,   56,  542,   57,   52,   58,
      542,  543, 1062,  542, 1062,  542, 1062, 1062, 1062,  545,

     1062,  546,  542,  547,  207, 1062, 1062,  208, 1062,  519,
     1062,  208,  209, 1062,  208, 1062,  208, 1062, 1062, 1062,
      211, 1062,  212,  208,  213, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062,  519,   51, 1062, 1062,
       52, 1062, 1062, 1062,   52,   53, 1062,   52, 1062,   52,
     1062,   51, 1062,   56,   52,   57,   52,   58,   52,   53,
     1062,   52, 1062,   52, 1062, 1062, 1062,   56, 1062,   57,
       52,   58,  367, 1062, 1062,  368, 1062,  530, 1062,  368,
      369, 1062,  368, 1062,  368, 1062, 1062, 1062,  371, 1062,
      372,  368,  373, 1062, 1062, 1062, 1062, 1062, 1062, 1062,

     1062, 1062, 1062, 1062,  530,   51, 1062, 1062,   52, 1062,
     1062, 1062,   52,   53, 1062,   52, 1062,   52, 1062, 1062,
     1062,   56, 1062,   57,   52,   58, 1062,  379, 1062,  531,
      380, 1062, 1062, 1062,  380,  381, 1062,  380, 1062,  380,
     1062, 1062, 1062,  383, 1062,  384,  380,  385, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062,  531,   51, 1062,
     1062,   52, 1062, 1062, 1062,   52,   53, 1062,   52, 1062,
       52, 1062,  541, 1062,   56,  542,   57,   52,   58,  542,
      543, 1062,  542, 1062,  542, 1062, 1062, 1062,  545, 1062,
      546,  542,  547,  207, 1062, 1062,  208, 1062, 1062, 1062,

      208,  209, 1062,  208,  532,  208, 1062,   51, 1062,  211,
       52,  212,  208,  213,   52,   53, 1062,   52, 1062,   52,
     1062, 1062, 1062,   56, 1062,   57,   52,   58, 1062, 1062,
     1062,  532,   51, 1062, 1062,   52, 1062, 1062, 1062,   52,
       53, 1062,   52, 1062,   52, 1062,  367, 1062,   56,  368,
       57,   52,   58,  368,  369, 1062,  368,  533,  368, 1062,
      379, 1062,  371,  380,  372,  368,  373,  380,  381, 1062,
      380, 1062,  380, 1062, 1062, 1062,  383, 1062,  384,  380,
      385, 1062, 1062, 1062, 1062,  533,   51, 1062, 1062,   52,
     1062, 1062, 1062,   52,   53, 1062,   52, 1062,   52, 1062,

      541, 1062,   56,  542,   57,   52,   58,  542,  543, 1062,
      542,  534,  542, 1062,  207, 1062,  545,  208,  546,  542,
      547,  208,  209, 1062,  208, 1062,  208, 1062, 1062, 1062,
      211, 1062,  212,  208,  213, 1062, 1062, 1062, 1062,  534,
       51, 1062, 1062,   52, 1062, 1062, 1062,   52,   53, 1062,
       52, 1062,   52, 1062,   51, 1062,   56,   52,   57,   52,
       58,   52,   53, 1062,   52, 1062,   52, 1062,  367, 1062,
       56,  368,   57,   52,   58,  368,  369, 1062,  368, 1062,
      368,  535,  379, 1062,  371,  380,  372,  368,  373,  380,
      381, 1062,  380, 1062,  380, 1062, 1062, 1062,  383, 1062,

      384,  380,  385, 1062, 1062, 1062, 1062, 1062,  535,   51,
     1062, 1062,   52, 1062, 1062, 1062,   52,   53, 1062,   52,
     1062,   52, 1062,  541, 1062,   56,  542,   57,   52,   58,
      542,  543, 1062,  542, 1062,  542, 1062,  207, 1062,  545,
      208,  546,  542,  547,  208,  209, 1062,  208,  536,  208,
     1062,   51, 1062,  211,   52,  212,  208,  213,   52,   53,
     1062,   52, 1062,   52, 1062, 1062, 1062,   56, 1062,   57,
       52,   58, 1062, 1062, 1062,  536,   51, 1062, 1062,   52,
     1062, 1062, 1062,   52,   53, 1062,   52, 1062,   52, 1062,
      367, 1062,   56,  368,   57,   52,   58,  368,  369, 1062,

      368, 1062,  368, 1062, 1062, 1062,  371, 1062,  372,  368,
      373, 1062,  379, 1062,  537,  380, 1062, 1062, 1062,  380,
      381, 1062,  380, 1062,  380, 1062, 1062, 1062,  383, 1062,
      384,  380,  385, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062,  537,  541, 1062, 1062,  542, 1062, 1062, 1062,  542,
      543, 1062,  542,  544,  542,  511,  511,  511,  545, 1062,
      546,  542,  547,   51, 1062, 1062,   52, 1062, 1062, 1062,
       52,   53, 1062,   52, 1062,   52, 1062,  541, 1062,   56,
      542,   57,   52,   58,  542,  543, 1062,  542, 1062,  542,
     1062, 1062, 1062,  545, 1062,  546,  542,  547, 1062,  207,

     1062,  552,  208, 1062, 1062, 1062,  208,  209, 1062,  208,
     1062,  208, 1062, 1062, 1062,  211, 1062,  212,  208,  213,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,  552,   51,
     1062, 1062,   52, 1062, 1062, 1062,   52,   53, 1062,   52,
     1062,   52, 1062, 1062, 1062,   56, 1062,   57,   52,   58,
       51, 1062, 1062,   52, 1062,  553, 1062,   52,   53, 1062,
       52, 1062,   52, 1062, 1062, 1062,   56, 1062,   57,   52,
       58, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062,  553,   51, 1062, 1062,   52, 1062, 1062,
     1062,   52,   53, 1062,   52, 1062,   52, 1062,  367, 1062,

       56,  368,   57,   52,   58,  368,  369, 1062,  368, 1062,
      368, 1062,  379,  554,  371,  380,  372,  368,  373,  380,
      381, 1062,  380, 1062,  380, 1062, 1062, 1062,  383, 1062,
      384,  380,  385, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062,  554,   51, 1062, 1062,   52, 1062, 1062, 1062,   52,
       53, 1062,   52, 1062,   52, 1062, 1062, 1062,   56, 1062,
       57,   52,   58,  563,  541, 1062, 1062,  542, 1062, 1062,
     1062,  542,  543, 1062,  542, 1062,  542, 1062,  207, 1062,
      545,  208,  546,  542,  547,  208,  209, 1062,  208, 1062,
      208,  563,   51, 1062,  211,   52,  212,  208,  213,   52,

       53, 1062,   52, 1062,   52, 1062, 1062, 1062,   56, 1062,
       57,   52,   58,  564,   51, 1062, 1062,   52, 1062, 1062,
     1062,   52,   53, 1062,   52, 1062,   52, 1062,  367, 1062,
       56,  368,   57,   52,   58,  368,  369, 1062,  368, 1062,
      368,  564,   51, 1062,  371,   52,  372,  368,  373,   52,
       53, 1062,   52, 1062,   52, 1062,  379, 1062,   56,  380,
       57,   52,   58,  380,  381,  565,  380, 1062,  380, 1062,
      541, 1062,  383,  542,  384,  380,  385,  542,  543, 1062,
      542, 1062,  542, 1062, 1062, 1062,  545, 1062,  546,  542,
      547, 1062, 1062,  565,   51, 1062, 1062,   52, 1062, 1062,

     1062,   52,   53, 1062,   52, 1062,   52, 1062,  207, 1062,
       56,  208,   57,   52,   58,  208,  209, 1062,  208, 1062,
      208, 1062, 1062, 1062,  211, 1062,  212,  208,  213,   51,
     1062, 1062,   52, 1062,  566, 1062,   52,   53, 1062,   52,
     1062,   52, 1062, 1062, 1062,   56, 1062,   57,   52,   58,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062,  566,   51, 1062, 1062,   52, 1062, 1062, 1062,   52,
       53, 1062,   52, 1062,   52, 1062, 1062, 1062,   56, 1062,
       57,   52,   58,  582,  367, 1062, 1062,  368, 1062, 1062,
     1062,  368,  369, 1062,  368, 1062,  368, 1062,  379, 1062,

      371,  380,  372,  368,  373,  380,  381, 1062,  380, 1062,
      380,  582,   51, 1062,  383,   52,  384,  380,  385,   52,
       53, 1062,   52, 1062,   52, 1062,  541, 1062,   56,  542,
       57,   52,   58,  542,  543, 1062,  542, 1062,  542, 1062,
     1062, 1062,  545, 1062,  546,  542,  547,  583,  207, 1062,
     1062,  208, 1062, 1062, 1062,  208,  209, 1062,  208, 1062,
      208, 1062,  367, 1062,  211,  368,  212,  208,  213,  368,
      369, 1062,  368, 1062,  368,  583,   51, 1062,  371,   52,
      372,  368,  373,   52,   53, 1062,   52, 1062,   52, 1062,
      379, 1062,   56,  380,   57,   52,   58,  380,  381, 1062,

      380, 1062,  380, 1062, 1062, 1062,  383, 1062,  384,  380,
      385,  541, 1062, 1062,  542, 1062,  591, 1062,  542,  543,
     1062,  542, 1062,  542, 1062, 1062, 1062,  545, 1062,  546,
      542,  547, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062,  591,   51, 1062, 1062,   52, 1062, 1062,
     1062,   52,   53, 1062,   52, 1062,   52, 1062,  207, 1062,
       56,  208,   57,   52,   58,  208,  209, 1062,  208, 1062,
      208, 1062, 1062, 1062,  211, 1062,  212,  208,  213,  367,
     1062, 1062,  368, 1062,  592, 1062,  368,  369, 1062,  368,
     1062,  368, 1062, 1062, 1062,  371, 1062,  372,  368,  373,

     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062,  592,   51, 1062, 1062,   52, 1062, 1062, 1062,   52,
       53, 1062,   52, 1062,   52, 1062,  379, 1062,   56,  380,
       57,   52,   58,  380,  381, 1062,  380,  593,  380, 1062,
      541, 1062,  383,  542,  384,  380,  385,  542,  543, 1062,
      542, 1062,  542, 1062, 1062, 1062,  545, 1062,  546,  542,
      547, 1062, 1062, 1062, 1062,  593,   51, 1062, 1062,   52,
     1062, 1062, 1062,   52,   53, 1062,   52, 1062,   52, 1062,
      367, 1062,   56,  368,   57,   52,   58,  368,  369, 1062,
      368, 1062,  368, 1062, 1062, 1062,  371, 1062,  372,  368,

      373, 1062,  379, 1062,  594,  380, 1062, 1062, 1062,  380,
      381, 1062,  380, 1062,  380, 1062, 1062, 1062,  383, 1062,
      384,  380,  385, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062,  594,   51, 1062, 1062,   52, 1062, 1062, 1062,   52,
       53, 1062,   52, 1062,   52, 1062,  541, 1062,   56,  542,
       57,   52,   58,  542,  543,  607,  542, 1062,  542, 1062,
      367, 1062,  545,  368,  546,  542,  547,  368,  369, 1062,
      368, 1062,  368, 1062, 1062, 1062,  371, 1062,  372,  368,
      373, 1062, 1062,  607,   51, 1062, 1062,   52, 1062, 1062,
     1062,   52,   53, 1062,   52, 1062,   52, 1062, 1062, 1062,

       56, 1062,   57,   52,   58,  379, 1062, 1062,  380, 1062,
     1062, 1062,  380,  381, 1062,  380, 1062,  380,  608,  541,
     1062,  383,  542,  384,  380,  385,  542,  543, 1062,  542,
     1062,  542, 1062,  541, 1062,  545,  542,  546,  542,  547,
      542,  543, 1062,  542, 1062,  542,  608,  584, 1062,  545,
      609,  546,  542,  547,  609,  610, 1062,  609, 1062,  609,
      611,  611,  611,  612, 1062,  613,  609,  614,   51, 1062,
     1062,   52, 1062, 1062, 1062,   52,   53, 1062,   52, 1062,
       52, 1062,  541, 1062,   56,  542,   57,   52,   58,  542,
      543, 1062,  542, 1062,  542, 1062,  541,  622,  545,  542,

      546,  542,  547,  542,  543, 1062,  542, 1062,  542, 1062,
     1062, 1062,  545, 1062,  546,  542,  547, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062,  622,   51, 1062, 1062,   52,
     1062, 1062, 1062,   52,   53, 1062,   52, 1062,   52, 1062,
     1062, 1062,   56, 1062,   57,   52,   58, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062,  623, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062,  623,   51, 1062, 1062,   52, 1062, 1062,
     1062,   52,   53, 1062,   52, 1062,   52, 1062, 1062, 1062,

       56, 1062,   57,   52,   58, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062,  624, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062,  624,   51, 1062, 1062,   52, 1062, 1062, 1062,   52,
       53, 1062,   52, 1062,   52, 1062, 1062, 1062,   56, 1062,
       57,   52,   58, 1062, 1062, 1062, 1062,  632, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062,  632,   51, 1062, 1062,   52,

     1062, 1062, 1062,   52,   53, 1062,   52, 1062,   52, 1062,
     1062, 1062,   56, 1062,   57,   52,   58, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062,  643, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,  643,
       51, 1062, 1062,   52, 1062, 1062, 1062,   52,   53, 1062,
       52, 1062,   52, 1062, 1062, 1062,   56, 1062,   57,   52,
       58, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062,  644, 1062, 1062, 1062, 1062,

     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062,  644,   51, 1062, 1062,   52, 1062, 1062,
     1062,   52,   53, 1062,   52, 1062,   52, 1062, 1062, 1062,
       56, 1062,   57,   52,   58, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,  645, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062,  645,   51, 1062, 1062,
       52, 1062, 1062, 1062,   52,   53, 1062,   52, 1062,   52,

     1062, 1062, 1062,   56, 1062,   57,   52,   58, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062,  665, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,  665,
       51, 1062, 1062,   52, 1062, 1062, 1062,   52,   53, 1062,
       52, 1062,   52, 1062, 1062, 1062,   56, 1062,   57,   52,
       58, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062,  666, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,

     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062,  666,   51, 1062, 1062,   52, 1062, 1062, 1062,
       52,   53, 1062,   52, 1062,   52, 1062, 1062, 1062,   56,
     1062,   57,   52,   58, 1062, 1062, 1062, 1062, 1062, 1062,
      667, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,  667,   47,
       47, 1062,   47,   47,   47,   47,   47,   49,   49, 1062,
       49,   49,   49,   49,   49,   59, 1062, 1062,   59,  129,
     1062,  129,  131, 1062, 1062,  131,  204,  204, 1062,  204,

      204,  204,  204,  204,  206,  206, 1062,  206,  206,  206,
      206,  206,  214, 1062, 1062,  214,  215, 1062, 1062,  215,
      285, 1062,  285,  287, 1062, 1062,  287,  288, 1062, 1062,
      288,  307, 1062,  307,  307,  307,  313, 1062,  313,  343,
      343, 1062,  343,  343,  343,  343,  343,  345,  345, 1062,
      345,  345,  345,  345,  345,  349, 1062, 1062, 1062, 1062,
     1062,  349,  350, 1062, 1062,  350,  351, 1062, 1062,  351,
      363,  363, 1062,  363,  363,  363,  363,  363,  365,  365,
     1062,  365,  365,  365,  365,  365,  374, 1062, 1062,  374,
      376,  376, 1062,  376,  376,  376,  376,  376,  378,  378,

     1062,  378,  378,  378,  378,  378,  386, 1062, 1062,  386,
      413, 1062, 1062, 1062, 1062, 1062,  413,  414, 1062, 1062,
      414,  415, 1062, 1062,  415,  433, 1062,  433,  435, 1062,
     1062,  435,  446, 1062,  446,  448, 1062, 1062,  448,  467,
     1062, 1062, 1062, 1062, 1062,  467,  468, 1062, 1062,  468,
      469, 1062, 1062,  469,  477,  477, 1062,  477,  477,  477,
      477,  477,  479,  479, 1062,  479,  479,  479,  479,  479,
      483, 1062, 1062, 1062, 1062,  483,  484, 1062, 1062,  484,
      487,  487, 1062,  487,  487,  487,  487,  487,  489,  489,
     1062,  489,  489,  489,  489,  489,  493, 1062, 1062, 1062,

     1062,  493,  494, 1062, 1062,  494,  512, 1062,  512,  513,
     1062, 1062, 1062, 1062, 1062,  513,  514, 1062, 1062,  514,
      515, 1062, 1062,  515,  524, 1062, 1062, 1062, 1062,  524,
      525, 1062, 1062,  525,  528, 1062, 1062, 1062, 1062,  528,
      529, 1062, 1062,  529,  538,  538, 1062,  538,  538,  538,
      538,  538,  540,  540, 1062,  540,  540,  540,  540,  540,
      548, 1062, 1062,  548,  549, 1062, 1062, 1062, 1062, 1062,
      549,  550, 1062, 1062,  550,  551, 1062, 1062,  551,  557,
     1062, 1062, 1062, 1062,  557,  558, 1062, 1062,  558,  561,
     1062, 1062, 1062, 1062,  561,  562, 1062, 1062,  562,  576,

     1062,  576,  578, 1062, 1062,  578,  579, 1062, 1062, 1062,
     1062, 1062,  579,  580, 1062, 1062,  580,  581, 1062, 1062,
      581,  585, 1062, 1062, 1062, 1062,  585,  586, 1062, 1062,
      586,  589, 1062, 1062, 1062, 1062,  589,  590, 1062, 1062,
      590,  596,  596, 1062,  596,  596,  596,  596,  596,  598,
      598, 1062,  598,  598,  598,  598,  598,  602, 1062, 1062,
     1062, 1062,  602,  603, 1062, 1062,  603,  604, 1062, 1062,
     1062, 1062, 1062,  604,  605, 1062, 1062,  605,  606, 1062,
     1062,  606,  615, 1062, 1062,  615,  616, 1062, 1062, 1062,
     1062,  616,  617, 1062, 1062,  617,  620, 1062, 1062, 1062,

     1062,  620,  621, 1062, 1062,  621,  627, 1062, 1062, 1062,
     1062,  627,  628, 1062, 1062,  628,  629, 1062, 1062, 1062,
     1062, 1062,  629,  630, 1062, 1062,  630,  631, 1062, 1062,
      631,  637, 1062, 1062, 1062, 1062,  637,  638, 1062, 1062,
      638,  641, 1062, 1062, 1062, 1062,  641,  642, 1062, 1062,
      642,  648, 1062, 1062, 1062, 1062,  648,  649, 1062, 1062,
      649,  650, 1062, 1062, 1062, 1062, 1062,  650,  651, 1062,
     1062,  651,  652, 1062, 1062,  652,  658, 1062, 1062, 1062,
     1062,  658,  659, 1062, 1062,  659,  663, 1062, 1062, 1062,
     1062,  663,  664, 1062, 1062,  664,  670, 1062, 1062, 1062,

     1062,  670,  671, 1062, 1062,  671,  672, 1062, 1062, 1062,
     1062, 1062,  672,  673, 1062, 1062,  673,  674, 1062, 1062,
      674,  678, 1062, 1062, 1062, 1062,  678,  679, 1062, 1062,
      679,  685, 1062, 1062, 1062, 1062,  685,  686, 1062, 1062,
      686,  689, 1062, 1062, 1062, 1062,  689,  690, 1062, 1062,
      690,  691, 1062, 1062, 1062, 1062, 1062,  691,  692, 1062,
     1062,  692,  693, 1062, 1062,  693,  698, 1062, 1062, 1062,
     1062,  698,  699, 1062, 1062,  699,  706, 1062, 1062, 1062,
     1062,  706,  707, 1062, 1062,  707,  710, 1062, 1062, 1062,
     1062,  710,  711, 1062, 1062,  711,  712, 1062, 1062, 1062,

     1062, 1062,  712,  713, 1062, 1062,  713,  714, 1062, 1062,
      714,  721, 1062, 1062, 1062, 1062,  721,  722, 1062, 1062,
      722,  730, 1062, 1062, 1062, 1062,  730,  731, 1062, 1062,
      731,  735, 1062, 1062, 1062, 1062,  735,  736, 1062, 1062,
      736,  737, 1062, 1062, 1062, 1062, 1062,  737,  738, 1062,
     1062,  738,  739, 1062, 1062,  739,  747, 1062, 1062, 1062,
     1062,  747,  748, 1062, 1062,  748,  756, 1062, 1062, 1062,
     1062,  756,  757, 1062, 1062,  757,  763, 1062, 1062, 1062,
     1062,  763,  764, 1062, 1062,  764,  765, 1062, 1062, 1062,
     1062, 1062,  765,  766, 1062, 1062,  766,  767, 1062, 1062,

      767,  776, 1062, 1062, 1062, 1062,  776,  777, 1062, 1062,
      777,  785, 1062, 1062, 1062, 1062,  785,  786, 1062, 1062,
      786,  793, 1062, 1062, 1062, 1062,  793,  794, 1062, 1062,
      794,  795, 1062, 1062, 1062, 1062, 1062,  795,  796, 1062,
     1062,  796,  797, 1062, 1062,  797,  806, 1062, 1062, 1062,
     1062,  806,  807, 1062, 1062,  807,  814, 1062, 1062, 1062,
     1062,  814,  815, 1062, 1062,  815,  823, 1062, 1062, 1062,
     1062,  823,  824, 1062, 1062,  824,  825, 1062, 1062, 1062,
     1062, 1062,  825,  826, 1062, 1062,  826,  827, 1062, 1062,
      827,  836, 1062, 1062, 1062, 1062,  836,  837, 1062, 1062,

      837,  842, 1062, 1062, 1062, 1062,  842,  843, 1062, 1062,
      843,  851, 1062, 1062, 1062, 1062,  851,  852, 1062, 1062,
      852,  853, 1062, 1062, 1062, 1062, 1062,  853,  854, 1062,
     1062,  854,  855, 1062, 1062,  855,  863, 1062, 1062, 1062,
     1062,  863,  864, 1062, 1062,  864,  867, 1062, 1062, 1062,
     1062,  867,  868, 1062, 1062,  868,  876, 1062, 1062, 1062,
     1062,  876,  877, 1062, 1062,  877,  878, 1062, 1062, 1062,
     1062, 1062,  878,  879, 1062, 1062,  879,  880, 1062, 1062,
      880,  886, 1062, 1062, 1062, 1062,  886,  887, 1062, 1062,
      887,  889, 1062, 1062, 1062, 1062,  889,  890, 1062, 1062,

      890,  897, 1062, 1062, 1062, 1062,  897,  898, 1062, 1062,
      898,  899, 1062, 1062, 1062, 1062, 1062,  899,  900, 1062,
     1062,  900,  901, 1062, 1062,  901,  905, 1062, 1062, 1062,
     1062,  905,  906, 1062, 1062,  906,  907, 1062, 1062, 1062,
     1062,  907,  908, 1062, 1062,  908,  913, 1062, 1062, 1062,
     1062,  913,  914, 1062, 1062,  914,  915, 1062, 1062, 1062,
     1062, 1062,  915,  916, 1062, 1062,  916,  917, 1062, 1062,
      917,  920, 1062, 1062, 1062, 1062,  920,  921, 1062, 1062,
      921,  922, 1062, 1062, 1062, 1062,  922,  923, 1062, 1062,
      923,  926, 1062, 1062, 1062, 1062,  926,  927, 1062, 1062,

      927,  928, 1062, 1062, 1062, 1062, 1062,  928,  929, 1062,
     1062,  929,  930, 1062, 1062,  930,  932, 1062, 1062, 1062,
     1062,  932,  933, 1062, 1062,  933,  934, 1062, 1062, 1062,
     1062,  934,  935, 1062, 1062,  935,  937, 1062, 1062, 1062,
     1062,  937,  938, 1062, 1062,  938,  939, 1062, 1062, 1062,
     1062, 1062,  939,  940, 1062, 1062,  940,  941, 1062, 1062,
      941,  943, 1062, 1062, 1062, 1062,  943,  944, 1062, 1062,
      944,  945, 1062, 1062, 1062, 1062,  945,  946, 1062, 1062,
      946,  947, 1062, 1062, 1062, 1062,  947,  948, 1062, 1062,
      948,  949, 1062, 1062, 1062, 1062, 1062,  949,  950, 1062,

     1062,  950,  951, 1062, 1062,  951,  953, 1062, 1062, 1062,
     1062,  953,  954, 1062, 1062,  954,  955, 1062, 1062, 1062,
     1062,  955,  956, 1062, 1062,  956,  957, 1062, 1062, 1062,
     1062,  957,  958, 1062, 1062,  958,  959, 1062, 1062, 1062,
     1062, 1062,  959,  960, 1062, 1062,  960,  961, 1062, 1062,
      961,  963, 1062, 1062, 1062, 1062,  963,  964, 1062, 1062,
      964,  965, 1062, 1062, 1062, 1062,  965,  966, 1062, 1062,
      966,  967, 1062, 1062, 1062, 1062,  967,  968, 1062, 1062,
      968,  969, 1062, 1062, 1062, 1062, 1062,  969,  970, 1062,
     1062,  970,  971, 1062, 1062,  971,  973, 1062, 1062, 1062,

     1062,  973,  974, 1062, 1062,  974,  975, 1062, 1062, 1062,
     1062,  975,  976, 1062, 1062,  976,  977, 1062, 1062, 1062,
     1062,  977,  978, 1062, 1062,  978,  979, 1062, 1062, 1062,
     1062, 1062,  979,  980, 1062, 1062,  980,  981, 1062, 1062,
      981,  983, 1062, 1062, 1062, 1062,  983,  984, 1062, 1062,
      984,  985, 1062, 1062, 1062, 1062,  985,  986, 1062, 1062,
      986,  987, 1062, 1062, 1062, 1062,  987,  988, 1062, 1062,
      988,  989, 1062, 1062, 1062, 1062, 1062,  989,  990, 1062,
     1062,  990,  991, 1062, 1062,  991,  993, 1062, 1062, 1062,
     1062,  993,  994, 1062, 1062,  994,  995, 1062, 1062, 1062,

     1062,  995,  996, 1062, 1062,  996,  997, 1062, 1062, 1062,
     1062,  997,  998, 1062, 1062,  998,  999, 1062, 1062, 1062,
     1062, 1062,  999, 1000, 1062, 1062, 1000, 1001, 1062, 1062,
     1001, 1003, 1062, 1062, 1062, 1062, 1003, 1004, 1062, 1062,
     1004, 1005, 1062, 1062, 1062, 1062, 1005, 1006, 1062, 1062,
     1006, 1007, 1062, 1062, 1062, 1062, 1007, 1008, 1062, 1062,
     1008, 1009, 1062, 1062, 1062, 1062, 1062, 1009, 1010, 1062,
     1062, 1010, 1012, 1062, 1062, 1062, 1062, 1012, 1013, 1062,
     1062, 1013, 1014, 1062, 1062, 1062, 1062, 1014, 1015, 1062,
     1062, 1015, 1016, 1062, 1062, 1062, 1062, 1016, 1017, 1062,

     1062, 1017, 1018, 1062, 1062, 1062, 1062, 1062, 1018, 1019,
     1062, 1062, 1019, 1021, 1062, 1062, 1062, 1062, 1021, 1022,
     1062, 1062, 1022, 1023, 1062, 1062, 1062, 1062, 1023, 1024,
     1062, 1062, 1024, 1025, 1062, 1062, 1062, 1062, 1025, 1026,
     1062, 1062, 1026, 1027, 1062, 1062, 1062, 1062, 1062, 1027,
     1029, 1062, 1062, 1062, 1062, 1029, 1030, 1062, 1062, 1030,
     1031, 1062, 1062, 1062, 1062, 1031, 1032, 1062, 1062, 1032,
     1033, 1062, 1062, 1062, 1062, 1033, 1034, 1062, 1062, 1034,
     1035, 1062, 1062, 1062, 1062, 1062, 1035, 1037, 1062, 1062,
     1062, 1062, 1037, 1038, 1062, 1062, 1038, 1039, 1062, 1062,

     1062, 1062, 1039, 1040, 1062, 1062, 1040, 1041, 1062, 1062,
     1062, 1062, 1041, 1042, 1062, 1062, 1042, 1044, 1062, 1062,
     1062, 1062, 1044, 1045, 1062, 1062, 1062, 1062, 1045, 1046,
     1062, 1062, 1062, 1062, 1046, 1047, 1062, 1062, 1047, 1049,
     1062, 1062, 1062, 1062, 1049, 1050, 1062, 1062, 1062, 1062,
     1050, 1051, 1062, 1062, 1062, 1062, 1051, 1052, 1062, 1062,
     1052, 1054, 1062, 1062, 1062, 1062, 1054, 1055, 1062, 1062,
     1055, 1057, 1062, 1062, 1062, 1062, 1057, 1059, 1062, 1062,
     1062, 1062, 1059,    3, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,

     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062
    } ;

static const flex_int16_t yy_chk[10760] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    5,   17,   17,   22,   24,
       43,   44,   22,   24, 1409,  201,   45,  119,   22,   24,
      201,  305,   25,   26, 1408,   24,  305, 1406,   22,   24,

      117,    5,   25,   26,    5, 1404,   22,   24,   43,   44,
       22,   24,   25,   26,   45,  119,   22,   24,    5,   70,
       25,   26,   24,   70,   70,   22,   24,  117, 1401,    5,
       25,   26,    5,   54,   54,   54,  210,  210,  210,   25,
       26,  202,  347,  347,  347,    5,   14,   70, 1396,   14,
       70,   70,  253,   14,   14, 1391,   14,   14,   14,   14,
       14,   14,   14,  253,   14,   14,   14,   19,   28,  202,
       19,   29,   28, 1384,   19,   19,   28,   19,  285,   19,
      253,   29,   28,   19,   33,   19,   19,   19,   33,   19,
      253,   29,   28,   30,  344,  285,   28,   30,   33,   29,

       28,   19,  275,   30,   28,   19,   19, 1376,   33,   29,
       28,  344,   33,   30,  640,  640,   33,   19,   29,   28,
      130,   30,  130,  130,  130,   30,   33,  660,  660,   19,
      275,   30,   19,   19,   20,   33, 1368,   20,  366, 1359,
       30,   20,   20,  366,   20,  286,   20,  286,  286,  286,
       20,  610,   20,   20,   20,   35,   39,   32,   35,   20,
       68,   32,  411,   74,   74,   35,   39,  411,   35,   20,
      610,   32, 1350,  614,   32,   35,   39,   68,   68,   20,
     1340,   32, 1330,   35,   39,   32,   35,   20,   68,   32,
       74,   74,  614,   35,   39,   35,  521,   20,  346,   32,

      349,   32,   35,   39,   68,   68,   20,   21,   32,   37,
       69,   21,   36,   37,   21,  346,  433,  349,   21,   36,
       36,   21,  433,   37,  521,   36,   36,   69,   69, 1320,
       52,   21,   52,   37,   52,   21, 1310,   37,   69,   21,
       36,   37,   21,   52,   52,   52,   21,   36,   36,   21,
      413,   37,   36,   36,   69,   69,   78,   78,   21,   23,
       37,   71,   71,   71,  446,  467,   23,  413,   23,   23,
      446,   38,  676,  676,   38,   38,  560, 1300,   23,   23,
      478,   38,  467,   78,   78,  587,  478,   23,   71,   71,
       71,   38,   84,   84,   23,  483,   23,   23,  251,   38,

      251,  483,   38,   38,  560,   23,   23,   27,   27,   38,
       53,  251,   53,  587,   53,   27,   27,   27,   38,   84,
       84,   27, 1290,   53,   53,   53,  251,   27,  251,   53,
      370,  370,  370,  308,   42,   27,   27,   57,  251,   57,
      488,   57, 1280,   27,   27,   27,  488,  490,   27,  308,
       57,   57,   57,  490,   27,   31,   57,   57,  249,   31,
       42,  308,  249,   42,  493,   75,   31,   31,  513,   31,
      493,   31,   31,  249,   31,  524,  308,   42,  528,   75,
       75,  524,   75,   31,  528,  513,  249,   31,   42, 1270,
      249,   42, 1260,   75,   31,   31,  549,   31,   31,   31,

      249,   31,   34,  256,   42,   34,   75,   75,   48,   75,
       34,   48,   34,  549,  256,   48,   48,   34,   48, 1250,
       48,  120,   34,  120,   48,  120,   48,   48,   48,  588,
       34,  256,   76,   34,  120,  120,  120, 1240,   34, 1230,
       34,  256,  618,   51,   34,   76,   51,   76,   76,   34,
       51,   51,   58,   51,   58,   51,   58,  588,  557,   51,
       76,   51,   51,   51,  557,   58,   58,   58,  619,   59,
      618,   58,   59,   76,   76,   76,   59,   59, 1220,   59,
      561,   59,  382,  382,  382,   59,  561,   59,   59,   59,
       60,   72,   72,   60, 1210,   72,  619,   60,   60, 1200,

       60,  576,   60,  482,  482,  482,   60,  576,   60,   60,
       60,   73,   73,   80,   80,   80,   73, 1190,   72,   72,
      315,   77,   72,   77,  492,  492,  492,   77,   77,   60,
       79,  318,   81, 1180,   79,   79,  315, 1170,   73,   73,
       80,   80,   80,   73,  544,  544,  544,  318,  315,   77,
       82,   77,   82,   82,   77,   77,   60,   61,   79,  318,
       61,   79,   79,  315,   61,   61,  579,   61,   85,   61,
       81,   81,   86,   61,  318,   61,   61,   61,   82,   82,
       82,   61,  604,  579,   85,   85,  639,  629,   86,   86,
      577,   88,  577,  577,  577, 1160,   85,   81,   81,  604,

       86,  522, 1150,   87,  629,   88,   88,   87,   87,   61,
       62,   85,   85,   62,  639,   86,   86,   62,   62,   88,
       62,  585,   62,   90,   90,   90,   62,  585,   62,   62,
       62,   87,   88,   88,   87,   87,   89,   91,  526,   92,
       92,  522,   89,   89,  284,   91,   91, 1061,   62,   94,
       90,   90,   90,   93,   93,  284, 1060,  284,  284,  284,
     1058,  284,   94,   94,   89,   91,   92,   92,  522,   89,
       89, 1056,   91,   91, 1053,   62,   63,   94,  526,   63,
       93,   93,  257,   63,   63,  589,   63,   97,   63,   94,
       94,  589,   63,  257,   63,   63,   63,   95,   95,   96,

       96,   96,   97,   97,   98,  526,  650,   98,   98,   63,
      257,  597,  104,  104,  672,   97,  599,  597, 1048,  691,
      257, 1043,  599,  650,   95,   95,   96,   96,   96,   97,
       97,  672,   98,   99,   98,   98,  691,   63,   64,  104,
      104,   64,   99,   99, 1036,   64,   64,  602,   64,  616,
       64,  106,  106,  602,   64,  616,   64,   64,   64,  112,
      112,   99,  125, 1028,  125,   64,  125, 1020,  105,   99,
       99,  601,  601,  601,  620,  125,  125,  125,  106,  106,
      620,  105,  105,  101,  694,  694,  112,  112,  712,  101,
      101,  101,  102,   64,   65,  102,  105,   65,  102,  102,

     1011,   65,   65,  314,   65,  712,   65,  314,  105,  105,
       65,  101,   65,   65,   65,  103,  101,  101,  101,  314,
      102,  107,  107,  102,  321,  102,  102, 1002,  107,   65,
      992,  314,  103,  103,  108,  314,  108,  108,  982,  627,
      321,  637,  972,  103,  109,  627,  314,  637,  107,  107,
      641,  962,  321,  109,  109,  107,  641,   65,   66,  103,
      103,   66,  108,  108,  108,   66,   66,  321,   66,  110,
       66,  952,  109,  647,   66,  111,   66,   66,   66,  113,
      109,  109,  110,  110,  111,  111,  115,  115,  113,  113,
      114,  114,  114,  116,  116,  146,  146,  110,   66,  147,

      648,  647,  654,  111,  147,  147,  648,  113,  942,  110,
      110,  111,  111,  115,  115,  113,  113,  114,  114,  114,
      116,  116,  146,  146,  936,   66,   67,  147,  931,   67,
      654,  147,  147,   67,   67,  121,   67,  121,   67,  121,
      925,  658,   67,  924,   67,   67,   67,  658,  121,  121,
      121,  149,  149,  123,  121,  123,  124,  123,  124,  668,
      124,  144,  144,  144,   67,   67,  123,  123,  123,  124,
      124,  124,  123,  123,  633,  124,  555,  663,  149,  149,
      331,  919,  145,  663,  918,  145,  145,  668,  144,  144,
      144,   67,   67,   83,   83,  912,  331,   83,  633,  129,

      161,  161,  129,   83,   83,   83,  129,  129,  331,  129,
      145,  129,  145,  145,  480,  129,  555,  129,  129,  129,
      480,   83,   83,  331,  148,   83,  633,  161,  161,  737,
       83,   83,   83,  100,  911,  100,  670,  131,  148,  148,
      131,  100,  670,  555,  131,  131,  737,  131,  100,  131,
      100,  100,  148,  131,  480,  131,  131,  131,  203,  910,
      203,  100,  203,  100,  559,  148,  148,  904,  150,  100,
      611,  203,  203,  203,  150,  150,  100,  100,  100,  128,
      903,  480,  128,  611,  611,  611,  128,  128,  902,  128,
      128,  128,  128,  128,  128,  128,  150,  128,  128,  128,

      132,  150,  150,  132,  559,  709,  709,  132,  132,  613,
      132,  155,  132,  896,  133,  895,  132,  133,  132,  132,
      132,  133,  133,  765,  133,  669,  133,  888,  613,  613,
      133,  559,  133,  133,  133,  132,  135,  152,  675,  135,
      765,  152,  152,  135,  135,  151,  135,  153,  135,  885,
      155,  155,  135,  669,  135,  135,  135,  661,  661,  151,
      151,  153,  153,  132,  134,  152,  675,  134,  152,  152,
      682,  134,  134,  151,  134,  153,  134,  155,  155,  661,
      134,  884,  134,  134,  134,  134,  151,  151,  153,  153,
      154,  625,  167,  167,  678,  156,  883,  157,  682,  684,

      678,  157,  157,  882,  685,  732,  732,  661,  154,  154,
      685,  156,  156,  134,  136,  875,  866,  136,  154,  167,
      167,  136,  136,  156,  136,  157,  136,  684,  157,  157,
      136,  625,  136,  136,  136,  154,  154,  158,  156,  156,
      158,  687,  158,  136,  158,  158,  688,  158,  412,  158,
      168,  168,  865,  158,  689,  158,  158,  158,  625,  159,
      689,  412,  412,  412,  698,  412,  159,  159,  646,  687,
      698,  136,  137,  163,  688,  137,  862,  168,  168,  137,
      137,  160,  137,  163,  137,  169,  169,  159,  137,  162,
      137,  137,  137,  159,  159,  160,  160,  163,  163,  162,

      162,  165,  165,  165,  137,  861,  164,  634,  646,  160,
      706,  163,  169,  169,  635,  653,  706,  162,  702,  860,
      164,  164,  160,  160,  163,  163,  162,  162,  165,  165,
      165,  634,  137,  138,  164,  646,  138,  841,  635,  653,
      138,  138,  166,  138,  655,  138,  702,  164,  164,  138,
      170,  138,  138,  138,  166,  166,  172,  172,  138,  634,
      840,  656,  795,  710,  170,  170,  635,  653,  655,  710,
      166,  721,  839,  171,  171,  171,  703,  721,  170,  795,
      173,  166,  166,  172,  172,  656,  138,  139,  173,  173,
      139,  170,  170,  835,  139,  139,  655,  139,  834,  139,

      171,  171,  171,  139,  703,  139,  139,  139,  173,  813,
      174,  139,  812,  656,  174,  173,  173,  175,  175,  730,
      805,  181,  735,  174,  747,  730,  174,  174,  735,  176,
      747,  784,  775,  683,  181,  181,  176,  176,  174,  139,
      140,  746,  174,  140,  175,  175,  701,  140,  140,  181,
      140,  174,  140,  174,  174,  683,  140,  176,  140,  140,
      140,  181,  181,  176,  176,  140,  205,  177,  701,  205,
      825,  177,  177,  205,  205,  178,  205,  179,  205,  720,
      178,  178,  205,  683,  205,  205,  205,  825,  697,  704,
      677,  179,  179,  140,  141,  177,  701,  141,  177,  177,

      657,  141,  141,  178,  141,  179,  141,  178,  178,  636,
      141,  180,  141,  141,  141,  180,  180,  704,  179,  179,
      182,  182,  183,  183,  184,  184,  184,  185,  185,  615,
      186,  612,  141,  609,  190,  190,  600,  186,  186,  180,
      598,  596,  180,  180,  574,  705,  187,  182,  182,  183,
      183,  184,  184,  184,  185,  185,  187,  187,  186,  141,
      142,  190,  190,  142,  186,  186,  573,  142,  142,  336,
      142,  853,  142,  705,  187,  189,  142,  191,  142,  142,
      142,  188,  337,  187,  187,  336,  188,  188,  853,  189,
      189,  191,  191,  192,  192,  193,  193,  336,  337,  142,

      756,  195,  195,  189,  569,  191,  756,  556,  708,  188,
      337,  545,  336,  188,  188,  540,  189,  189,  191,  191,
      192,  192,  193,  193,  194,  337,  142,  143,  195,  195,
      143,  194,  194,  261,  143,  143,  708,  143,  538,  143,
      198,  196,  197,  143,  261,  143,  143,  143,  196,  196,
      199,  199,  194,  197,  197,  198,  198,  717,  194,  194,
      520,  261,  719,  510,  662,  662,  143,  143,  198,  196,
      197,  261,  878,  763,  724,  196,  196,  199,  199,  763,
      197,  197,  198,  198,  509,  717,  662,  491,  207,  878,
      719,  207,  899,  143,  143,  207,  207,  208,  207,  208,

      207,  208,  724,  718,  207,  725,  207,  207,  207,  899,
      208,  208,  208,  209,  662,  209,  212,  209,  212,  489,
      212,  915,  487,  481,  479,  718,  209,  209,  209,  212,
      212,  212,  209,  725,  776,  212,  212,  213,  915,  213,
      776,  213,  785,  680,  680,  239,  477,  239,  785,  239,
      213,  213,  213,  718,  214,  316,  213,  214,  239,  239,
      239,  214,  214,  316,  214,  680,  214,  726,  215,  444,
      214,  215,  214,  214,  214,  215,  215,  443,  215,  316,
      215,  439,  431,  316,  215,  928,  215,  215,  215,  216,
      430,  316,  216,  680,  793,  726,  216,  216,  806,  216,

      793,  216,  928,  426,  806,  216,  316,  216,  216,  216,
      220,  727,  383,  220,  378,  376,  371,  220,  220,  814,
      220,  216,  220,  728,  222,  814,  220,  222,  220,  220,
      220,  222,  222,  252,  222,  252,  222,  265,  365,  727,
      222,  432,  222,  222,  222,  363,  252,  432,  265,  216,
      217,  728,  432,  217,  432,  432,  432,  217,  217,  729,
      217,  252,  217,  252,  223,  265,  217,  223,  217,  217,
      217,  223,  223,  252,  223,  265,  223,  742,  230,  723,
      223,  230,  223,  223,  223,  230,  230,  729,  230,  345,
      230,  343,  743,  341,  230,  217,  230,  230,  230,  231,

      311,  723,  231,  741,  247,  742,  231,  231,  317,  231,
      247,  231,  317,  310,  304,  231,  303,  231,  231,  231,
      743,  247,  217,  218,  283,  741,  218,  282,  317,  723,
      218,  218,  247,  218,  278,  218,  317,  211,  247,  218,
      317,  218,  218,  218,  234,  681,  681,  234,  247,  206,
      204,  234,  234,  741,  234,  317,  234,  218,  238,  744,
      234,  238,  234,  234,  234,  238,  238,  681,  238,  254,
      238,  254,  200,  127,  238,  823,  238,  238,  238,  695,
      695,  823,  254,  126,  836,  218,  219,  744,  122,  219,
      836,  118,   56,  219,  219,  681,  219,  254,  219,  254,

      244,  695,  219,  244,  219,  219,  219,  244,  244,  254,
      244,  219,  244,   49,  244,   47,  244,  842,  244,  244,
      244,  322,  851,  842,   46,  248,  863,  248,  851,  695,
      322,   18,  863,  246,   15,   12,  248,  322,  246,  219,
      221,  248,  745,  221,  246,  250,    9,  221,  221,  322,
      221,  250,  221,  248,  258,  248,  221,  322,  221,  221,
      221,  246,  250,  248,  322,  258,  246,  258,  248,  221,
      745,  246,  255,  250,  255,  267,    7,  696,  696,  250,
        6,    3,  258,    0,  867,  255,  267,  259,    0,  250,
      867,    0,  258,  259,  258,  749,  262,  221,  224,  696,

      255,  224,  255,  267,  259,  224,  224,  262,  224,  262,
      224,  260,  255,  267,  224,  259,  224,  224,  224,  264,
        0,  259,  260,  749,  262,  260,  264,  696,  700,  700,
      264,  259,  750,  263,  262,  876,  262,  224,  263,  260,
        0,  876,  266,    0,  263,  715,  715,  264,  266,  260,
      700,  268,  260,    0,  264,    0,    0,  264,    0,  266,
      750,  263,  268,  269,  224,  225,  263,  715,  225,  270,
      266,  263,  225,  225,  269,  225,  266,  225,  700,  268,
      270,  225,    0,  225,  225,  225,  266,  272,  273,  268,
      271,  269,  271,    0,    0,  715,  751,  270,  272,  273,

      752,  269,    0,  271,    0,  225,  327,  270,  276,    0,
      276,  327,  276,  886,  939,  272,  273,    0,  271,  886,
      271,  276,  276,  276,  751,  272,  273,  327,  752,  889,
      271,  939,  225,  226,  327,  889,  226,  716,  716,  327,
      226,  226,  277,  226,  277,  226,  277,  733,  733,  226,
        0,  226,  226,  226,  327,  277,  277,  277,  753,  716,
      279,  277,  279,  280,  279,  280,    0,  280,    0,  733,
        0,  226,  754,  279,  279,  279,  280,  280,  280,  279,
      279,  281,  280,  281,  755,  281,  753,  716,  734,  734,
        0,    0,  740,  740,  281,  281,  281,  733,  226,  227,

      754,    0,  227,    0,    0,    0,  227,  227,  760,  227,
      734,  227,  755,  287,  740,  227,  287,  227,  227,  227,
      287,  287,  897,  287,    0,  287,    0,  288,  897,  287,
      288,  287,  287,  287,  288,  288,  760,  288,  734,  288,
      227,  290,  740,  288,  290,  288,  288,  288,  290,  290,
      309,  290,  309,  290,  309,  758,  758,  290,    0,  290,
      290,  290,  949,  309,  309,  309,  905,  227,  228,    0,
        0,  228,  905,  759,  759,  228,  228,  758,  228,  949,
      228,  762,  291,    0,  228,  291,  228,  228,  228,  291,
      291,  761,  291,  959,  291,  759,  294,  228,  291,  294,

      291,  291,  291,  294,  294,  758,  294,  319,  294,  762,
      959,  319,  294,  761,  294,  294,  294,  342,  907,  342,
        0,  342,  913,  759,  907,  228,  229,  319,  913,  229,
      342,  342,  342,  229,  229,  319,  229,  769,  229,  319,
      295,  761,  229,  295,  229,  229,  229,  295,  295,  920,
      295,  922,  295,  768,  319,  920,  295,  922,  295,  295,
      295,  307,  323,  770,  307,  769,  229,  323,  307,  307,
      368,  307,  368,  307,  368,  768,  926,  307,  323,  307,
      307,  307,  926,  368,  368,  368,    0,    0,    0,    0,
      323,  770,  340,  229,  232,  323,    0,  232,    0,    0,

        0,  232,  232,  768,  232,  323,  232,    0,  313,    0,
      232,  313,  232,  232,  232,  313,  313,  324,  313,  320,
      313,  340,  320,  324,  313,  325,  313,  313,  313,  445,
      232,    0,    0,  324,    0,  445,  325,  340,  320,    0,
      445,  325,  445,  445,  445,  324,    0,  320,  329,  340,
      320,  324,  328,  325,  771,    0,  329,  328,  232,  233,
      324,  772,  233,  325,  340,  320,  233,  233,  325,  233,
      326,  233,  329,  328,  330,  233,  329,  233,  233,  233,
      328,  326,  771,  330,  329,  328,  326,  333,  332,  772,
      330,  773,  774,  332,    0,  969,  333,  233,  326,  329,

      328,  778,  330,  333,    0,    0,  779,    0,  326,  332,
      330,  334,  969,  326,  780,  333,  332,  330,  781,  773,
      774,  332,  334,  333,  233,  235,    0,  334,  235,  778,
      333,  335,  235,  235,  779,  235,  332,  235,    0,  334,
      335,  235,  780,  235,  235,  235,  781,  335,    0,  334,
      338,  783,  338,  350,  334,  789,  350,  235,    0,  335,
      350,  350,  369,  350,  369,  350,  369,  335,  338,  350,
      788,  350,  350,  350,  335,  369,  369,  369,  338,  783,
      338,  369,    0,  789,  790,  235,  236,    0,  236,  236,
      236,  236,  788,  236,  236,  338,  236,    0,  236,  236,

      236,  236,  236,  339,  236,  236,  236,  237,  339,    0,
      237,  791,  790,  792,  237,  237,  798,  237,    0,  237,
      788,    0,  932,  237,  339,  237,  237,  237,  932,  799,
      351,  339,    0,  351,  787,  787,  339,  351,  351,  791,
      351,  792,  351,    0,  798,  800,  351,  237,  351,  351,
      351,  339,  358,  801,    0,  358,  787,  799,  802,  358,
      358,  934,  358,  937,  358,    0,    0,  934,  358,  937,
      358,  358,  358,  800,  237,  240,  803,    0,  240,    0,
        0,  801,  240,  240,  787,  240,  802,  240,    0,  359,
      804,  240,  359,  240,  240,  240,  359,  359,    0,  359,

      240,  359,  808,  362,  803,  359,  362,  359,  359,  359,
      362,  362,  373,  362,  373,  362,  373,    0,  804,  362,
        0,  362,  362,  362,  809,  373,  373,  373,  240,  241,
      808,  373,  241,    0,  943,    0,  241,  241,  810,  241,
      943,  241,    0,  364,    0,  241,  364,  241,  241,  241,
      364,  364,  809,  364,    0,  364,  380,    0,  380,  364,
      380,  364,  364,  364,    0,  367,  810,  241,  367,  380,
      380,  380,  367,  367,  381,  367,  381,  367,  381,  979,
        0,  367,  816,  367,  367,  367,  523,  381,  381,  381,
      817,  945,  523,  381,  241,  242,  979,  945,  242,  523,

      523,  523,  242,  242,  816,  242,  372,  242,  372,    0,
      372,  242,    0,  242,  242,  242,  818,  947,  817,  372,
      372,  372,  953,  947,  242,  372,  372,  374,  953,  819,
      374,  820,  816,    0,  374,  374,  385,  374,  385,  374,
      385,    0,  821,  374,  818,  374,  374,  374,  822,  385,
      385,  385,  242,  243,    0,  385,  243,  819,  955,  820,
      243,  243,  957,  243,  955,  243,    0,    0,  957,  243,
      821,  243,  243,  243,  377,  828,  822,  377,    0,    0,
      989,  377,  377,  829,  377,  830,  377,  243,  379,  831,
      377,  379,  377,  377,  377,  379,  379,  989,  379,    0,

      379,    0,  386,  828,  379,  386,  379,  379,  379,  386,
      386,  829,  386,  830,  386,  243,  245,  831,  386,  245,
      386,  386,  386,  245,  245,  384,  245,  384,  245,  384,
        0,    0,  245,    0,  245,  245,  245,  833,  384,  384,
      384,  838,  844,  245,  384,  384,    0,  845,  390,  846,
      847,  390,  848,    0,  245,  390,  390,    0,  390,  424,
      390,  424,    0,  424,  390,  833,  390,  390,  390,  838,
      844,  245,  424,  424,  424,  845,  849,  846,  847,  850,
      848,  245,  274,    0,  274,  274,  274,  274,  856,  274,
      274,  999,  274,  963,  274,  274,  274,  274,  274,  963,

      274,  274,  274,  289,  849,    0,  289,  850,  999, 1009,
      289,  289,  857,  289,  858,  289,  856,  396,  869,  289,
      396,  289,  289,  289,  396,  396, 1009,  396,    0,  396,
        0,  398,  870,  396,  398,  396,  396,  396,  398,  398,
      857,  398,  858,  398,  289,  402,  869,  398,  402,  398,
      398,  398,  402,  402,  425,  402,  425,  402,  425,    0,
      870,  402,    0,  402,  402,  402, 1018,  425,  425,  425,
      965,  289,  292,  425,    0,  292,  965,  871,    0,  292,
      292,  872,  292, 1018,  292,  429,    0,  429,  292,  429,
      292,  292,  292,  292,  404,  874,    0,  404,  429,  429,

      429,  404,  404,  881,  404,  871,  404,  891,  408,  872,
      404,  408,  404,  404,  404,  408,  408,  892,  408,  893,
      408,  292,  293,  874,  408,  293,  408,  408,  408,  293,
      293,  881,  293,  967,  293,  891,    0, 1027,  293,  967,
      293,  293,  293,  410,  909,  892,  410,  893,  410, 1035,
      410,  410,  973,  410, 1027,  410,  293,  414,  973,  410,
      414,  410,  410,  410,  414,  414, 1035,  414,    0,  414,
        0,  415,  909,  414,  415,  414,  414,  414,  415,  415,
      975,  415,    0,  415,  293,  296,  975,  415,  296,  415,
      415,  415,  296,  296,  977,  296,    0,  296,    0,  417,

      977,  296,  417,  296,  296,  296,  417,  417,  983,  417,
        0,  417,    0,  422,  983,  417,  422,  417,  417,  417,
      422,  422,  985,  422,    0,  422,  296,  435,  985,  422,
      435,  422,  422,  422,  435,  435,  427,  435,  427,  435,
      427,    0,  987,  435,    0,  435,  435,  435,  987,  427,
      427,  427,  993,  296,  297,  427,  427,  297,  993,    0,
        0,  297,  297,    0,  297,  428,  297,  428,    0,  428,
      297,    0,  297,  297,  297,    0,  995,  297,  428,  428,
      428,  437,  995,  437,  428,  437,    0,  997,  438,    0,
      438, 1003,  438,  997,  437,  437,  437, 1003, 1005,    0,

        0,  438,  438,  438, 1005,  297,  298,  438,    0,  298,
        0,    0,    0,  298,  298,  440,  298,  440,  298,  440,
        0, 1007,  298,    0,  298,  298,  298, 1007,  440,  440,
      440,    0, 1012,    0,  440,  440, 1014,  441, 1012,  441,
      298,  441, 1014, 1016,  442,    0,  442, 1021,  442, 1016,
      441,  441,  441, 1021,    0, 1023,  441,  442,  442,  442,
      466, 1023,  466,    0,  466, 1025,    0,    0,  298,  299,
        0, 1025,  299,  466,  466,  466,  299,  299, 1029,  299,
        0,  299,    0,  448, 1029,  299,  448,  299,  299,  299,
      448,  448,    0,  448,    0,  448,  476,    0,  476,  448,

      476,  448,  448,  448,  299,  452,    0,    0,  452,  476,
      476,  476,  452,  452, 1031,  452,    0,  452,    0,  454,
     1031,  452,  454,  452,  452,  452,  454,  454, 1033,  454,
        0,  454,  299,  300, 1033,  454,  300,  454,  454,  454,
      300,  300, 1037,  300,    0,  300,    0,  455, 1037,  300,
      455,  300,  300,  300,  455,  455, 1039,  455, 1041,  455,
        0,    0, 1039,  455, 1041,  455,  455,  455,  459,    0,
        0,  459,    0,  300,    0,  459,  459,  486,  459,  486,
      459,  486,    0,  527,  459,    0,  459,  459,  459,  527,
      486,  486,  486, 1044,    0,    0,  527,  527,  527, 1044,

      300,  301,    0,    0,  301,    0, 1045,    0,  301,  301,
     1046,  301, 1045,  301,    0,  468, 1046,  301,  468,  301,
      301,  301,  468,  468, 1049,  468, 1050,  468,    0,    0,
     1049,  468, 1050,  468,  468,  468,  469,    0,    0,  469,
        0,  301,    0,  469,  469,  508,  469,  508,  469,  508,
        0,  575,  469,    0,  469,  469,  469,  575,  508,  508,
      508, 1051,  575,    0,  575,  575,  575, 1051,  301,  302,
        0,    0,  302,    0, 1054,    0,  302,  302, 1057,  302,
     1054,  302,    0,  470, 1057,  302,  470,  302,  302,  302,
      470,  470,    0,  470,    0,  470,    0,  471,  302,  470,

      471,  470,  470,  470,  471,  471, 1059,  471,    0,  471,
        0,    0, 1059,  471,  302,  471,  471,  471,    0,    0,
      484,    0,    0,  484,    0,    0,  302,  484,  484,    0,
      484,    0,  484,  542,    0,  542,  484,  542,  484,  484,
      484,  302,  306,    0,    0,  306,  542,  542,  542,  306,
      306,    0,  306,  306,  306,  306,  306,  306,  306,    0,
      306,  306,  306,  312,    0,    0,  312,    0,    0,    0,
      312,  312,    0,  312,  312,  312,  312,  312,  312,  312,
        0,  312,  312,  312,  352,    0,    0,  352,    0,    0,
        0,  352,  352,    0,  352,    0,  352,    0,  485,    0,

      352,  485,  352,  352,  352,  485,  485,    0,  485,    0,
      485,    0,    0,    0,  485,    0,  485,  485,  485,  494,
        0,    0,  494,    0,  352,    0,  494,  494,  543,  494,
      543,  494,  543,    0,    0,  494,    0,  494,  494,  494,
        0,  543,  543,  543,    0,    0,    0,  543,    0,    0,
        0,  352,  353,    0,    0,  353,    0,    0,    0,  353,
      353,    0,  353,    0,  353,    0,    0,    0,  353,    0,
      353,  353,  353,  499,    0,    0,  499,    0,    0,    0,
      499,  499,    0,  499,    0,  499,  353,  500,    0,  499,
      500,  499,  499,  499,  500,  500,    0,  500,    0,  500,

        0,  502,    0,  500,  502,  500,  500,  500,  502,  502,
        0,  502,    0,  502,  353,  354,    0,  502,  354,  502,
      502,  502,  354,  354,    0,  354,    0,  354,  567,    0,
      567,  354,  567,  354,  354,  354,  354,  505,    0,    0,
      505,  567,  567,  567,  505,  505,    0,  505,    0,  505,
        0,  506,    0,  505,  506,  505,  505,  505,  506,  506,
        0,  506,    0,  506,  354,  355,    0,  506,  355,  506,
      506,  506,  355,  355,    0,  355,    0,  355,    0,  512,
        0,  355,  512,  355,  355,  355,  512,  512,  355,  512,
        0,  512,    0,  514,    0,  512,  514,  512,  512,  512,

      514,  514,    0,  514,    0,  514,    0,    0,  626,  514,
        0,  514,  514,  514,  626,    0,  355,  356,    0,    0,
      356,  626,  626,  626,  356,  356,    0,  356,    0,  356,
        0,  515,    0,  356,  515,  356,  356,  356,  515,  515,
        0,  515,    0,  515,    0,    0,    0,  515,    0,  515,
      515,  515,  517,    0,    0,  517,    0,  356,    0,  517,
      517,  546,  517,  546,  517,  546,    0,    0,  517,    0,
      517,  517,  517,    0,  546,  546,  546,    0,    0,    0,
      546,  546,    0,    0,  356,  357,    0,    0,  357,    0,
        0,    0,  357,  357,    0,  357,    0,  357,    0,  525,

        0,  357,  525,  357,  357,  357,  525,  525,    0,  525,
        0,  525,    0,    0,    0,  525,    0,  525,  525,  525,
      529,    0,    0,  529,    0,  357,    0,  529,  529,  547,
      529,  547,  529,  547,    0,    0,  529,    0,  529,  529,
      529,    0,  547,  547,  547,    0,    0,    0,  547,    0,
        0,    0,  357,  360,    0,    0,  360,    0,    0,    0,
      360,  360,    0,  360,    0,  360,    0,  531,    0,  360,
      531,  360,  360,  360,  531,  531,    0,  531,    0,  531,
        0,  533,    0,  531,  533,  531,  531,  531,  533,  533,
        0,  533,  360,  533,    0,  534,    0,  533,  534,  533,

      533,  533,  534,  534,    0,  534,    0,  534,    0,    0,
        0,  534,    0,  534,  534,  534,    0,    0,    0,  360,
      361,    0,    0,  361,    0,    0,    0,  361,  361,    0,
      361,    0,  361,    0,  537,    0,  361,  537,  361,  361,
      361,  537,  537,    0,  537,    0,  537,    0,    0,    0,
      537,    0,  537,  537,  537,  539,    0,    0,  539,    0,
        0,    0,  539,  539,    0,  539,  361,  539,    0,  541,
        0,  539,  541,  539,  539,  539,  541,  541,    0,  541,
        0,  541,    0,    0,    0,  541,    0,  541,  541,  541,
        0,    0,    0,  361,  375,    0,    0,  375,    0,    0,

        0,  375,  375,    0,  375,    0,  375,    0,  548,    0,
      375,  548,  375,  375,  375,  548,  548,    0,  548,    0,
      548,  572,    0,  572,  548,  572,  548,  548,  548,  375,
      550,    0,    0,  550,  572,  572,  572,  550,  550,    0,
      550,    0,  550,    0,  551,    0,  550,  551,  550,  550,
      550,  551,  551,    0,  551,    0,  551,  375,  387,    0,
      551,  387,  551,  551,  551,  387,  387,    0,  387,    0,
      387,    0,  552,    0,  387,  552,  387,  387,  387,  552,
      552,    0,  552,  387,  552,    0,  558,    0,  552,  558,
      552,  552,  552,  558,  558,  568,  558,  568,  558,  568,

        0,    0,  558,    0,  558,  558,  558,    0,  568,  568,
      568,  387,  388,    0,  568,  388,    0,    0,    0,  388,
      388,    0,  388,    0,  388,    0,  562,    0,  388,  562,
      388,  388,  388,  562,  562,  570,  562,  570,  562,  570,
        0,    0,  562,    0,  562,  562,  562,    0,  570,  570,
      570,    0,  388,    0,  570,  570,  571,    0,  571,  595,
      571,  595,    0,  595,    0,    0,    0,    0,    0,  571,
      571,  571,  595,  595,  595,  571,    0,    0,    0,  388,
      389,    0,    0,  389,    0,    0,    0,  389,  389,    0,
      389,    0,  389,    0,    0,    0,  389,    0,  389,  389,

      389,  578,    0,    0,  578,    0,    0,    0,  578,  578,
        0,  578,  389,  578,    0,  580,    0,  578,  580,  578,
      578,  578,  580,  580,    0,  580,    0,  580,    0,    0,
        0,  580,    0,  580,  580,  580,    0,    0,    0,    0,
      389,  391,    0,    0,  391,    0,    0,    0,  391,  391,
        0,  391,    0,  391,    0,  581,    0,  391,  581,  391,
      391,  391,  581,  581,    0,  581,    0,  581,    0,    0,
        0,  581,    0,  581,  581,  581,    0,  586,    0,  391,
      586,    0,    0,    0,  586,  586,    0,  586,    0,  586,
        0,    0,    0,  586,    0,  586,  586,  586,    0,    0,

        0,    0,    0,    0,    0,    0,  391,  392,    0,    0,
      392,    0,    0,    0,  392,  392,    0,  392,    0,  392,
        0,    0,    0,  392,    0,  392,  392,  392,  392,  590,
        0,    0,  590,    0,    0,    0,  590,  590,    0,  590,
        0,  590,    0,  593,    0,  590,  593,  590,  590,  590,
      593,  593,    0,  593,    0,  593,  392,  393,    0,  593,
      393,  593,  593,  593,  393,  393,    0,  393,    0,  393,
        0,  603,    0,  393,  603,  393,  393,  393,  603,  603,
        0,  603,    0,  603,    0,  605,    0,  603,  605,  603,
      603,  603,  605,  605,    0,  605,    0,  605,    0,    0,

        0,  605,  393,  605,  605,  605,  606,    0,    0,  606,
        0,    0,    0,  606,  606,    0,  606,    0,  606,    0,
        0,    0,  606,    0,  606,  606,  606,    0,    0,  393,
      394,    0,    0,  394,    0,    0,    0,  394,  394,    0,
      394,    0,  394,    0,  608,    0,  394,  608,  394,  394,
      394,  608,  608,    0,  608,    0,  608,    0,    0,    0,
      608,    0,  608,  608,  608,  617,    0,    0,  617,    0,
      394,    0,  617,  617,    0,  617,    0,  617,    0,    0,
        0,  617,    0,  617,  617,  617,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  394,  395,    0,

        0,  395,    0,    0,    0,  395,  395,    0,  395,    0,
      395,    0,  621,    0,  395,  621,  395,  395,  395,  621,
      621,    0,  621,    0,  621,    0,    0,    0,  621,    0,
      621,  621,  621,    0,  628,    0,  395,  628,    0,    0,
        0,  628,  628,    0,  628,    0,  628,    0,    0,    0,
      628,    0,  628,  628,  628,    0,    0,    0,    0,    0,
        0,    0,    0,  395,  397,    0,    0,  397,    0,    0,
        0,  397,  397,    0,  397,    0,  397,    0,  630,    0,
      397,  630,  397,  397,  397,  630,  630,    0,  630,    0,
      630,    0,    0,    0,  630,    0,  630,  630,  630,  397,

      631,    0,    0,  631,    0,    0,    0,  631,  631,    0,
      631,    0,  631,    0,  632,    0,  631,  632,  631,  631,
      631,  632,  632,    0,  632,    0,  632,  397,  399,    0,
      632,  399,  632,  632,  632,  399,  399,    0,  399,    0,
      399,    0,  638,    0,  399,  638,  399,  399,  399,  638,
      638,    0,  638,    0,  638,    0,  642,    0,  638,  642,
      638,  638,  638,  642,  642,    0,  642,    0,  642,  399,
      649,    0,  642,  649,  642,  642,  642,  649,  649,    0,
      649,    0,  649,    0,    0,    0,  649,    0,  649,  649,
      649,    0,    0,    0,    0,    0,  399,  400,    0,    0,

      400,    0,    0,    0,  400,  400,    0,  400,    0,  400,
        0,    0,    0,  400,    0,  400,  400,  400,    0,  651,
        0,    0,  651,    0,    0,    0,  651,  651,    0,  651,
      400,  651,    0,  652,    0,  651,  652,  651,  651,  651,
      652,  652,    0,  652,    0,  652,    0,    0,    0,  652,
        0,  652,  652,  652,    0,    0,    0,    0,  400,  401,
        0,    0,  401,    0,    0,    0,  401,  401,    0,  401,
        0,  401,    0,  659,    0,  401,  659,  401,  401,  401,
      659,  659,    0,  659,    0,  659,    0,    0,    0,  659,
        0,  659,  659,  659,  664,    0,    0,  664,    0,  401,

        0,  664,  664,    0,  664,    0,  664,    0,    0,    0,
      664,    0,  664,  664,  664,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  401,  403,    0,    0,
      403,    0,    0,    0,  403,  403,    0,  403,    0,  403,
        0,  665,    0,  403,  665,  403,  403,  403,  665,  665,
        0,  665,    0,  665,    0,    0,    0,  665,    0,  665,
      665,  665,  403,  666,    0,    0,  666,    0,    0,    0,
      666,  666,    0,  666,    0,  666,    0,  667,    0,  666,
      667,  666,  666,  666,  667,  667,    0,  667,    0,  667,
      403,  405,    0,  667,  405,  667,  667,  667,  405,  405,

        0,  405,    0,  405,    0,  671,    0,  405,  671,  405,
      405,  405,  671,  671,  405,  671,    0,  671,    0,  673,
        0,  671,  673,  671,  671,  671,  673,  673,    0,  673,
        0,  673,    0,    0,    0,  673,    0,  673,  673,  673,
        0,    0,  405,  406,    0,    0,  406,    0,    0,    0,
      406,  406,    0,  406,    0,  406,    0,    0,    0,  406,
        0,  406,  406,  406,  674,    0,    0,  674,    0,    0,
        0,  674,  674,    0,  674,    0,  674,  406,  679,    0,
      674,  679,  674,  674,  674,  679,  679,    0,  679,    0,
      679,    0,  686,    0,  679,  686,  679,  679,  679,  686,

      686,    0,  686,    0,  686,  406,  407,    0,  686,  407,
      686,  686,  686,  407,  407,    0,  407,    0,  407,    0,
        0,    0,  407,    0,  407,  407,  407,  690,    0,    0,
      690,    0,    0,    0,  690,  690,    0,  690,    0,  690,
      407,  692,    0,  690,  692,  690,  690,  690,  692,  692,
        0,  692,    0,  692,    0,  693,    0,  692,  693,  692,
      692,  692,  693,  693,    0,  693,    0,  693,  407,  409,
        0,  693,  409,  693,  693,  693,  409,  409,    0,  409,
        0,  409,    0,  699,    0,  409,  699,  409,  409,  409,
      699,  699,    0,  699,    0,  699,    0,  707,    0,  699,

      707,  699,  699,  699,  707,  707,    0,  707,    0,  707,
        0,  409,    0,  707,    0,  707,  707,  707,    0,    0,
        0,    0,    0,    0,    0,  711,    0,    0,  711,    0,
        0,    0,  711,  711,    0,  711,    0,  711,  409,  416,
        0,  711,  416,  711,  711,  711,  416,  416,    0,  416,
        0,  416,    0,  713,    0,  416,  713,  416,  416,  416,
      713,  713,    0,  713,  416,  713,    0,  714,    0,  713,
      714,  713,  713,  713,  714,  714,    0,  714,    0,  714,
        0,    0,    0,  714,    0,  714,  714,  714,    0,    0,
        0,    0,  416,  418,    0,    0,  418,    0,    0,    0,

      418,  418,    0,  418,    0,  418,    0,    0,    0,  418,
        0,  418,  418,  418,  722,    0,    0,  722,    0,    0,
        0,  722,  722,    0,  722,  418,  722,    0,  731,    0,
      722,  731,  722,  722,  722,  731,  731,    0,  731,    0,
      731,    0,    0,    0,  731,    0,  731,  731,  731,    0,
        0,    0,    0,  418,  419,    0,    0,  419,    0,    0,
        0,  419,  419,    0,  419,    0,  419,    0,  736,    0,
      419,  736,  419,  419,  419,  736,  736,    0,  736,    0,
      736,    0,    0,    0,  736,    0,  736,  736,  736,  738,
        0,    0,  738,    0,  419,    0,  738,  738,    0,  738,

        0,  738,    0,    0,    0,  738,    0,  738,  738,  738,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  419,  420,    0,    0,  420,    0,    0,    0,  420,
      420,    0,  420,    0,  420,    0,  739,    0,  420,  739,
      420,  420,  420,  739,  739,    0,  739,    0,  739,    0,
        0,    0,  739,    0,  739,  739,  739,  420,  748,    0,
        0,  748,    0,    0,    0,  748,  748,    0,  748,    0,
      748,    0,  757,    0,  748,  757,  748,  748,  748,  757,
      757,    0,  757,    0,  757,  420,  421,    0,  757,  421,
      757,  757,  757,  421,  421,    0,  421,    0,  421,    0,

      764,    0,  421,  764,  421,  421,  421,  764,  764,    0,
      764,  421,  764,    0,  766,    0,  764,  766,  764,  764,
      764,  766,  766,    0,  766,    0,  766,    0,    0,    0,
      766,    0,  766,  766,  766,    0,    0,    0,    0,  421,
      423,    0,    0,  423,    0,    0,    0,  423,  423,    0,
      423,    0,  423,    0,    0,    0,  423,    0,  423,  423,
      423,  423,  767,    0,    0,  767,    0,    0,    0,  767,
      767,    0,  767,    0,  767,    0,  777,    0,  767,  777,
      767,  767,  767,  777,  777,    0,  777,    0,  777,  423,
      434,    0,  777,  434,  777,  777,  777,  434,  434,    0,

      434,    0,  434,  434,  434,  434,  434,    0,  434,  434,
      434,  436,    0,    0,  436,    0,    0,    0,  436,  436,
        0,  436,    0,  436,    0,    0,    0,  436,    0,  436,
      436,  436,  786,    0,    0,  786,    0,    0,    0,  786,
      786,    0,  786,    0,  786,  436,  794,    0,  786,  794,
      786,  786,  786,  794,  794,    0,  794,    0,  794,    0,
      796,    0,  794,  796,  794,  794,  794,  796,  796,    0,
      796,    0,  796,  436,  447,    0,  796,  447,  796,  796,
      796,  447,  447,    0,  447,    0,  447,  447,  447,  447,
      447,    0,  447,  447,  447,  449,    0,    0,  449,    0,

        0,    0,  449,  449,    0,  449,    0,  449,    0,    0,
        0,  449,    0,  449,  449,  449,  797,    0,    0,  797,
        0,    0,    0,  797,  797,    0,  797,    0,  797,  449,
      807,    0,  797,  807,  797,  797,  797,  807,  807,    0,
      807,    0,  807,    0,  815,    0,  807,  815,  807,  807,
      807,  815,  815,    0,  815,    0,  815,  449,  450,    0,
      815,  450,  815,  815,  815,  450,  450,    0,  450,    0,
      450,    0,  824,    0,  450,  824,  450,  450,  450,  824,
      824,    0,  824,  450,  824,    0,  826,    0,  824,  826,
      824,  824,  824,  826,  826,    0,  826,    0,  826,    0,

        0,    0,  826,    0,  826,  826,  826,    0,    0,    0,
        0,  450,  451,    0,    0,  451,    0,    0,    0,  451,
      451,    0,  451,    0,  451,    0,  827,    0,  451,  827,
      451,  451,  451,  827,  827,    0,  827,    0,  827,    0,
      837,  451,  827,  837,  827,  827,  827,  837,  837,    0,
      837,    0,  837,    0,    0,    0,  837,    0,  837,  837,
      837,    0,    0,    0,    0,    0,    0,    0,    0,  451,
      453,    0,    0,  453,    0,    0,    0,  453,  453,    0,
      453,    0,  453,    0,  843,    0,  453,  843,  453,  453,
      453,  843,  843,  453,  843,    0,  843,    0,  852,    0,

      843,  852,  843,  843,  843,  852,  852,    0,  852,    0,
      852,    0,    0,    0,  852,    0,  852,  852,  852,    0,
        0,  453,  456,    0,    0,  456,    0,    0,    0,  456,
      456,    0,  456,    0,  456,    0,    0,    0,  456,    0,
      456,  456,  456,    0,  854,    0,  456,  854,    0,    0,
        0,  854,  854,    0,  854,    0,  854,    0,    0,    0,
      854,    0,  854,  854,  854,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  456,  457,    0,    0,  457,    0,
        0,    0,  457,  457,    0,  457,    0,  457,    0,  855,
        0,  457,  855,  457,  457,  457,  855,  855,    0,  855,

        0,  855,    0,    0,    0,  855,    0,  855,  855,  855,
        0,  864,    0,  457,  864,    0,    0,    0,  864,  864,
        0,  864,    0,  864,    0,    0,    0,  864,    0,  864,
      864,  864,    0,    0,    0,    0,    0,    0,    0,    0,
      457,  458,    0,    0,  458,    0,    0,    0,  458,  458,
        0,  458,    0,  458,    0,  868,    0,  458,  868,  458,
      458,  458,  868,  868,    0,  868,    0,  868,    0,    0,
        0,  868,    0,  868,  868,  868,    0,  877,    0,  458,
      877,    0,    0,    0,  877,  877,    0,  877,    0,  877,
        0,    0,    0,  877,    0,  877,  877,  877,    0,    0,

        0,    0,    0,    0,    0,    0,  458,  460,    0,    0,
      460,    0,    0,    0,  460,  460,    0,  460,    0,  460,
        0,  879,    0,  460,  879,  460,  460,  460,  879,  879,
        0,  879,    0,  879,    0,  880,    0,  879,  880,  879,
      879,  879,  880,  880,    0,  880,    0,  880,    0,    0,
        0,  880,  460,  880,  880,  880,  887,    0,    0,  887,
        0,    0,    0,  887,  887,    0,  887,    0,  887,    0,
        0,    0,  887,    0,  887,  887,  887,    0,    0,  460,
      461,    0,    0,  461,    0,    0,    0,  461,  461,    0,
      461,    0,  461,    0,    0,    0,  461,    0,  461,  461,

      461,    0,  890,    0,  461,  890,    0,    0,    0,  890,
      890,    0,  890,    0,  890,    0,    0,    0,  890,    0,
      890,  890,  890,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  461,  462,    0,    0,  462,    0,    0,    0,
      462,  462,    0,  462,    0,  462,    0,  898,    0,  462,
      898,  462,  462,  462,  898,  898,    0,  898,  462,  898,
        0,  900,    0,  898,  900,  898,  898,  898,  900,  900,
        0,  900,    0,  900,    0,    0,    0,  900,    0,  900,
      900,  900,    0,    0,    0,    0,  462,  463,    0,    0,
      463,    0,    0,    0,  463,  463,    0,  463,    0,  463,

        0,  901,    0,  463,  901,  463,  463,  463,  901,  901,
        0,  901,    0,  901,    0,    0,    0,  901,    0,  901,
      901,  901,  906,    0,    0,  906,    0,  463,    0,  906,
      906,    0,  906,    0,  906,    0,    0,    0,  906,    0,
      906,  906,  906,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  463,  464,    0,    0,  464,    0,
        0,    0,  464,  464,    0,  464,    0,  464,    0,  908,
        0,  464,  908,  464,  464,  464,  908,  908,    0,  908,
        0,  908,    0,    0,    0,  908,    0,  908,  908,  908,
      914,    0,    0,  914,    0,  464,    0,  914,  914,    0,

      914,    0,  914,    0,    0,    0,  914,    0,  914,  914,
      914,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  464,  465,    0,    0,  465,    0,    0,    0,
      465,  465,    0,  465,    0,  465,    0,    0,    0,  465,
        0,  465,  465,  465,  465,  916,    0,    0,  916,    0,
        0,    0,  916,  916,    0,  916,    0,  916,    0,  917,
        0,  916,  917,  916,  916,  916,  917,  917,    0,  917,
        0,  917,  465,  472,    0,  917,  472,  917,  917,  917,
      472,  472,    0,  472,    0,  472,    0,  921,    0,  472,
      921,  472,  472,  472,  921,  921,    0,  921,    0,  921,

        0,    0,    0,  921,    0,  921,  921,  921,  472,  923,
        0,    0,  923,    0,    0,    0,  923,  923,    0,  923,
        0,  923,    0,  927,    0,  923,  927,  923,  923,  923,
      927,  927,    0,  927,    0,  927,  472,  473,    0,  927,
      473,  927,  927,  927,  473,  473,    0,  473,    0,  473,
        0,  929,    0,  473,  929,  473,  473,  473,  929,  929,
        0,  929,    0,  929,    0,    0,    0,  929,    0,  929,
      929,  929,    0,  930,    0,  473,  930,    0,    0,    0,
      930,  930,    0,  930,    0,  930,    0,    0,    0,  930,
        0,  930,  930,  930,    0,    0,    0,    0,    0,    0,

        0,    0,  473,  474,    0,    0,  474,    0,    0,    0,
      474,  474,    0,  474,    0,  474,    0,  933,    0,  474,
      933,  474,  474,  474,  933,  933,    0,  933,    0,  933,
        0,    0,    0,  933,    0,  933,  933,  933,    0,  935,
        0,  474,  935,    0,    0,    0,  935,  935,    0,  935,
        0,  935,    0,    0,    0,  935,    0,  935,  935,  935,
        0,    0,    0,    0,    0,    0,    0,    0,  474,  475,
        0,    0,  475,    0,    0,    0,  475,  475,    0,  475,
        0,  475,    0,  938,    0,  475,  938,  475,  475,  475,
      938,  938,    0,  938,    0,  938,    0,    0,    0,  938,

        0,  938,  938,  938,  940,    0,    0,  940,    0,  475,
        0,  940,  940,    0,  940,    0,  940,    0,    0,    0,
      940,    0,  940,  940,  940,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  475,  495,    0,    0,
      495,    0,    0,    0,  495,  495,    0,  495,    0,  495,
        0,  941,    0,  495,  941,  495,  495,  495,  941,  941,
        0,  941,    0,  941,    0,    0,    0,  941,    0,  941,
      941,  941,  944,    0,    0,  944,    0,  495,    0,  944,
      944,    0,  944,    0,  944,    0,    0,    0,  944,    0,
      944,  944,  944,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,  495,  496,    0,    0,  496,    0,
        0,    0,  496,  496,    0,  496,    0,  496,    0,    0,
        0,  496,    0,  496,  496,  496,    0,  946,    0,  496,
      946,    0,    0,    0,  946,  946,    0,  946,    0,  946,
        0,    0,    0,  946,    0,  946,  946,  946,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  496,  497,    0,
        0,  497,    0,    0,    0,  497,  497,    0,  497,    0,
      497,    0,  948,    0,  497,  948,  497,  497,  497,  948,
      948,    0,  948,    0,  948,    0,    0,    0,  948,    0,
      948,  948,  948,  950,    0,    0,  950,    0,    0,    0,

      950,  950,    0,  950,  497,  950,    0,  951,    0,  950,
      951,  950,  950,  950,  951,  951,    0,  951,    0,  951,
        0,    0,    0,  951,    0,  951,  951,  951,    0,    0,
        0,  497,  498,    0,    0,  498,    0,    0,    0,  498,
      498,    0,  498,    0,  498,    0,  954,    0,  498,  954,
      498,  498,  498,  954,  954,    0,  954,  498,  954,    0,
      956,    0,  954,  956,  954,  954,  954,  956,  956,    0,
      956,    0,  956,    0,    0,    0,  956,    0,  956,  956,
      956,    0,    0,    0,    0,  498,  501,    0,    0,  501,
        0,    0,    0,  501,  501,    0,  501,    0,  501,    0,

      958,    0,  501,  958,  501,  501,  501,  958,  958,    0,
      958,  501,  958,    0,  960,    0,  958,  960,  958,  958,
      958,  960,  960,    0,  960,    0,  960,    0,    0,    0,
      960,    0,  960,  960,  960,    0,    0,    0,    0,  501,
      503,    0,    0,  503,    0,    0,    0,  503,  503,    0,
      503,    0,  503,    0,  961,    0,  503,  961,  503,  503,
      503,  961,  961,    0,  961,    0,  961,    0,  964,    0,
      961,  964,  961,  961,  961,  964,  964,    0,  964,    0,
      964,  503,  966,    0,  964,  966,  964,  964,  964,  966,
      966,    0,  966,    0,  966,    0,    0,    0,  966,    0,

      966,  966,  966,    0,    0,    0,    0,    0,  503,  504,
        0,    0,  504,    0,    0,    0,  504,  504,    0,  504,
        0,  504,    0,  968,    0,  504,  968,  504,  504,  504,
      968,  968,    0,  968,    0,  968,    0,  970,    0,  968,
      970,  968,  968,  968,  970,  970,    0,  970,  504,  970,
        0,  971,    0,  970,  971,  970,  970,  970,  971,  971,
        0,  971,    0,  971,    0,    0,    0,  971,    0,  971,
      971,  971,    0,    0,    0,  504,  507,    0,    0,  507,
        0,    0,    0,  507,  507,    0,  507,    0,  507,    0,
      974,    0,  507,  974,  507,  507,  507,  974,  974,    0,

      974,    0,  974,    0,    0,    0,  974,    0,  974,  974,
      974,    0,  976,    0,  507,  976,    0,    0,    0,  976,
      976,    0,  976,    0,  976,    0,    0,    0,  976,    0,
      976,  976,  976,    0,    0,    0,    0,    0,    0,    0,
        0,  507,  511,    0,    0,  511,    0,    0,    0,  511,
      511,    0,  511,  511,  511,  511,  511,  511,  511,    0,
      511,  511,  511,  516,    0,    0,  516,    0,    0,    0,
      516,  516,    0,  516,    0,  516,    0,  978,    0,  516,
      978,  516,  516,  516,  978,  978,    0,  978,    0,  978,
        0,    0,    0,  978,    0,  978,  978,  978,    0,  980,

        0,  516,  980,    0,    0,    0,  980,  980,    0,  980,
        0,  980,    0,    0,    0,  980,    0,  980,  980,  980,
        0,    0,    0,    0,    0,    0,    0,    0,  516,  518,
        0,    0,  518,    0,    0,    0,  518,  518,    0,  518,
        0,  518,    0,    0,    0,  518,    0,  518,  518,  518,
      981,    0,    0,  981,    0,  518,    0,  981,  981,    0,
      981,    0,  981,    0,    0,    0,  981,    0,  981,  981,
      981,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  518,  519,    0,    0,  519,    0,    0,
        0,  519,  519,    0,  519,    0,  519,    0,  984,    0,

      519,  984,  519,  519,  519,  984,  984,    0,  984,    0,
      984,    0,  986,  519,  984,  986,  984,  984,  984,  986,
      986,    0,  986,    0,  986,    0,    0,    0,  986,    0,
      986,  986,  986,    0,    0,    0,    0,    0,    0,    0,
        0,  519,  530,    0,    0,  530,    0,    0,    0,  530,
      530,    0,  530,    0,  530,    0,    0,    0,  530,    0,
      530,  530,  530,  530,  988,    0,    0,  988,    0,    0,
        0,  988,  988,    0,  988,    0,  988,    0,  990,    0,
      988,  990,  988,  988,  988,  990,  990,    0,  990,    0,
      990,  530,  532,    0,  990,  532,  990,  990,  990,  532,

      532,    0,  532,    0,  532,    0,    0,    0,  532,    0,
      532,  532,  532,  532,  991,    0,    0,  991,    0,    0,
        0,  991,  991,    0,  991,    0,  991,    0,  994,    0,
      991,  994,  991,  991,  991,  994,  994,    0,  994,    0,
      994,  532,  535,    0,  994,  535,  994,  994,  994,  535,
      535,    0,  535,    0,  535,    0,  996,    0,  535,  996,
      535,  535,  535,  996,  996,  535,  996,    0,  996,    0,
      998,    0,  996,  998,  996,  996,  996,  998,  998,    0,
      998,    0,  998,    0,    0,    0,  998,    0,  998,  998,
      998,    0,    0,  535,  536,    0,    0,  536,    0,    0,

        0,  536,  536,    0,  536,    0,  536,    0, 1000,    0,
      536, 1000,  536,  536,  536, 1000, 1000,    0, 1000,    0,
     1000,    0,    0,    0, 1000,    0, 1000, 1000, 1000, 1001,
        0,    0, 1001,    0,  536,    0, 1001, 1001,    0, 1001,
        0, 1001,    0,    0,    0, 1001,    0, 1001, 1001, 1001,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  536,  553,    0,    0,  553,    0,    0,    0,  553,
      553,    0,  553,    0,  553,    0,    0,    0,  553,    0,
      553,  553,  553,  553, 1004,    0,    0, 1004,    0,    0,
        0, 1004, 1004,    0, 1004,    0, 1004,    0, 1006,    0,

     1004, 1006, 1004, 1004, 1004, 1006, 1006,    0, 1006,    0,
     1006,  553,  554,    0, 1006,  554, 1006, 1006, 1006,  554,
      554,    0,  554,    0,  554,    0, 1008,    0,  554, 1008,
      554,  554,  554, 1008, 1008,    0, 1008,    0, 1008,    0,
        0,    0, 1008,    0, 1008, 1008, 1008,  554, 1010,    0,
        0, 1010,    0,    0,    0, 1010, 1010,    0, 1010,    0,
     1010,    0, 1013,    0, 1010, 1013, 1010, 1010, 1010, 1013,
     1013,    0, 1013,    0, 1013,  554,  563,    0, 1013,  563,
     1013, 1013, 1013,  563,  563,    0,  563,    0,  563,    0,
     1015,    0,  563, 1015,  563,  563,  563, 1015, 1015,    0,

     1015,    0, 1015,    0,    0,    0, 1015,    0, 1015, 1015,
     1015, 1017,    0,    0, 1017,    0,  563,    0, 1017, 1017,
        0, 1017,    0, 1017,    0,    0,    0, 1017,    0, 1017,
     1017, 1017,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  563,  564,    0,    0,  564,    0,    0,
        0,  564,  564,    0,  564,    0,  564,    0, 1019,    0,
      564, 1019,  564,  564,  564, 1019, 1019,    0, 1019,    0,
     1019,    0,    0,    0, 1019,    0, 1019, 1019, 1019, 1022,
        0,    0, 1022,    0,  564,    0, 1022, 1022,    0, 1022,
        0, 1022,    0,    0,    0, 1022,    0, 1022, 1022, 1022,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  564,  565,    0,    0,  565,    0,    0,    0,  565,
      565,    0,  565,    0,  565,    0, 1024,    0,  565, 1024,
      565,  565,  565, 1024, 1024,    0, 1024,  565, 1024,    0,
     1026,    0, 1024, 1026, 1024, 1024, 1024, 1026, 1026,    0,
     1026,    0, 1026,    0,    0,    0, 1026,    0, 1026, 1026,
     1026,    0,    0,    0,    0,  565,  566,    0,    0,  566,
        0,    0,    0,  566,  566,    0,  566,    0,  566,    0,
     1030,    0,  566, 1030,  566,  566,  566, 1030, 1030,    0,
     1030,    0, 1030,    0,    0,    0, 1030,    0, 1030, 1030,

     1030,    0, 1032,    0,  566, 1032,    0,    0,    0, 1032,
     1032,    0, 1032,    0, 1032,    0,    0,    0, 1032,    0,
     1032, 1032, 1032,    0,    0,    0,    0,    0,    0,    0,
        0,  566,  582,    0,    0,  582,    0,    0,    0,  582,
      582,    0,  582,    0,  582,    0, 1034,    0,  582, 1034,
      582,  582,  582, 1034, 1034,  582, 1034,    0, 1034,    0,
     1038,    0, 1034, 1038, 1034, 1034, 1034, 1038, 1038,    0,
     1038,    0, 1038,    0,    0,    0, 1038,    0, 1038, 1038,
     1038,    0,    0,  582,  583,    0,    0,  583,    0,    0,
        0,  583,  583,    0,  583,    0,  583,    0,    0,    0,

      583,    0,  583,  583,  583, 1040,    0,    0, 1040,    0,
        0,    0, 1040, 1040,    0, 1040,    0, 1040,  583, 1042,
        0, 1040, 1042, 1040, 1040, 1040, 1042, 1042,    0, 1042,
        0, 1042,    0, 1047,    0, 1042, 1047, 1042, 1042, 1042,
     1047, 1047,    0, 1047,    0, 1047,  583,  584,    0, 1047,
      584, 1047, 1047, 1047,  584,  584,    0,  584,    0,  584,
      584,  584,  584,  584,    0,  584,  584,  584,  591,    0,
        0,  591,    0,    0,    0,  591,  591,    0,  591,    0,
      591,    0, 1052,    0,  591, 1052,  591,  591,  591, 1052,
     1052,    0, 1052,    0, 1052,    0, 1055,  591, 1052, 1055,

     1052, 1052, 1052, 1055, 1055,    0, 1055,    0, 1055,    0,
        0,    0, 1055,    0, 1055, 1055, 1055,    0,    0,    0,
        0,    0,    0,    0,    0,  591,  592,    0,    0,  592,
        0,    0,    0,  592,  592,    0,  592,    0,  592,    0,
        0,    0,  592,    0,  592,  592,  592,    0,    0,    0,
        0,    0,    0,    0,    0,  592,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  592,  594,    0,    0,  594,    0,    0,
        0,  594,  594,    0,  594,    0,  594,    0,    0,    0,

      594,    0,  594,  594,  594,    0,    0,    0,    0,    0,
        0,    0,    0,  594,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  594,  607,    0,    0,  607,    0,    0,    0,  607,
      607,    0,  607,    0,  607,    0,    0,    0,  607,    0,
      607,  607,  607,    0,    0,    0,    0,  607,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  607,  622,    0,    0,  622,

        0,    0,    0,  622,  622,    0,  622,    0,  622,    0,
        0,    0,  622,    0,  622,  622,  622,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  622,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  622,
      623,    0,    0,  623,    0,    0,    0,  623,  623,    0,
      623,    0,  623,    0,    0,    0,  623,    0,  623,  623,
      623,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  623,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  623,  624,    0,    0,  624,    0,    0,
        0,  624,  624,    0,  624,    0,  624,    0,    0,    0,
      624,    0,  624,  624,  624,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  624,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  624,  643,    0,    0,
      643,    0,    0,    0,  643,  643,    0,  643,    0,  643,

        0,    0,    0,  643,    0,  643,  643,  643,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  643,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  643,
      644,    0,    0,  644,    0,    0,    0,  644,  644,    0,
      644,    0,  644,    0,    0,    0,  644,    0,  644,  644,
      644,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  644,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  644,  645,    0,    0,  645,    0,    0,    0,
      645,  645,    0,  645,    0,  645,    0,    0,    0,  645,
        0,  645,  645,  645,    0,    0,    0,    0,    0,    0,
      645,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  645, 1063,
     1063,    0, 1063, 1063, 1063, 1063, 1063, 1064, 1064,    0,
     1064, 1064, 1064, 1064, 1064, 1065,    0,    0, 1065, 1066,
        0, 1066, 1067,    0,    0, 1067, 1068, 1068,    0, 1068,

     1068, 1068, 1068, 1068, 1069, 1069,    0, 1069, 1069, 1069,
     1069, 1069, 1070,    0,    0, 1070, 1071,    0,    0, 1071,
     1072,    0, 1072, 1073,    0,    0, 1073, 1074,    0,    0,
     1074, 1075,    0, 1075, 1075, 1075, 1076,    0, 1076, 1077,
     1077,    0, 1077, 1077, 1077, 1077, 1077, 1078, 1078,    0,
     1078, 1078, 1078, 1078, 1078, 1079,    0,    0,    0,    0,
        0, 1079, 1080,    0,    0, 1080, 1081,    0,    0, 1081,
     1082, 1082,    0, 1082, 1082, 1082, 1082, 1082, 1083, 1083,
        0, 1083, 1083, 1083, 1083, 1083, 1084,    0,    0, 1084,
     1085, 1085,    0, 1085, 1085, 1085, 1085, 1085, 1086, 1086,

        0, 1086, 1086, 1086, 1086, 1086, 1087,    0,    0, 1087,
     1088,    0,    0,    0,    0,    0, 1088, 1089,    0,    0,
     1089, 1090,    0,    0, 1090, 1091,    0, 1091, 1092,    0,
        0, 1092, 1093,    0, 1093, 1094,    0,    0, 1094, 1095,
        0,    0,    0,    0,    0, 1095, 1096,    0,    0, 1096,
     1097,    0,    0, 1097, 1098, 1098,    0, 1098, 1098, 1098,
     1098, 1098, 1099, 1099,    0, 1099, 1099, 1099, 1099, 1099,
     1100,    0,    0,    0,    0, 1100, 1101,    0,    0, 1101,
     1102, 1102,    0, 1102, 1102, 1102, 1102, 1102, 1103, 1103,
        0, 1103, 1103, 1103, 1103, 1103, 1104,    0,    0,    0,

        0, 1104, 1105,    0,    0, 1105, 1106,    0, 1106, 1107,
        0,    0,    0,    0,    0, 1107, 1108,    0,    0, 1108,
     1109,    0,    0, 1109, 1110,    0,    0,    0,    0, 1110,
     1111,    0,    0, 1111, 1112,    0,    0,    0,    0, 1112,
     1113,    0,    0, 1113, 1114, 1114,    0, 1114, 1114, 1114,
     1114, 1114, 1115, 1115,    0, 1115, 1115, 1115, 1115, 1115,
     1116,    0,    0, 1116, 1117,    0,    0,    0,    0,    0,
     1117, 1118,    0,    0, 1118, 1119,    0,    0, 1119, 1120,
        0,    0,    0,    0, 1120, 1121,    0,    0, 1121, 1122,
        0,    0,    0,    0, 1122, 1123,    0,    0, 1123, 1124,

        0, 1124, 1125,    0,    0, 1125, 1126,    0,    0,    0,
        0,    0, 1126, 1127,    0,    0, 1127, 1128,    0,    0,
     1128, 1129,    0,    0,    0,    0, 1129, 1130,    0,    0,
     1130, 1131,    0,    0,    0,    0, 1131, 1132,    0,    0,
     1132, 1133, 1133,    0, 1133, 1133, 1133, 1133, 1133, 1134,
     1134,    0, 1134, 1134, 1134, 1134, 1134, 1135,    0,    0,
        0,    0, 1135, 1136,    0,    0, 1136, 1137,    0,    0,
        0,    0,    0, 1137, 1138,    0,    0, 1138, 1139,    0,
        0, 1139, 1140,    0,    0, 1140, 1141,    0,    0,    0,
        0, 1141, 1142,    0,    0, 1142, 1143,    0,    0,    0,

        0, 1143, 1144,    0,    0, 1144, 1145,    0,    0,    0,
        0, 1145, 1146,    0,    0, 1146, 1147,    0,    0,    0,
        0,    0, 1147, 1148,    0,    0, 1148, 1149,    0,    0,
     1149, 1151,    0,    0,    0,    0, 1151, 1152,    0,    0,
     1152, 1153,    0,    0,    0,    0, 1153, 1154,    0,    0,
     1154, 1155,    0,    0,    0,    0, 1155, 1156,    0,    0,
     1156, 1157,    0,    0,    0,    0,    0, 1157, 1158,    0,
        0, 1158, 1159,    0,    0, 1159, 1161,    0,    0,    0,
        0, 1161, 1162,    0,    0, 1162, 1163,    0,    0,    0,
        0, 1163, 1164,    0,    0, 1164, 1165,    0,    0,    0,

        0, 1165, 1166,    0,    0, 1166, 1167,    0,    0,    0,
        0,    0, 1167, 1168,    0,    0, 1168, 1169,    0,    0,
     1169, 1171,    0,    0,    0,    0, 1171, 1172,    0,    0,
     1172, 1173,    0,    0,    0,    0, 1173, 1174,    0,    0,
     1174, 1175,    0,    0,    0,    0, 1175, 1176,    0,    0,
     1176, 1177,    0,    0,    0,    0,    0, 1177, 1178,    0,
        0, 1178, 1179,    0,    0, 1179, 1181,    0,    0,    0,
        0, 1181, 1182,    0,    0, 1182, 1183,    0,    0,    0,
        0, 1183, 1184,    0,    0, 1184, 1185,    0,    0,    0,
        0, 1185, 1186,    0,    0, 1186, 1187,    0,    0,    0,

        0,    0, 1187, 1188,    0,    0, 1188, 1189,    0,    0,
     1189, 1191,    0,    0,    0,    0, 1191, 1192,    0,    0,
     1192, 1193,    0,    0,    0,    0, 1193, 1194,    0,    0,
     1194, 1195,    0,    0,    0,    0, 1195, 1196,    0,    0,
     1196, 1197,    0,    0,    0,    0,    0, 1197, 1198,    0,
        0, 1198, 1199,    0,    0, 1199, 1201,    0,    0,    0,
        0, 1201, 1202,    0,    0, 1202, 1203,    0,    0,    0,
        0, 1203, 1204,    0,    0, 1204, 1205,    0,    0,    0,
        0, 1205, 1206,    0,    0, 1206, 1207,    0,    0,    0,
        0,    0, 1207, 1208,    0,    0, 1208, 1209,    0,    0,

     1209, 1211,    0,    0,    0,    0, 1211, 1212,    0,    0,
     1212, 1213,    0,    0,    0,    0, 1213, 1214,    0,    0,
     1214, 1215,    0,    0,    0,    0, 1215, 1216,    0,    0,
     1216, 1217,    0,    0,    0,    0,    0, 1217, 1218,    0,
        0, 1218, 1219,    0,    0, 1219, 1221,    0,    0,    0,
        0, 1221, 1222,    0,    0, 1222, 1223,    0,    0,    0,
        0, 1223, 1224,    0,    0, 1224, 1225,    0,    0,    0,
        0, 1225, 1226,    0,    0, 1226, 1227,    0,    0,    0,
        0,    0, 1227, 1228,    0,    0, 1228, 1229,    0,    0,
     1229, 1231,    0,    0,    0,    0, 1231, 1232,    0,    0,

     1232, 1233,    0,    0,    0,    0, 1233, 1234,    0,    0,
     1234, 1235,    0,    0,    0,    0, 1235, 1236,    0,    0,
     1236, 1237,    0,    0,    0,    0,    0, 1237, 1238,    0,
        0, 1238, 1239,    0,    0, 1239, 1241,    0,    0,    0,
        0, 1241, 1242,    0,    0, 1242, 1243,    0,    0,    0,
        0, 1243, 1244,    0,    0, 1244, 1245,    0,    0,    0,
        0, 1245, 1246,    0,    0, 1246, 1247,    0,    0,    0,
        0,    0, 1247, 1248,    0,    0, 1248, 1249,    0,    0,
     1249, 1251,    0,    0,    0,    0, 1251, 1252,    0,    0,
     1252, 1253,    0,    0,    0,    0, 1253, 1254,    0,    0,

     1254, 1255,    0,    0,    0,    0, 1255, 1256,    0,    0,
     1256, 1257,    0,    0,    0,    0,    0, 1257, 1258,    0,
        0, 1258, 1259,    0,    0, 1259, 1261,    0,    0,    0,
        0, 1261, 1262,    0,    0, 1262, 1263,    0,    0,    0,
        0, 1263, 1264,    0,    0, 1264, 1265,    0,    0,    0,
        0, 1265, 1266,    0,    0, 1266, 1267,    0,    0,    0,
        0,    0, 1267, 1268,    0,    0, 1268, 1269,    0,    0,
     1269, 1271,    0,    0,    0,    0, 1271, 1272,    0,    0,
     1272, 1273,    0,    0,    0,    0, 1273, 1274,    0,    0,
     1274, 1275,    0,    0,    0,    0, 1275, 1276,    0,    0,

     1276, 1277,    0,    0,    0,    0,    0, 1277, 1278,    0,
        0, 1278, 1279,    0,    0, 1279, 1281,    0,    0,    0,
        0, 1281, 1282,    0,    0, 1282, 1283,    0,    0,    0,
        0, 1283, 1284,    0,    0, 1284, 1285,    0,    0,    0,
        0, 1285, 1286,    0,    0, 1286, 1287,    0,    0,    0,
        0,    0, 1287, 1288,    0,    0, 1288, 1289,    0,    0,
     1289, 1291,    0,    0,    0,    0, 1291, 1292,    0,    0,
     1292, 1293,    0,    0,    0,    0, 1293, 1294,    0,    0,
     1294, 1295,    0,    0,    0,    0, 1295, 1296,    0,    0,
     1296, 1297,    0,    0,    0,    0,    0, 1297, 1298,    0,

        0, 1298, 1299,    0,    0, 1299, 1301,    0,    0,    0,
        0, 1301, 1302,    0,    0, 1302, 1303,    0,    0,    0,
        0, 1303, 1304,    0,    0, 1304, 1305,    0,    0,    0,
        0, 1305, 1306,    0,    0, 1306, 1307,    0,    0,    0,
        0,    0, 1307, 1308,    0,    0, 1308, 1309,    0,    0,
     1309, 1311,    0,    0,    0,    0, 1311, 1312,    0,    0,
     1312, 1313,    0,    0,    0,    0, 1313, 1314,    0,    0,
     1314, 1315,    0,    0,    0,    0, 1315, 1316,    0,    0,
     1316, 1317,    0,    0,    0,    0,    0, 1317, 1318,    0,
        0, 1318, 1319,    0,    0, 1319, 1321,    0,    0,    0,

        0, 1321, 1322,    0,    0, 1322, 1323,    0,    0,    0,
        0, 1323, 1324,    0,    0, 1324, 1325,    0,    0,    0,
        0, 1325, 1326,    0,    0, 1326, 1327,    0,    0,    0,
        0,    0, 1327, 1328,    0,    0, 1328, 1329,    0,    0,
     1329, 1331,    0,    0,    0,    0, 1331, 1332,    0,    0,
     1332, 1333,    0,    0,    0,    0, 1333, 1334,    0,    0,
     1334, 1335,    0,    0,    0,    0, 1335, 1336,    0,    0,
     1336, 1337,    0,    0,    0,    0,    0, 1337, 1338,    0,
        0, 1338, 1339,    0,    0, 1339, 1341,    0,    0,    0,
        0, 1341, 1342,    0,    0, 1342, 1343,    0,    0,    0,

        0, 1343, 1344,    0,    0, 1344, 1345,    0,    0,    0,
        0, 1345, 1346,    0,    0, 1346, 1347,    0,    0,    0,
        0,    0, 1347, 1348,    0,    0, 1348, 1349,    0,    0,
     1349, 1351,    0,    0,    0,    0, 1351, 1352,    0,    0,
     1352, 1353,    0,    0,    0,    0, 1353, 1354,    0,    0,
     1354, 1355,    0,    0,    0,    0, 1355, 1356,    0,    0,
     1356, 1357,    0,    0,    0,    0,    0, 1357, 1358,    0,
        0, 1358, 1360,    0,    0,    0,    0, 1360, 1361,    0,
        0, 1361, 1362,    0,    0,    0,    0, 1362, 1363,    0,
        0, 1363, 1364,    0,    0,    0,    0, 1364, 1365,    0,

        0, 1365, 1366,    0,    0,    0,    0,    0, 1366, 1367,
        0,    0, 1367, 1369,    0,    0,    0,    0, 1369, 1370,
        0,    0, 1370, 1371,    0,    0,    0,    0, 1371, 1372,
        0,    0, 1372, 1373,    0,    0,    0,    0, 1373, 1374,
        0,    0, 1374, 1375,    0,    0,    0,    0,    0, 1375,
     1377,    0,    0,    0,    0, 1377, 1378,    0,    0, 1378,
     1379,    0,    0,    0,    0, 1379, 1380,    0,    0, 1380,
     1381,    0,    0,    0,    0, 1381, 1382,    0,    0, 1382,
     1383,    0,    0,    0,    0,    0, 1383, 1385,    0,    0,
        0,    0, 1385, 1386,    0,    0, 1386, 1387,    0,    0,

        0,    0, 1387, 1388,    0,    0, 1388, 1389,    0,    0,
        0,    0, 1389, 1390,    0,    0, 1390, 1392,    0,    0,
        0,    0, 1392, 1393,    0,    0,    0,    0, 1393, 1394,
        0,    0,    0,    0, 1394, 1395,    0,    0, 1395, 1397,
        0,    0,    0,    0, 1397, 1398,    0,    0,    0,    0,
     1398, 1399,    0,    0,    0,    0, 1399, 1400,    0,    0,
     1400, 1402,    0,    0,    0,    0, 1402, 1403,    0,    0,
     1403, 1405,    0,    0,    0,    0, 1405, 1407,    0,    0,
        0,    0, 1407, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,

     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062
    } ;

/* Table of booleans, true if rule could match eol. */
static const flex_int32_t yy_rule_can_match_eol[105] =
    {   0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
    0, 1, 1, 1, 0,     };

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "lexico.l"
#line 2 "lexico.l"
#include <stdio.h>
#include "Token.h"
#include <stdlib.h>

using namespace std;

extern string* pStr;
extern void GetToken(string lexema, Token_type tipo, int linea);
#line 3230 "Scanner.cpp"
/*PASCAL RESEVED WORDS*/
/*  -- Simplificador   -- */
#line 76 "lexico.l"
            /*CASO  *//*CASO (*/                          /*CASO ( */
/*Object Reserved Words*/
/*   -- END OF RSVW --    */
/*SINTAX SYMBOLS*/
/*  -- END OF SYNTX -- */
/* DATA TYPES  */
/* -- END OF DATA TYPES  --*/
/*All Arithmetic Operators*/
/*Arithmetic Operations*/
/* -- END OF OPRT --*/
#line 3244 "Scanner.cpp"

#define INITIAL 0

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#include <unistd.h>
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy ( char *, const char *, int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen ( const char * );
#endif

#ifndef YY_NO_INPUT

#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
#define ECHO LexerOutput( yytext, yyleng )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
\
	if ( (int)(result = LexerInput( (char *) buf, max_size )) < 0 ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) LexerError( msg )
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
#define YY_DECL int yyFlexLexer::yylex()
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK /*LINTED*/break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	yy_state_type yy_current_state;
	char *yy_cp, *yy_bp;
	int yy_act;
    
	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
			yyin.rdbuf(std::cin.rdbuf());

		if ( ! yyout )
			yyout.rdbuf(std::cout.rdbuf());

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	{
#line 174 "lexico.l"


#line 3379 "Scanner.cpp"

	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
		{
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = (yy_start);
yy_match:
		do
			{
			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1063 )
					yy_c = yy_meta[yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 10684 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;

		if ( yy_act != YY_END_OF_BUFFER && yy_rule_can_match_eol[yy_act] )
			{
			int yyl;
			for ( yyl = 0; yyl < yyleng; ++yyl )
				if ( yytext[yyl] == '\n' )
					
    yylineno++;
;
			}

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 176 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 177 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);     
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 179 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);     
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 180 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);     
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 181 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);     
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 182 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);      
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 183 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 184 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 185 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 186 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 187 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 188 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 189 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 192 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 193 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 194 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 195 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 196 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 197 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 198 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 199 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 200 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 201 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 202 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 203 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 204 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 206 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 207 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 208 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 209 "lexico.l"
GetToken(yytext,RSVWORD,yylineno); 
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 210 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 211 "lexico.l"
GetToken(yytext,RSVWORD,yylineno); 
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 212 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 214 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 215 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 216 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 218 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 219 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 222 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 223 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 224 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 225 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 226 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 227 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 228 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 229 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 230 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 231 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 234 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);  
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 235 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 236 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 237 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 238 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 240 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 241 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 242 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 243 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 245 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 246 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 247 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 248 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 250 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 251 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 252 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 253 "lexico.l"
GetToken(yytext,RSVWORD,yylineno);
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 257 "lexico.l"
GetToken(yytext,OPERATOR,yylineno);         
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 258 "lexico.l"
GetToken(yytext,OPERATION,yylineno);  
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 262 "lexico.l"
GetToken(yytext,STXSymbl,yylineno);
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 263 "lexico.l"
GetToken(yytext,STXSymbl,yylineno);
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 264 "lexico.l"
GetToken(yytext,STXSymbl,yylineno);
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 265 "lexico.l"
GetToken(yytext,STXSymbl,yylineno);
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 266 "lexico.l"
GetToken(yytext,STXSymbl,yylineno);
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 267 "lexico.l"
GetToken(yytext,STXSymbl,yylineno);
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 268 "lexico.l"
GetToken(yytext,STXSymbl,yylineno);
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 271 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);   
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 272 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 273 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 274 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 275 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 276 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 277 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 278 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 279 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 84:
YY_RULE_SETUP
#line 281 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 85:
YY_RULE_SETUP
#line 282 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 283 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 284 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 286 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 287 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 288 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 289 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 92:
YY_RULE_SETUP
#line 290 "lexico.l"
GetToken(yytext,DTTYPE,yylineno);
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 292 "lexico.l"
GetToken(yytext,DIGIT,yylineno);                
	YY_BREAK
case 94:
YY_RULE_SETUP
#line 293 "lexico.l"
GetToken(yytext,INTEGER,yylineno);
	YY_BREAK
case 95:
YY_RULE_SETUP
#line 294 "lexico.l"
GetToken(yytext,REAL,yylineno);
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 295 "lexico.l"
GetToken(yytext,IDENTIFIER,yylineno);
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 296 "lexico.l"
GetToken(yytext,EMPTYSPC,yylineno);
	YY_BREAK
case 98:
/* rule 98 can match eol */
YY_RULE_SETUP
#line 297 "lexico.l"
GetToken(yytext,LINEBRK,yylineno);
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 298 "lexico.l"
GetToken(yytext,STRING,yylineno);
	YY_BREAK
case 100:
YY_RULE_SETUP
#line 301 "lexico.l"
GetToken(yytext,UsrOperations,yylineno);
	YY_BREAK
case 101:
/* rule 101 can match eol */
YY_RULE_SETUP
#line 302 "lexico.l"
GetToken(yytext,Usr_WHILE,yylineno);
	YY_BREAK
case 102:
/* rule 102 can match eol */
YY_RULE_SETUP
#line 303 "lexico.l"
GetToken(yytext,Usr_IF,yylineno);
	YY_BREAK
case 103:
/* rule 103 can match eol */
YY_RULE_SETUP
#line 304 "lexico.l"
GetToken(yytext,Usr_FOR,yylineno);
	YY_BREAK
case 104:
YY_RULE_SETUP
#line 305 "lexico.l"
ECHO;
	YY_BREAK
#line 3970 "Scanner.cpp"
case YY_STATE_EOF(INITIAL):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin.rdbuf();
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = (yy_c_buf_p);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of user's declarations */
} /* end of yylex */

/* The contents of this function are C++ specific, so the () macro is not used.
 * This constructor simply maintains backward compatibility.
 * DEPRECATED
 */
yyFlexLexer::yyFlexLexer( std::istream* arg_yyin, std::ostream* arg_yyout ):
	yyin(arg_yyin ? arg_yyin->rdbuf() : std::cin.rdbuf()),
	yyout(arg_yyout ? arg_yyout->rdbuf() : std::cout.rdbuf())
{
	ctor_common();
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::yyFlexLexer( std::istream& arg_yyin, std::ostream& arg_yyout ):
	yyin(arg_yyin.rdbuf()),
	yyout(arg_yyout.rdbuf())
{
	ctor_common();
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::ctor_common()
{
	yy_c_buf_p = 0;
	yy_init = 0;
	yy_start = 0;
	yy_flex_debug = 0;
	yylineno = 1;	// this will only get updated if %option yylineno

	yy_did_buffer_switch_on_eof = 0;

	yy_looking_for_trail_begin = 0;
	yy_more_flag = 0;
	yy_more_len = 0;
	yy_more_offset = yy_prev_more_offset = 0;

	yy_start_stack_ptr = yy_start_stack_depth = 0;
	yy_start_stack = NULL;

	yy_buffer_stack = NULL;
	yy_buffer_stack_top = 0;
	yy_buffer_stack_max = 0;

	yy_state_buf = 0;

}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::~yyFlexLexer()
{
	delete [] yy_state_buf;
	yyfree( yy_start_stack  );
	yy_delete_buffer( YY_CURRENT_BUFFER );
	yyfree( yy_buffer_stack  );
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream& new_in, std::ostream& new_out )
{
	// was if( new_in )
	yy_delete_buffer( YY_CURRENT_BUFFER );
	yy_switch_to_buffer( yy_create_buffer( new_in, YY_BUF_SIZE  ) );

	// was if( new_out )
	yyout.rdbuf(new_out.rdbuf());
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )
{
	if( ! new_in ) {
		new_in = &yyin;
	}

	if ( ! new_out ) {
		new_out = &yyout;
	}

	switch_streams(*new_in, *new_out);
}

#ifdef YY_INTERACTIVE
int yyFlexLexer::LexerInput( char* buf, int /* max_size */ )
#else
int yyFlexLexer::LexerInput( char* buf, int max_size )
#endif
{
	if ( yyin.eof() || yyin.fail() )
		return 0;

#ifdef YY_INTERACTIVE
	yyin.get( buf[0] );

	if ( yyin.eof() )
		return 0;

	if ( yyin.bad() )
		return -1;

	return 1;

#else
	(void) yyin.read( buf, max_size );

	if ( yyin.bad() )
		return -1;
	else
		return yyin.gcount();
#endif
}

void yyFlexLexer::LexerOutput( const char* buf, int size )
{
	(void) yyout.write( buf, size );
}

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
int yyFlexLexer::yy_get_next_buffer()
{
    	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	char *source = (yytext_ptr);
	int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr) - 1);

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yyrealloc( (void *) b->yy_ch_buf,
							 (yy_size_t) (b->yy_buf_size + 2)  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = NULL;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
		/* "- 2" to take care of EOB's */
		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    yy_state_type yyFlexLexer::yy_get_previous_state()
{
	yy_state_type yy_current_state;
	char *yy_cp;
    
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1063 )
				yy_c = yy_meta[yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )
{
	int yy_is_jam;
    	char *yy_cp = (yy_c_buf_p);

	YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		(yy_last_accepting_state) = yy_current_state;
		(yy_last_accepting_cpos) = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1063 )
			yy_c = yy_meta[yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
	yy_is_jam = (yy_current_state == 1062);

		return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_UNPUT
    void yyFlexLexer::yyunput( int c, char* yy_bp)
{
	char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up yytext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		int number_to_move = (yy_n_chars) + 2;
		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

    if ( c == '\n' ){
        --yylineno;
    }

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}
#endif

    int yyFlexLexer::yyinput()
{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (int) ((yy_c_buf_p) - (yytext_ptr));
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return 0;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

	if ( c == '\n' )
		
    yylineno++;
;

	return c;
}

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void yyFlexLexer::yyrestart( std::istream& input_file )
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/** Delegate to the new version that takes an istream reference.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
void yyFlexLexer::yyrestart( std::istream* input_file )
{
	if( ! input_file ) {
		input_file = &yyin;
	}
	yyrestart( *input_file );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

    void yyFlexLexer::yy_load_buffer_state()
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin.rdbuf(YY_CURRENT_BUFFER_LVALUE->yy_input_file);
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream& file, int size )
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/** Delegate creation of buffers to the new version that takes an istream reference.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
	YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )
{
	return yy_create_buffer( *file, size );
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yyfree( (void *) b->yy_ch_buf  );

	yyfree( (void *) b  );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream& file )

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

	b->yy_input_file = file.rdbuf();
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

	b->yy_is_interactive = 0;
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
void yyFlexLexer::yypop_buffer_state (void)
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
void yyFlexLexer::yyensure_buffer_stack(void)
{
	yy_size_t num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
      num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));

		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		yy_size_t grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}

    void yyFlexLexer::yy_push_state( int _new_state )
{
    	if ( (yy_start_stack_ptr) >= (yy_start_stack_depth) )
		{
		yy_size_t new_size;

		(yy_start_stack_depth) += YY_START_STACK_INCR;
		new_size = (yy_size_t) (yy_start_stack_depth) * sizeof( int );

		if ( ! (yy_start_stack) )
			(yy_start_stack) = (int *) yyalloc( new_size  );

		else
			(yy_start_stack) = (int *) yyrealloc(
					(void *) (yy_start_stack), new_size  );

		if ( ! (yy_start_stack) )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	(yy_start_stack)[(yy_start_stack_ptr)++] = YY_START;

	BEGIN(_new_state);
}

    void yyFlexLexer::yy_pop_state()
{
    	if ( --(yy_start_stack_ptr) < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN((yy_start_stack)[(yy_start_stack_ptr)]);
}

    int yyFlexLexer::yy_top_state()
{
    	return (yy_start_stack)[(yy_start_stack_ptr) - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

void yyFlexLexer::LexerError( const char* msg )
{
    	std::cerr << msg << std::endl;
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, const char * s2, int n )
{
		
	int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (const char * s )
{
	int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *yyalloc (yy_size_t  size )
{
			return malloc(size);
}

void *yyrealloc  (void * ptr, yy_size_t  size )
{
		
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return realloc(ptr, size);
}

void yyfree (void * ptr )
{
			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
}

#define YYTABLES_NAME "yytables"

#line 305 "lexico.l"



